

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 26 20:00:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Generated 12/10/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F873A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     0006                     	;# 
    89     0007                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0098                     	;# 
   183     0099                     	;# 
   184     009C                     	;# 
   185     009D                     	;# 
   186     009E                     	;# 
   187     009F                     	;# 
   188     010C                     	;# 
   189     010D                     	;# 
   190     010E                     	;# 
   191     010F                     	;# 
   192     018C                     	;# 
   193     018D                     	;# 
   194                           
   195                           	psect	idataBANK0
   196     07FE                     __pidataBANK0:
   197                           
   198                           ;initializer for _i2c_role
   199     07FE  3401               	retlw	1
   200                           
   201                           	psect	strings
   202     0404                     __pstrings:
   203     0404                     stringtab:
   204     0404                     __stringtab:
   205                           
   206                           ;	String table - string pointers are 1 byte each
   207     0404  1BFF               	btfsc	btemp+1,7
   208     0405  2C0E               	ljmp	stringcode
   209     0406  1383               	bcf	3,7
   210     0407  187F               	btfsc	btemp+1,0
   211     0408  1783               	bsf	3,7
   212     0409  0800               	movf	0,w
   213     040A  0A84               	incf	4,f
   214     040B  1903               	skipnz
   215     040C  0AFF               	incf	btemp+1,f
   216     040D  0008               	return
   217     040E                     stringcode:
   218     040E                     stringdir:
   219     040E  3004               	movlw	high stringdir
   220     040F  008A               	movwf	10
   221     0410  0804               	movf	4,w
   222     0411  0A84               	incf	4,f
   223     0412  0782               	addwf	2,f
   224     0413                     __stringbase:
   225     0413  3400               	retlw	0
   226     0414                     __end_of__stringtab:
   227     0414                     _teclas:
   228     0414  3437               	retlw	55
   229     0415  3438               	retlw	56
   230     0416  3439               	retlw	57
   231     0417  342F               	retlw	47
   232     0418  3434               	retlw	52
   233     0419  3435               	retlw	53
   234     041A  3436               	retlw	54
   235     041B  3458               	retlw	88
   236     041C  3431               	retlw	49
   237     041D  3432               	retlw	50
   238     041E  3433               	retlw	51
   239     041F  342D               	retlw	45
   240     0420  3443               	retlw	67
   241     0421  3430               	retlw	48
   242     0422  343D               	retlw	61
   243     0423  342B               	retlw	43
   244     0424                     __end_of_teclas:
   245     0005                     _PORTAbits	set	5
   246     0006                     _PORTB	set	6
   247     0014                     _SSPCONbits	set	20
   248     0013                     _SSPBUF	set	19
   249     0014                     _SSPCON	set	20
   250     002A                     _RA2	set	42
   251     0029                     _RA1	set	41
   252     0028                     _RA0	set	40
   253     0063                     _SSPIF	set	99
   254     005F                     _GIE	set	95
   255     005E                     _PEIE	set	94
   256     0091                     _SSPCON2	set	145
   257     0085                     _TRISAbits	set	133
   258     0086                     _TRISB	set	134
   259     0085                     _TRISA	set	133
   260     009F                     _ADCON1	set	159
   261     0094                     _SSPSTATbits	set	148
   262     0094                     _SSPSTAT	set	148
   263     0093                     _SSPADD	set	147
   264     048A                     _PEN	set	1162
   265     0488                     _SEN	set	1160
   266     0463                     _SSPIE	set	1123
   267     043C                     _TRISC4	set	1084
   268     043B                     _TRISC3	set	1083
   269     0424                     STR_6:
   270     0424  3464               	retlw	100	;'d'
   271     0425  3465               	retlw	101	;'e'
   272     0426  346C               	retlw	108	;'l'
   273     0427  3420               	retlw	32	;' '
   274     0428  346D               	retlw	109	;'m'
   275     0429  3461               	retlw	97	;'a'
   276     042A  3465               	retlw	101	;'e'
   277     042B  3473               	retlw	115	;'s'
   278     042C  3474               	retlw	116	;'t'
   279     042D  3472               	retlw	114	;'r'
   280     042E  346F               	retlw	111	;'o'
   281     042F  3420               	retlw	32	;' '
   282     0430  342E               	retlw	46	;'.'
   283     0431  3420               	retlw	32	;' '
   284     0432  342E               	retlw	46	;'.'
   285     0433  3420               	retlw	32	;' '
   286     0434  342E               	retlw	46	;'.'
   287     0435  3400               	retlw	0
   288     0436                     STR_4:
   289     0436  3461               	retlw	97	;'a'
   290     0437  346C               	retlw	108	;'l'
   291     0438  3420               	retlw	32	;' '
   292     0439  346D               	retlw	109	;'m'
   293     043A  3461               	retlw	97	;'a'
   294     043B  3465               	retlw	101	;'e'
   295     043C  3473               	retlw	115	;'s'
   296     043D  3474               	retlw	116	;'t'
   297     043E  3472               	retlw	114	;'r'
   298     043F  346F               	retlw	111	;'o'
   299     0440  3420               	retlw	32	;' '
   300     0441  342E               	retlw	46	;'.'
   301     0442  3420               	retlw	32	;' '
   302     0443  342E               	retlw	46	;'.'
   303     0444  3420               	retlw	32	;' '
   304     0445  342E               	retlw	46	;'.'
   305     0446  3400               	retlw	0
   306     0447                     STR_8:
   307     0447  3470               	retlw	112	;'p'
   308     0448  3461               	retlw	97	;'a'
   309     0449  3472               	retlw	114	;'r'
   310     044A  3461               	retlw	97	;'a'
   311     044B  3420               	retlw	32	;' '
   312     044C  346D               	retlw	109	;'m'
   313     044D  3461               	retlw	97	;'a'
   314     044E  3465               	retlw	101	;'e'
   315     044F  3473               	retlw	115	;'s'
   316     0450  3474               	retlw	116	;'t'
   317     0451  3472               	retlw	114	;'r'
   318     0452  346F               	retlw	111	;'o'
   319     0453  342E               	retlw	46	;'.'
   320     0454  342E               	retlw	46	;'.'
   321     0455  342E               	retlw	46	;'.'
   322     0456  3400               	retlw	0
   323     0457                     STR_3:
   324     0457  344D               	retlw	77	;'M'
   325     0458  3465               	retlw	101	;'e'
   326     0459  346E               	retlw	110	;'n'
   327     045A  3473               	retlw	115	;'s'
   328     045B  3461               	retlw	97	;'a'
   329     045C  346A               	retlw	106	;'j'
   330     045D  3465               	retlw	101	;'e'
   331     045E  3420               	retlw	32	;' '
   332     045F  3465               	retlw	101	;'e'
   333     0460  346E               	retlw	110	;'n'
   334     0461  3476               	retlw	118	;'v'
   335     0462  3469               	retlw	105	;'i'
   336     0463  3461               	retlw	97	;'a'
   337     0464  3464               	retlw	100	;'d'
   338     0465  346F               	retlw	111	;'o'
   339     0466  3400               	retlw	0
   340     0467                     STR_1:
   341     0467  3445               	retlw	69	;'E'
   342     0468  3473               	retlw	115	;'s'
   343     0469  3470               	retlw	112	;'p'
   344     046A  3465               	retlw	101	;'e'
   345     046B  3472               	retlw	114	;'r'
   346     046C  3461               	retlw	97	;'a'
   347     046D  3420               	retlw	32	;' '
   348     046E  3464               	retlw	100	;'d'
   349     046F  3465               	retlw	101	;'e'
   350     0470  3420               	retlw	32	;' '
   351     0471  346D               	retlw	109	;'m'
   352     0472  3465               	retlw	101	;'e'
   353     0473  346E               	retlw	110	;'n'
   354     0474  342D               	retlw	45	;'-'
   355     0475  3400               	retlw	0
   356     0476                     STR_5:
   357     0476  3445               	retlw	69	;'E'
   358     0477  3473               	retlw	115	;'s'
   359     0478  3470               	retlw	112	;'p'
   360     0479  3465               	retlw	101	;'e'
   361     047A  3472               	retlw	114	;'r'
   362     047B  3461               	retlw	97	;'a'
   363     047C  346E               	retlw	110	;'n'
   364     047D  3464               	retlw	100	;'d'
   365     047E  346F               	retlw	111	;'o'
   366     047F  3420               	retlw	32	;' '
   367     0480  3472               	retlw	114	;'r'
   368     0481  3465               	retlw	101	;'e'
   369     0482  3473               	retlw	115	;'s'
   370     0483  342D               	retlw	45	;'-'
   371     0484  3400               	retlw	0
   372     0485                     STR_2:
   373     0485  3464               	retlw	100	;'d'
   374     0486  3465               	retlw	101	;'e'
   375     0487  346C               	retlw	108	;'l'
   376     0488  3420               	retlw	32	;' '
   377     0489  346D               	retlw	109	;'m'
   378     048A  3461               	retlw	97	;'a'
   379     048B  3465               	retlw	101	;'e'
   380     048C  3473               	retlw	115	;'s'
   381     048D  3474               	retlw	116	;'t'
   382     048E  3472               	retlw	114	;'r'
   383     048F  346F               	retlw	111	;'o'
   384     0490  342E               	retlw	46	;'.'
   385     0491  342E               	retlw	46	;'.'
   386     0492  342E               	retlw	46	;'.'
   387     0493  3400               	retlw	0
   388     0494                     STR_7:
   389     0494  3445               	retlw	69	;'E'
   390     0495  3473               	retlw	115	;'s'
   391     0496  3463               	retlw	99	;'c'
   392     0497  3472               	retlw	114	;'r'
   393     0498  3469               	retlw	105	;'i'
   394     0499  3462               	retlw	98	;'b'
   395     049A  3461               	retlw	97	;'a'
   396     049B  3420               	retlw	32	;' '
   397     049C  3472               	retlw	114	;'r'
   398     049D  3465               	retlw	101	;'e'
   399     049E  3473               	retlw	115	;'s'
   400     049F  342D               	retlw	45	;'-'
   401     04A0  3400               	retlw	0
   402                           
   403                           	psect	cinit
   404     0013                     start_initialization:	
   405                           ; #config settings
   406                           
   407     0013                     __initialization:
   408                           
   409                           ; Initialize objects allocated to BANK0
   410     0013  118A  27FE  118A   	fcall	__pidataBANK0	;fetch initializer
   411     0016  00DF               	movwf	__pdataBANK0& (0+127)
   412                           
   413                           ; Clear objects allocated to BANK1
   414     0017  1383               	bcf	3,7	;select IRP bank0
   415     0018  30BD               	movlw	low __pbssBANK1
   416     0019  0084               	movwf	4
   417     001A  30CD               	movlw	low (__pbssBANK1+16)
   418     001B  158A  271F  118A   	fcall	clear_ram0
   419                           
   420                           ; Clear objects allocated to BANK0
   421     001E  3043               	movlw	low __pbssBANK0
   422     001F  0084               	movwf	4
   423     0020  305F               	movlw	low (__pbssBANK0+28)
   424     0021  158A  271F  118A   	fcall	clear_ram0
   425     0024                     end_of_initialization:	
   426                           ;End of C runtime variable initialization code
   427                           
   428     0024                     __end_of__initialization:
   429     0024  0183               	clrf	3
   430     0025  118A  2E52         	ljmp	_main	;jump to C main() function
   431                           
   432                           	psect	bssBANK0
   433     0043                     __pbssBANK0:
   434     0043                     ISR@index:
   435     0043                     	ds	2
   436     0045                     _charCount:
   437     0045                     	ds	2
   438     0047                     _allow_input:
   439     0047                     	ds	1
   440     0048                     _cursorPosition:
   441     0048                     	ds	1
   442     0049                     _asciiDigits:
   443     0049                     	ds	1
   444     004A                     _asciiMode:
   445     004A                     	ds	1
   446     004B                     _displayString:
   447     004B                     	ds	16
   448     005B                     _asciiValue:
   449     005B                     	ds	4
   450                           
   451                           	psect	dataBANK0
   452     005F                     __pdataBANK0:
   453     005F                     _i2c_role:
   454     005F                     	ds	1
   455                           
   456                           	psect	bssBANK1
   457     00BD                     __pbssBANK1:
   458     00BD                     ISR@receiveBuffer:
   459     00BD                     	ds	16
   460                           
   461                           	psect	clrtext
   462     0F1F                     clear_ram0:	
   463                           ;	Called with FSR containing the base address, and
   464                           ;	W with the last address+1
   465                           
   466     0F1F  0064               	clrwdt	;clear the watchdog before getting into this loop
   467     0F20                     clrloop0:
   468     0F20  0180               	clrf	0	;clear RAM location pointed to by FSR
   469     0F21  0A84               	incf	4,f	;increment pointer
   470     0F22  0604               	xorwf	4,w	;XOR with final address
   471     0F23  1903               	btfsc	3,2	;have we reached the end yet?
   472     0F24  3400               	retlw	0	;all done for this memory range, return
   473     0F25  0604               	xorwf	4,w	;XOR again to restore value
   474     0F26  2F20               	goto	clrloop0	;do the next byte
   475                           
   476                           	psect	cstackBANK1
   477     00A0                     __pcstackBANK1:
   478     00A0                     ?___lldiv:
   479     00A0                     LCD_setCursor@row:	
   480                           ; 4 bytes @ 0x0
   481                           
   482     00A0                     memset@dest:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     00A0                     Read_Keypad@row:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     00A0                     ___wmul@product:	
   489                           ; 2 bytes @ 0x0
   490                           
   491     00A0                     ___lldiv@divisor:	
   492                           ; 2 bytes @ 0x0
   493                           
   494                           
   495                           ; 4 bytes @ 0x0
   496     00A0                     	ds	1
   497     00A1                     memset@p:
   498     00A1                     _LCD_setCursor$343:	
   499                           ; 1 bytes @ 0x1
   500                           
   501                           
   502                           ; 2 bytes @ 0x1
   503     00A1                     	ds	1
   504     00A2                     ?_atoi:
   505     00A2                     Read_Keypad@col:	
   506                           ; 2 bytes @ 0x2
   507                           
   508                           
   509                           ; 2 bytes @ 0x2
   510     00A2                     	ds	1
   511     00A3                     LCD_setCursor@position:
   512                           
   513                           ; 1 bytes @ 0x3
   514     00A3                     	ds	1
   515     00A4                     ??_atoi:
   516     00A4                     ___lldiv@dividend:	
   517                           ; 1 bytes @ 0x4
   518                           
   519                           
   520                           ; 4 bytes @ 0x4
   521     00A4                     	ds	2
   522     00A6                     atoi@neg:
   523                           
   524                           ; 1 bytes @ 0x6
   525     00A6                     	ds	1
   526     00A7                     atoi@n:
   527                           
   528                           ; 2 bytes @ 0x7
   529     00A7                     	ds	1
   530     00A8                     ___lldiv@quotient:
   531                           
   532                           ; 4 bytes @ 0x8
   533     00A8                     	ds	1
   534     00A9                     atoi@s:
   535                           
   536                           ; 1 bytes @ 0x9
   537     00A9                     	ds	3
   538     00AC                     ___lldiv@counter:
   539                           
   540                           ; 1 bytes @ 0xC
   541     00AC                     	ds	1
   542     00AD                     ??_I2C_Master_Init:
   543                           
   544                           ; 1 bytes @ 0xD
   545     00AD                     	ds	4
   546     00B1                     Send_Message_To_Master@message:
   547                           
   548                           ; 1 bytes @ 0x11
   549     00B1                     	ds	1
   550     00B2                     ??_Handle_Keypress:
   551                           
   552                           ; 1 bytes @ 0x12
   553     00B2                     	ds	3
   554     00B5                     Handle_Keypress@asciiCode:
   555                           
   556                           ; 2 bytes @ 0x15
   557     00B5                     	ds	2
   558     00B7                     Handle_Keypress@i_304:
   559                           
   560                           ; 2 bytes @ 0x17
   561     00B7                     	ds	2
   562     00B9                     Handle_Keypress@i:
   563                           
   564                           ; 1 bytes @ 0x19
   565     00B9                     	ds	1
   566     00BA                     Handle_Keypress@i_299:
   567                           
   568                           ; 1 bytes @ 0x1A
   569     00BA                     	ds	1
   570     00BB                     Handle_Keypress@key:
   571                           
   572                           ; 1 bytes @ 0x1B
   573     00BB                     	ds	1
   574     00BC                     main@key:
   575                           
   576                           ; 1 bytes @ 0x1C
   577     00BC                     	ds	1
   578                           
   579                           	psect	cstackCOMMON
   580     0000                     __pcstackCOMMON:
   581     0000                     ??_I2C_Slave_Init:
   582     0000                     ??_LCD_setCursor:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0000                     ??_LCD_print:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0000                     ??_Prepare_Keypad_Pins:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0000                     ??_Send_Message_To_Master:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0000                     ??_memset:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0000                     ??_Prepare_LCD_Pins:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0000                     ??_I2C_Master_Start:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0000                     ??_I2C_Master_Write:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0000                     ??_I2C_Master_Stop:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0000                     ??_I2C_Master_Wait:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0000                     ??_main:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0000                     ??___wmul:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0000                     ??i1_LCD_setCursor:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0000                     ??i1_LCD_print:	
   622                           ; 1 bytes @ 0x0
   623                           
   624                           
   625                           	psect	cstackBANK0
   626     0020                     __pcstackBANK0:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0020                     ?_LCD_init:
   630     0020                     ?_I2C_Slave_Init:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0020                     ?_LCD_clear:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0020                     ?_Prepare_Keypad_Pins:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0020                     ?_Read_Keypad:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0020                     ?_Handle_Keypress:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0020                     ?_Send_Message_To_Master:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0020                     ?_Prepare_LCD_Pins:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0020                     ?_I2C_Master_Start:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0020                     ?_I2C_Master_Write:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0020                     ?_I2C_Master_Stop:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0020                     ?_I2C_Master_Wait:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0020                     ?_main:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0020                     ?_ISR:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0020                     ?_LCD_command:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0020                     ?_LCD_data:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0020                     ?i1_LCD_command:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0020                     ??i1_LCD_command:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0020                     ?i1_LCD_data:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0020                     ??i1_LCD_data:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0020                     ?i1_LCD_clear:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0020                     ?i1___lldiv:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0020                     i1___lldiv@divisor:	
   694                           ; 4 bytes @ 0x0
   695                           
   696                           
   697                           ; 4 bytes @ 0x0
   698     0020                     	ds	2
   699     0022                     i1LCD_command@command:
   700     0022                     i1LCD_data@data:	
   701                           ; 1 bytes @ 0x2
   702                           
   703                           
   704                           ; 1 bytes @ 0x2
   705     0022                     	ds	1
   706     0023                     ??i1_LCD_clear:
   707     0023                     ?i1_LCD_setCursor:	
   708                           ; 1 bytes @ 0x3
   709                           
   710     0023                     ?i1_LCD_print:	
   711                           ; 1 bytes @ 0x3
   712                           
   713     0023                     i1LCD_setCursor@column:	
   714                           ; 1 bytes @ 0x3
   715                           
   716     0023                     i1LCD_print@string:	
   717                           ; 1 bytes @ 0x3
   718                           
   719                           
   720                           ; 2 bytes @ 0x3
   721     0023                     	ds	1
   722     0024                     i1LCD_setCursor@row:
   723     0024                     i1___lldiv@dividend:	
   724                           ; 1 bytes @ 0x4
   725                           
   726                           
   727                           ; 4 bytes @ 0x4
   728     0024                     	ds	1
   729     0025                     i1_LCD_setCursor$343:
   730                           
   731                           ; 2 bytes @ 0x5
   732     0025                     	ds	2
   733     0027                     i1LCD_setCursor@position:
   734                           
   735                           ; 1 bytes @ 0x7
   736     0027                     	ds	1
   737     0028                     ??i1___lldiv:
   738                           
   739                           ; 1 bytes @ 0x8
   740     0028                     	ds	1
   741     0029                     i1___lldiv@quotient:
   742                           
   743                           ; 4 bytes @ 0x9
   744     0029                     	ds	4
   745     002D                     i1___lldiv@counter:
   746                           
   747                           ; 1 bytes @ 0xD
   748     002D                     	ds	1
   749     002E                     ?i1_I2C_Master_Init:
   750     002E                     i1I2C_Master_Init@c:	
   751                           ; 1 bytes @ 0xE
   752                           
   753                           
   754                           ; 4 bytes @ 0xE
   755     002E                     	ds	4
   756     0032                     ??i1_I2C_Master_Init:
   757                           
   758                           ; 1 bytes @ 0x12
   759     0032                     	ds	4
   760     0036                     ??_ISR:
   761                           
   762                           ; 1 bytes @ 0x16
   763     0036                     	ds	7
   764     003D                     ISR@temp:
   765                           
   766                           ; 1 bytes @ 0x1D
   767     003D                     	ds	1
   768     003E                     ??_Read_Keypad:
   769     003E                     ?_memset:	
   770                           ; 1 bytes @ 0x1E
   771                           
   772     003E                     ??_LCD_command:	
   773                           ; 1 bytes @ 0x1E
   774                           
   775     003E                     ??_LCD_data:	
   776                           ; 1 bytes @ 0x1E
   777                           
   778     003E                     ??___lldiv:	
   779                           ; 1 bytes @ 0x1E
   780                           
   781     003E                     ?___wmul:	
   782                           ; 1 bytes @ 0x1E
   783                           
   784     003E                     I2C_Slave_Init@address:	
   785                           ; 2 bytes @ 0x1E
   786                           
   787     003E                     I2C_Master_Write@data:	
   788                           ; 1 bytes @ 0x1E
   789                           
   790     003E                     ___wmul@multiplier:	
   791                           ; 1 bytes @ 0x1E
   792                           
   793     003E                     memset@c:	
   794                           ; 2 bytes @ 0x1E
   795                           
   796                           
   797                           ; 2 bytes @ 0x1E
   798     003E                     	ds	1
   799     003F                     ?_I2C_Master_Init:
   800     003F                     I2C_Master_Init@c:	
   801                           ; 1 bytes @ 0x1F
   802                           
   803                           
   804                           ; 4 bytes @ 0x1F
   805     003F                     	ds	1
   806     0040                     LCD_command@command:
   807     0040                     LCD_data@data:	
   808                           ; 1 bytes @ 0x20
   809                           
   810     0040                     ___wmul@multiplicand:	
   811                           ; 1 bytes @ 0x20
   812                           
   813     0040                     memset@n:	
   814                           ; 2 bytes @ 0x20
   815                           
   816                           
   817                           ; 2 bytes @ 0x20
   818     0040                     	ds	1
   819     0041                     ??_LCD_init:
   820     0041                     ??_LCD_clear:	
   821                           ; 1 bytes @ 0x21
   822                           
   823     0041                     ?_LCD_setCursor:	
   824                           ; 1 bytes @ 0x21
   825                           
   826     0041                     ?_LCD_print:	
   827                           ; 1 bytes @ 0x21
   828                           
   829     0041                     LCD_setCursor@column:	
   830                           ; 1 bytes @ 0x21
   831                           
   832     0041                     LCD_print@string:	
   833                           ; 1 bytes @ 0x21
   834                           
   835                           
   836                           ; 2 bytes @ 0x21
   837     0041                     	ds	2
   838                           
   839                           	psect	maintext
   840     0652                     __pmaintext:	
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 94 in file "env_esclavo.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  key             1   28[BANK1 ] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : B00/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1
   860 ;;      Params:         0       0       0
   861 ;;      Locals:         0       0       1
   862 ;;      Temps:          0       0       0
   863 ;;      Totals:         0       0       1
   864 ;;Total ram usage:        1 bytes
   865 ;; Hardware stack levels required when called: 7
   866 ;; This function calls:
   867 ;;		_Handle_Keypress
   868 ;;		_I2C_Slave_Init
   869 ;;		_LCD_clear
   870 ;;		_LCD_init
   871 ;;		_LCD_print
   872 ;;		_LCD_setCursor
   873 ;;		_Prepare_Keypad_Pins
   874 ;;		_Read_Keypad
   875 ;; This function is called by:
   876 ;;		Startup code after reset
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880     0652                     _main:	
   881                           ;psect for function _main
   882                           
   883     0652                     l2334:	
   884                           ;incstack = 0
   885                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   886                           
   887                           
   888                           ;env_esclavo.c: 95:     LCD_init();
   889     0652  118A  2605  118A   	fcall	_LCD_init
   890                           
   891                           ;env_esclavo.c: 96:     I2C_Slave_Init(0x10);
   892     0655  3010               	movlw	16
   893     0656  118A  27EA  118A   	fcall	_I2C_Slave_Init
   894                           
   895                           ;env_esclavo.c: 98:     LCD_clear();
   896     0659  158A  2758  118A   	fcall	_LCD_clear
   897     065C                     l2336:
   898                           
   899                           ;env_esclavo.c: 99:     LCD_setCursor(1, 0);
   900     065C  1283               	bcf	3,5	;RP0=0, select bank0
   901     065D  1303               	bcf	3,6	;RP1=0, select bank0
   902     065E  01C1               	clrf	LCD_setCursor@column
   903     065F  3001               	movlw	1
   904     0660  158A  27E0  118A   	fcall	_LCD_setCursor
   905     0663                     l2338:
   906                           
   907                           ;env_esclavo.c: 100:     LCD_print("Espera de men-");
   908     0663  3054               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   909     0664  1283               	bcf	3,5	;RP0=0, select bank0
   910     0665  1303               	bcf	3,6	;RP1=0, select bank0
   911     0666  00C1               	movwf	LCD_print@string
   912     0667  3080               	movlw	128
   913     0668  00C2               	movwf	LCD_print@string+1
   914     0669  118A  27A6  118A   	fcall	_LCD_print
   915     066C                     l2340:
   916                           
   917                           ;env_esclavo.c: 101:     LCD_setCursor(2,0);
   918     066C  1283               	bcf	3,5	;RP0=0, select bank0
   919     066D  1303               	bcf	3,6	;RP1=0, select bank0
   920     066E  01C1               	clrf	LCD_setCursor@column
   921     066F  3002               	movlw	2
   922     0670  158A  27E0  118A   	fcall	_LCD_setCursor
   923     0673                     l2342:
   924                           
   925                           ;env_esclavo.c: 102:     LCD_print("del maestro...");
   926     0673  3072               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   927     0674  1283               	bcf	3,5	;RP0=0, select bank0
   928     0675  1303               	bcf	3,6	;RP1=0, select bank0
   929     0676  00C1               	movwf	LCD_print@string
   930     0677  3080               	movlw	128
   931     0678  00C2               	movwf	LCD_print@string+1
   932     0679  118A  27A6  118A   	fcall	_LCD_print
   933     067C                     l2344:
   934                           
   935                           ;env_esclavo.c: 105:         if (allow_input) {
   936     067C  1283               	bcf	3,5	;RP0=0, select bank0
   937     067D  1303               	bcf	3,6	;RP1=0, select bank0
   938     067E  0847               	movf	_allow_input,w	;volatile
   939     067F  1903               	btfsc	3,2
   940     0680  2E82               	goto	u2191
   941     0681  2E83               	goto	u2190
   942     0682                     u2191:
   943     0682  2E7C               	goto	l2344
   944     0683                     u2190:
   945     0683                     l2346:
   946                           
   947                           ;env_esclavo.c: 106:             Prepare_Keypad_Pins();
   948     0683  158A  2727  118A   	fcall	_Prepare_Keypad_Pins
   949     0686                     l2348:
   950                           
   951                           ;env_esclavo.c: 107:             char key = Read_Keypad();
   952     0686  118A  2359  118A   	fcall	_Read_Keypad
   953     0689  1683               	bsf	3,5	;RP0=1, select bank1
   954     068A  1303               	bcf	3,6	;RP1=0, select bank1
   955     068B  00BC               	movwf	main@key^(0+128)
   956     068C                     l2350:
   957                           
   958                           ;env_esclavo.c: 108:             if (key !=0) {
   959     068C  083C               	movf	main@key^(0+128),w
   960     068D  1903               	btfsc	3,2
   961     068E  2E90               	goto	u2201
   962     068F  2E91               	goto	u2200
   963     0690                     u2201:
   964     0690  2E7C               	goto	l2344
   965     0691                     u2200:
   966     0691                     l2352:
   967                           
   968                           ;env_esclavo.c: 109:                 Handle_Keypress(key);
   969     0691  083C               	movf	main@key^(0+128),w
   970     0692  118A  2027  118A   	fcall	_Handle_Keypress
   971     0695  2E7C               	goto	l2344
   972     0696  118A  2811         	ljmp	start
   973     0698                     __end_of_main:
   974                           
   975                           	psect	text1
   976     0359                     __ptext1:	
   977 ;; *************** function _Read_Keypad *****************
   978 ;; Defined at:
   979 ;;		line 336 in file "env_esclavo.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  col             2    2[BANK1 ] int 
   984 ;;  row             2    0[BANK1 ] int 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      unsigned char 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1
   994 ;;      Params:         0       0       0
   995 ;;      Locals:         0       0       4
   996 ;;      Temps:          0       2       0
   997 ;;      Totals:         0       2       4
   998 ;;Total ram usage:        6 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 3
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008     0359                     _Read_Keypad:	
  1009                           ;psect for function _Read_Keypad
  1010                           
  1011     0359                     l2134:	
  1012                           ;incstack = 0
  1013                           ; Regs used in _Read_Keypad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1014                           
  1015                           
  1016                           ;env_esclavo.c: 337:     for(int row = 0; row < 4; row++) {
  1017     0359  1683               	bsf	3,5	;RP0=1, select bank1
  1018     035A  1303               	bcf	3,6	;RP1=0, select bank1
  1019     035B  01A0               	clrf	Read_Keypad@row^(0+128)
  1020     035C  01A1               	clrf	(Read_Keypad@row+1)^(0+128)
  1021     035D                     l2136:
  1022     035D  0821               	movf	(Read_Keypad@row+1)^(0+128),w
  1023     035E  3A80               	xorlw	128
  1024     035F  00FF               	movwf	btemp+1
  1025     0360  3080               	movlw	128
  1026     0361  027F               	subwf	btemp+1,w
  1027     0362  1D03               	skipz
  1028     0363  2B66               	goto	u1845
  1029     0364  3004               	movlw	4
  1030     0365  0220               	subwf	Read_Keypad@row^(0+128),w
  1031     0366                     u1845:
  1032     0366  1C03               	skipc
  1033     0367  2B69               	goto	u1841
  1034     0368  2B6A               	goto	u1840
  1035     0369                     u1841:
  1036     0369  2B6B               	goto	l2140
  1037     036A                     u1840:
  1038     036A  2C02               	goto	l2174
  1039     036B                     l2140:
  1040                           
  1041                           ;env_esclavo.c: 339:         PORTB = (unsigned char)~(0x10 << row);
  1042     036B  3010               	movlw	16
  1043     036C  1283               	bcf	3,5	;RP0=0, select bank0
  1044     036D  1303               	bcf	3,6	;RP1=0, select bank0
  1045     036E  00BE               	movwf	??_Read_Keypad
  1046     036F  1683               	bsf	3,5	;RP0=1, select bank1
  1047     0370  1303               	bcf	3,6	;RP1=0, select bank1
  1048     0371  0A20               	incf	Read_Keypad@row^(0+128),w
  1049     0372  1283               	bcf	3,5	;RP0=0, select bank0
  1050     0373  1303               	bcf	3,6	;RP1=0, select bank0
  1051     0374  2B77               	goto	u1854
  1052     0375                     u1855:
  1053     0375  1003               	clrc
  1054     0376  0DBE               	rlf	??_Read_Keypad,f
  1055     0377                     u1854:
  1056     0377  3EFF               	addlw	-1
  1057     0378  1D03               	skipz
  1058     0379  2B75               	goto	u1855
  1059     037A  083E               	movf	??_Read_Keypad,w
  1060     037B  3AFF               	xorlw	255
  1061     037C  0086               	movwf	6	;volatile
  1062     037D                     l2142:
  1063                           
  1064                           ;env_esclavo.c: 342:         TRISB = 0x0F;
  1065     037D  300F               	movlw	15
  1066     037E  1683               	bsf	3,5	;RP0=1, select bank1
  1067     037F  1303               	bcf	3,6	;RP1=0, select bank1
  1068     0380  0086               	movwf	6	;volatile
  1069     0381                     l2144:
  1070                           
  1071                           ;env_esclavo.c: 344:         _delay((unsigned long)((20)*(4000000/4000.0)));
  1072     0381  301A               	movlw	26
  1073     0382  1283               	bcf	3,5	;RP0=0, select bank0
  1074     0383  1303               	bcf	3,6	;RP1=0, select bank0
  1075     0384  00BF               	movwf	??_Read_Keypad+1
  1076     0385  30F8               	movlw	248
  1077     0386  00BE               	movwf	??_Read_Keypad
  1078     0387                     u2217:
  1079     0387  0BBE               	decfsz	??_Read_Keypad,f
  1080     0388  2B87               	goto	u2217
  1081     0389  0BBF               	decfsz	??_Read_Keypad+1,f
  1082     038A  2B87               	goto	u2217
  1083     038B                     l2146:
  1084                           
  1085                           ;env_esclavo.c: 346:         for(int col = 0; col < 4; col++) {
  1086     038B  1683               	bsf	3,5	;RP0=1, select bank1
  1087     038C  1303               	bcf	3,6	;RP1=0, select bank1
  1088     038D  01A2               	clrf	Read_Keypad@col^(0+128)
  1089     038E  01A3               	clrf	(Read_Keypad@col+1)^(0+128)
  1090     038F                     l2152:
  1091                           
  1092                           ;env_esclavo.c: 348:             if(!(PORTB & (0x01 << col))) {
  1093     038F  3001               	movlw	1
  1094     0390  1283               	bcf	3,5	;RP0=0, select bank0
  1095     0391  1303               	bcf	3,6	;RP1=0, select bank0
  1096     0392  00BE               	movwf	??_Read_Keypad
  1097     0393  1683               	bsf	3,5	;RP0=1, select bank1
  1098     0394  1303               	bcf	3,6	;RP1=0, select bank1
  1099     0395  0A22               	incf	Read_Keypad@col^(0+128),w
  1100     0396  1283               	bcf	3,5	;RP0=0, select bank0
  1101     0397  1303               	bcf	3,6	;RP1=0, select bank0
  1102     0398  2B9B               	goto	u1864
  1103     0399                     u1865:
  1104     0399  1003               	clrc
  1105     039A  0DBE               	rlf	??_Read_Keypad,f
  1106     039B                     u1864:
  1107     039B  3EFF               	addlw	-1
  1108     039C  1D03               	skipz
  1109     039D  2B99               	goto	u1865
  1110     039E  083E               	movf	??_Read_Keypad,w
  1111     039F  0506               	andwf	6,w	;volatile
  1112     03A0  1D03               	btfss	3,2
  1113     03A1  2BA3               	goto	u1871
  1114     03A2  2BA4               	goto	u1870
  1115     03A3                     u1871:
  1116     03A3  2BE2               	goto	l2166
  1117     03A4                     u1870:
  1118     03A4                     l2156:
  1119     03A4  3001               	movlw	1
  1120     03A5  00BE               	movwf	??_Read_Keypad
  1121     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1122     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1123     03A8  0A22               	incf	Read_Keypad@col^(0+128),w
  1124     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1125     03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1126     03AB  2BAE               	goto	u1884
  1127     03AC                     u1885:
  1128     03AC  1003               	clrc
  1129     03AD  0DBE               	rlf	??_Read_Keypad,f
  1130     03AE                     u1884:
  1131     03AE  3EFF               	addlw	-1
  1132     03AF  1D03               	skipz
  1133     03B0  2BAC               	goto	u1885
  1134     03B1  083E               	movf	??_Read_Keypad,w
  1135     03B2  0506               	andwf	6,w	;volatile
  1136     03B3  1903               	btfsc	3,2
  1137     03B4  2BB6               	goto	u1891
  1138     03B5  2BB7               	goto	u1890
  1139     03B6                     u1891:
  1140     03B6  2BA4               	goto	l2156
  1141     03B7                     u1890:
  1142     03B7                     l216:
  1143                           
  1144                           ;env_esclavo.c: 350:                 PORTAbits.RA3 = 0;
  1145     03B7  1185               	bcf	5,3	;volatile
  1146     03B8                     l2158:
  1147                           
  1148                           ;env_esclavo.c: 351:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1149     03B8  3082               	movlw	130
  1150     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1151     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1152     03BB  00BF               	movwf	??_Read_Keypad+1
  1153     03BC  30DD               	movlw	221
  1154     03BD  00BE               	movwf	??_Read_Keypad
  1155     03BE                     u2227:
  1156     03BE  0BBE               	decfsz	??_Read_Keypad,f
  1157     03BF  2BBE               	goto	u2227
  1158     03C0  0BBF               	decfsz	??_Read_Keypad+1,f
  1159     03C1  2BBE               	goto	u2227
  1160     03C2  0000               	nop
  1161     03C3                     l2160:
  1162                           
  1163                           ;env_esclavo.c: 352:                 PORTAbits.RA3 = 1;
  1164     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1165     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1166     03C5  1585               	bsf	5,3	;volatile
  1167                           
  1168                           ;env_esclavo.c: 354:                 TRISB = 0xF0;
  1169     03C6  30F0               	movlw	240
  1170     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1171     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  1172     03C9  0086               	movwf	6	;volatile
  1173     03CA                     l2162:
  1174                           
  1175                           ;env_esclavo.c: 356:                 return teclas[row][col];
  1176     03CA  0820               	movf	Read_Keypad@row^(0+128),w
  1177     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1178     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1179     03CD  00BE               	movwf	??_Read_Keypad
  1180     03CE  3002               	movlw	2
  1181     03CF                     u1905:
  1182     03CF  1003               	clrc
  1183     03D0  0DBE               	rlf	??_Read_Keypad,f
  1184     03D1  3EFF               	addlw	-1
  1185     03D2  1D03               	skipz
  1186     03D3  2BCF               	goto	u1905
  1187     03D4  3001               	movlw	(low ((_teclas-__stringbase)| (0+32768)))& (0+255)
  1188     03D5  073E               	addwf	??_Read_Keypad,w
  1189     03D6  00BF               	movwf	??_Read_Keypad+1
  1190     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  1191     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  1192     03D9  0822               	movf	Read_Keypad@col^(0+128),w
  1193     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1194     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1195     03DC  073F               	addwf	??_Read_Keypad+1,w
  1196     03DD  0084               	movwf	4
  1197     03DE  118A  240E  118A   	fcall	stringdir
  1198     03E1  2C03               	goto	l217
  1199     03E2                     l2166:
  1200                           
  1201                           ;env_esclavo.c: 358:         }
  1202     03E2  3001               	movlw	1
  1203     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  1204     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  1205     03E5  07A2               	addwf	Read_Keypad@col^(0+128),f
  1206     03E6  1803               	skipnc
  1207     03E7  0AA3               	incf	(Read_Keypad@col+1)^(0+128),f
  1208     03E8  3000               	movlw	0
  1209     03E9  07A3               	addwf	(Read_Keypad@col+1)^(0+128),f
  1210     03EA                     l2168:
  1211     03EA  0823               	movf	(Read_Keypad@col+1)^(0+128),w
  1212     03EB  3A80               	xorlw	128
  1213     03EC  00FF               	movwf	btemp+1
  1214     03ED  3080               	movlw	128
  1215     03EE  027F               	subwf	btemp+1,w
  1216     03EF  1D03               	skipz
  1217     03F0  2BF3               	goto	u1915
  1218     03F1  3004               	movlw	4
  1219     03F2  0222               	subwf	Read_Keypad@col^(0+128),w
  1220     03F3                     u1915:
  1221     03F3  1C03               	skipc
  1222     03F4  2BF6               	goto	u1911
  1223     03F5  2BF7               	goto	u1910
  1224     03F6                     u1911:
  1225     03F6  2B8F               	goto	l2152
  1226     03F7                     u1910:
  1227     03F7                     l2170:
  1228                           
  1229                           ;env_esclavo.c: 361:         TRISB = 0xF0;
  1230     03F7  30F0               	movlw	240
  1231     03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1232     03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1233     03FA  0086               	movwf	6	;volatile
  1234                           
  1235                           ;env_esclavo.c: 362:     }
  1236     03FB  3001               	movlw	1
  1237     03FC  07A0               	addwf	Read_Keypad@row^(0+128),f
  1238     03FD  1803               	skipnc
  1239     03FE  0AA1               	incf	(Read_Keypad@row+1)^(0+128),f
  1240     03FF  3000               	movlw	0
  1241     0400  07A1               	addwf	(Read_Keypad@row+1)^(0+128),f
  1242     0401  2B5D               	goto	l2136
  1243     0402                     l2174:
  1244                           
  1245                           ;env_esclavo.c: 364:     return 0;
  1246     0402  3000               	movlw	0
  1247     0403                     l217:
  1248     0403  0008               	return
  1249     0404                     __end_of_Read_Keypad:
  1250                           
  1251                           	psect	text2
  1252     0F27                     __ptext2:	
  1253 ;; *************** function _Prepare_Keypad_Pins *****************
  1254 ;; Defined at:
  1255 ;;		line 368 in file "env_esclavo.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1
  1269 ;;      Params:         0       0       0
  1270 ;;      Locals:         0       0       0
  1271 ;;      Temps:          0       0       0
  1272 ;;      Totals:         0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 3
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283     0F27                     _Prepare_Keypad_Pins:	
  1284                           ;psect for function _Prepare_Keypad_Pins
  1285                           
  1286     0F27                     l2132:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _Prepare_Keypad_Pins: [wreg]
  1289                           
  1290                           
  1291                           ;env_esclavo.c: 370:     TRISB = 0xF0;
  1292     0F27  30F0               	movlw	240
  1293     0F28  1683               	bsf	3,5	;RP0=1, select bank1
  1294     0F29  1303               	bcf	3,6	;RP1=0, select bank1
  1295     0F2A  0086               	movwf	6	;volatile
  1296                           
  1297                           ;env_esclavo.c: 371:     PORTB = 0x0F;
  1298     0F2B  300F               	movlw	15
  1299     0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1300     0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1301     0F2E  0086               	movwf	6	;volatile
  1302     0F2F                     l220:
  1303     0F2F  0008               	return
  1304     0F30                     __end_of_Prepare_Keypad_Pins:
  1305                           
  1306                           	psect	text3
  1307     0027                     __ptext3:	
  1308 ;; *************** function _Handle_Keypress *****************
  1309 ;; Defined at:
  1310 ;;		line 116 in file "env_esclavo.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  key             1    wreg     unsigned char 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  key             1   27[BANK1 ] unsigned char 
  1315 ;;  i               1   25[BANK1 ] unsigned char 
  1316 ;;  i               2   23[BANK1 ] int 
  1317 ;;  i               1   26[BANK1 ] unsigned char 
  1318 ;;  asciiCode       2   21[BANK1 ] int 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1
  1328 ;;      Params:         0       0       0
  1329 ;;      Locals:         0       0       7
  1330 ;;      Temps:          0       0       3
  1331 ;;      Totals:         0       0      10
  1332 ;;Total ram usage:       10 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 6
  1335 ;; This function calls:
  1336 ;;		_LCD_clear
  1337 ;;		_LCD_init
  1338 ;;		_LCD_print
  1339 ;;		_LCD_setCursor
  1340 ;;		_Prepare_LCD_Pins
  1341 ;;		_Send_Message_To_Master
  1342 ;;		_atoi
  1343 ;;		_memset
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     0027                     _Handle_Keypress:	
  1350                           ;psect for function _Handle_Keypress
  1351                           
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _Handle_Keypress: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1355                           ;Handle_Keypress@key stored from wreg
  1356     0027  1683               	bsf	3,5	;RP0=1, select bank1
  1357     0028  1303               	bcf	3,6	;RP1=0, select bank1
  1358     0029  00BB               	movwf	Handle_Keypress@key^(0+128)
  1359     002A                     l2178:
  1360                           
  1361                           ;env_esclavo.c: 117:     LCD_init();
  1362     002A  118A  2605  118A   	fcall	_LCD_init
  1363     002D                     l2180:
  1364                           
  1365                           ;env_esclavo.c: 120:     if (asciiMode) {
  1366     002D  1283               	bcf	3,5	;RP0=0, select bank0
  1367     002E  1303               	bcf	3,6	;RP1=0, select bank0
  1368     002F  084A               	movf	_asciiMode,w
  1369     0030  1903               	btfsc	3,2
  1370     0031  2833               	goto	u1921
  1371     0032  2834               	goto	u1920
  1372     0033                     u1921:
  1373     0033  28E6               	goto	l2228
  1374     0034                     u1920:
  1375     0034                     l2182:
  1376                           
  1377                           ;env_esclavo.c: 121:         if (key == '=') {
  1378     0034  303D               	movlw	61
  1379     0035  1683               	bsf	3,5	;RP0=1, select bank1
  1380     0036  1303               	bcf	3,6	;RP1=0, select bank1
  1381     0037  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1382     0038  1D03               	btfss	3,2
  1383     0039  283B               	goto	u1931
  1384     003A  283C               	goto	u1930
  1385     003B                     u1931:
  1386     003B  28BE               	goto	l2216
  1387     003C                     u1930:
  1388     003C                     l2184:
  1389                           
  1390                           ;env_esclavo.c: 123:             int asciiCode = atoi(asciiValue);
  1391     003C  305B               	movlw	(low (_asciiValue| 0))& (0+255)
  1392     003D  118A  24A1  118A   	fcall	_atoi
  1393     0040  1683               	bsf	3,5	;RP0=1, select bank1
  1394     0041  1303               	bcf	3,6	;RP1=0, select bank1
  1395     0042  0823               	movf	(?_atoi+1)^(0+128),w
  1396     0043  00B6               	movwf	(Handle_Keypress@asciiCode+1)^(0+128)
  1397     0044  0822               	movf	?_atoi^(0+128),w
  1398     0045  00B5               	movwf	Handle_Keypress@asciiCode^(0+128)
  1399     0046                     l2186:
  1400                           
  1401                           ;env_esclavo.c: 124:             if (asciiCode >= 33 && asciiCode <= 254) {
  1402     0046  0836               	movf	(Handle_Keypress@asciiCode+1)^(0+128),w
  1403     0047  3A80               	xorlw	128
  1404     0048  00FF               	movwf	btemp+1
  1405     0049  3080               	movlw	128
  1406     004A  027F               	subwf	btemp+1,w
  1407     004B  1D03               	skipz
  1408     004C  284F               	goto	u1945
  1409     004D  3021               	movlw	33
  1410     004E  0235               	subwf	Handle_Keypress@asciiCode^(0+128),w
  1411     004F                     u1945:
  1412     004F  1C03               	skipc
  1413     0050  2852               	goto	u1941
  1414     0051  2853               	goto	u1940
  1415     0052                     u1941:
  1416     0052  28B8               	goto	l2210
  1417     0053                     u1940:
  1418     0053                     l2188:
  1419     0053  1683               	bsf	3,5	;RP0=1, select bank1
  1420     0054  1303               	bcf	3,6	;RP1=0, select bank1
  1421     0055  0836               	movf	(Handle_Keypress@asciiCode+1)^(0+128),w
  1422     0056  3A80               	xorlw	128
  1423     0057  00FF               	movwf	btemp+1
  1424     0058  3080               	movlw	128
  1425     0059  027F               	subwf	btemp+1,w
  1426     005A  1D03               	skipz
  1427     005B  285E               	goto	u1955
  1428     005C  30FF               	movlw	255
  1429     005D  0235               	subwf	Handle_Keypress@asciiCode^(0+128),w
  1430     005E                     u1955:
  1431     005E  1803               	skipnc
  1432     005F  2861               	goto	u1951
  1433     0060  2862               	goto	u1950
  1434     0061                     u1951:
  1435     0061  28B8               	goto	l2210
  1436     0062                     u1950:
  1437     0062                     l2190:
  1438                           
  1439                           ;env_esclavo.c: 125:                 if (charCount < 16) {
  1440     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1441     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1442     0064  0846               	movf	_charCount+1,w
  1443     0065  3A80               	xorlw	128
  1444     0066  00FF               	movwf	btemp+1
  1445     0067  3080               	movlw	128
  1446     0068  027F               	subwf	btemp+1,w
  1447     0069  1D03               	skipz
  1448     006A  286D               	goto	u1965
  1449     006B  3010               	movlw	16
  1450     006C  0245               	subwf	_charCount,w
  1451     006D                     u1965:
  1452     006D  1803               	skipnc
  1453     006E  2870               	goto	u1961
  1454     006F  2871               	goto	u1960
  1455     0070                     u1961:
  1456     0070  28B8               	goto	l2210
  1457     0071                     u1960:
  1458     0071                     l2192:
  1459                           
  1460                           ;env_esclavo.c: 126:                     for (unsigned char i = charCount; i > cursorPos
      +                          ition; i--) {
  1461     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0072  1303               	bcf	3,6	;RP1=0, select bank0
  1463     0073  0845               	movf	_charCount,w
  1464     0074  1683               	bsf	3,5	;RP0=1, select bank1
  1465     0075  1303               	bcf	3,6	;RP1=0, select bank1
  1466     0076  00B9               	movwf	Handle_Keypress@i^(0+128)
  1467     0077  2887               	goto	l2198
  1468     0078                     l2194:
  1469                           
  1470                           ;env_esclavo.c: 127:                         displayString[i] = displayString[i - 1];
  1471     0078  1683               	bsf	3,5	;RP0=1, select bank1
  1472     0079  1303               	bcf	3,6	;RP1=0, select bank1
  1473     007A  0839               	movf	Handle_Keypress@i^(0+128),w
  1474     007B  3E4A               	addlw	(low ((_displayString| 0+255)))& (0+255)
  1475     007C  0084               	movwf	4
  1476     007D  1383               	bcf	3,7	;select IRP bank0
  1477     007E  0800               	movf	0,w
  1478     007F  00FF               	movwf	btemp+1
  1479     0080  0839               	movf	Handle_Keypress@i^(0+128),w
  1480     0081  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1481     0082  0084               	movwf	4
  1482     0083  087F               	movf	btemp+1,w
  1483     0084  0080               	movwf	0
  1484     0085                     l2196:
  1485                           
  1486                           ;env_esclavo.c: 128:                     }
  1487     0085  3001               	movlw	1
  1488     0086  02B9               	subwf	Handle_Keypress@i^(0+128),f
  1489     0087                     l2198:
  1490     0087  0839               	movf	Handle_Keypress@i^(0+128),w
  1491     0088  1283               	bcf	3,5	;RP0=0, select bank0
  1492     0089  1303               	bcf	3,6	;RP1=0, select bank0
  1493     008A  0248               	subwf	_cursorPosition,w
  1494     008B  1C03               	skipc
  1495     008C  288E               	goto	u1971
  1496     008D  288F               	goto	u1970
  1497     008E                     u1971:
  1498     008E  2878               	goto	l2194
  1499     008F                     u1970:
  1500     008F                     l2200:
  1501                           
  1502                           ;env_esclavo.c: 129:                     displayString[cursorPosition] = (char)asciiCode
      +                          ;
  1503     008F  0848               	movf	_cursorPosition,w
  1504     0090  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1505     0091  0084               	movwf	4
  1506     0092  1683               	bsf	3,5	;RP0=1, select bank1
  1507     0093  1303               	bcf	3,6	;RP1=0, select bank1
  1508     0094  0835               	movf	Handle_Keypress@asciiCode^(0+128),w
  1509     0095  1383               	bcf	3,7	;select IRP bank0
  1510     0096  0080               	movwf	0
  1511     0097                     l2202:
  1512                           
  1513                           ;env_esclavo.c: 130:                     if (cursorPosition < 16) cursorPosition++;
  1514     0097  3010               	movlw	16
  1515     0098  1283               	bcf	3,5	;RP0=0, select bank0
  1516     0099  1303               	bcf	3,6	;RP1=0, select bank0
  1517     009A  0248               	subwf	_cursorPosition,w
  1518     009B  1803               	skipnc
  1519     009C  289E               	goto	u1981
  1520     009D  289F               	goto	u1980
  1521     009E                     u1981:
  1522     009E  28A3               	goto	l2206
  1523     009F                     u1980:
  1524     009F                     l2204:
  1525     009F  3001               	movlw	1
  1526     00A0  00FF               	movwf	btemp+1
  1527     00A1  087F               	movf	btemp+1,w
  1528     00A2  07C8               	addwf	_cursorPosition,f
  1529     00A3                     l2206:
  1530                           
  1531                           ;env_esclavo.c: 131:                     if (charCount < 16) charCount++;
  1532     00A3  0846               	movf	_charCount+1,w
  1533     00A4  3A80               	xorlw	128
  1534     00A5  00FF               	movwf	btemp+1
  1535     00A6  3080               	movlw	128
  1536     00A7  027F               	subwf	btemp+1,w
  1537     00A8  1D03               	skipz
  1538     00A9  28AC               	goto	u1995
  1539     00AA  3010               	movlw	16
  1540     00AB  0245               	subwf	_charCount,w
  1541     00AC                     u1995:
  1542     00AC  1803               	skipnc
  1543     00AD  28AF               	goto	u1991
  1544     00AE  28B0               	goto	u1990
  1545     00AF                     u1991:
  1546     00AF  28B8               	goto	l2210
  1547     00B0                     u1990:
  1548     00B0                     l2208:
  1549     00B0  3001               	movlw	1
  1550     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1551     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1552     00B3  07C5               	addwf	_charCount,f
  1553     00B4  1803               	skipnc
  1554     00B5  0AC6               	incf	_charCount+1,f
  1555     00B6  3000               	movlw	0
  1556     00B7  07C6               	addwf	_charCount+1,f
  1557     00B8                     l2210:
  1558                           
  1559                           ;env_esclavo.c: 134:             asciiMode = 0;
  1560     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1561     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1562     00BA  01CA               	clrf	_asciiMode
  1563     00BB                     l2212:
  1564                           
  1565                           ;env_esclavo.c: 135:             asciiDigits = 0;
  1566     00BB  01C9               	clrf	_asciiDigits
  1567     00BC                     l2214:
  1568                           
  1569                           ;env_esclavo.c: 136:             asciiValue[0] = '\0';
  1570     00BC  01DB               	clrf	_asciiValue
  1571                           
  1572                           ;env_esclavo.c: 137:         } else if (key >= '0' && key <= '9' && asciiDigits < 3) {
  1573     00BD  2A8D               	goto	l149
  1574     00BE                     l2216:
  1575     00BE  3030               	movlw	48
  1576     00BF  023B               	subwf	Handle_Keypress@key^(0+128),w
  1577     00C0  1C03               	skipc
  1578     00C1  28C3               	goto	u2001
  1579     00C2  28C4               	goto	u2000
  1580     00C3                     u2001:
  1581     00C3  2A8D               	goto	l149
  1582     00C4                     u2000:
  1583     00C4                     l2218:
  1584     00C4  303A               	movlw	58
  1585     00C5  023B               	subwf	Handle_Keypress@key^(0+128),w
  1586     00C6  1803               	skipnc
  1587     00C7  28C9               	goto	u2011
  1588     00C8  28CA               	goto	u2010
  1589     00C9                     u2011:
  1590     00C9  2A8D               	goto	l149
  1591     00CA                     u2010:
  1592     00CA                     l2220:
  1593     00CA  3003               	movlw	3
  1594     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1595     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1596     00CD  0249               	subwf	_asciiDigits,w
  1597     00CE  1803               	skipnc
  1598     00CF  28D1               	goto	u2021
  1599     00D0  28D2               	goto	u2020
  1600     00D1                     u2021:
  1601     00D1  2A8D               	goto	l149
  1602     00D2                     u2020:
  1603     00D2                     l2222:
  1604                           
  1605                           ;env_esclavo.c: 139:             asciiValue[asciiDigits++] = key;
  1606     00D2  0849               	movf	_asciiDigits,w
  1607     00D3  3E5B               	addlw	(low (_asciiValue| 0))& (0+255)
  1608     00D4  0084               	movwf	4
  1609     00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1610     00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1611     00D7  083B               	movf	Handle_Keypress@key^(0+128),w
  1612     00D8  1383               	bcf	3,7	;select IRP bank0
  1613     00D9  0080               	movwf	0
  1614     00DA                     l2224:
  1615     00DA  3001               	movlw	1
  1616     00DB  00FF               	movwf	btemp+1
  1617     00DC  087F               	movf	btemp+1,w
  1618     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1619     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1620     00DF  07C9               	addwf	_asciiDigits,f
  1621     00E0                     l2226:
  1622                           
  1623                           ;env_esclavo.c: 140:             asciiValue[asciiDigits] = '\0';
  1624     00E0  0849               	movf	_asciiDigits,w
  1625     00E1  3E5B               	addlw	(low (_asciiValue| 0))& (0+255)
  1626     00E2  0084               	movwf	4
  1627     00E3  0180               	clrf	0
  1628     00E4  2A8D               	goto	l149
  1629     00E5                     l124:
  1630                           
  1631                           ;env_esclavo.c: 142:     } else {
  1632     00E5  2A8D               	goto	l149
  1633     00E6                     l2228:
  1634                           
  1635                           ;env_esclavo.c: 144:         if (key == '+') {
  1636     00E6  302B               	movlw	43
  1637     00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1638     00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1639     00E9  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1640     00EA  1D03               	btfss	3,2
  1641     00EB  28ED               	goto	u2031
  1642     00EC  28EE               	goto	u2030
  1643     00ED                     u2031:
  1644     00ED  28F5               	goto	l2234
  1645     00EE                     u2030:
  1646     00EE                     l2230:
  1647                           
  1648                           ;env_esclavo.c: 145:             asciiMode = 1;
  1649     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1650     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1651     00F0  01CA               	clrf	_asciiMode
  1652     00F1  0ACA               	incf	_asciiMode,f
  1653     00F2                     l2232:
  1654                           
  1655                           ;env_esclavo.c: 146:             asciiDigits = 0;
  1656     00F2  01C9               	clrf	_asciiDigits
  1657                           
  1658                           ;env_esclavo.c: 147:             asciiValue[0] = '\0';
  1659     00F3  01DB               	clrf	_asciiValue
  1660                           
  1661                           ;env_esclavo.c: 148:         }
  1662     00F4  2A8D               	goto	l149
  1663     00F5                     l2234:
  1664     00F5  302F               	movlw	47
  1665     00F6  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1666     00F7  1D03               	btfss	3,2
  1667     00F8  28FA               	goto	u2041
  1668     00F9  28FB               	goto	u2040
  1669     00FA                     u2041:
  1670     00FA  2905               	goto	l2240
  1671     00FB                     u2040:
  1672     00FB                     l2236:
  1673                           
  1674                           ;env_esclavo.c: 151:             if (cursorPosition > 0) cursorPosition--;
  1675     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1676     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1677     00FD  0848               	movf	_cursorPosition,w
  1678     00FE  1903               	btfsc	3,2
  1679     00FF  2901               	goto	u2051
  1680     0100  2902               	goto	u2050
  1681     0101                     u2051:
  1682     0101  2A8D               	goto	l149
  1683     0102                     u2050:
  1684     0102                     l2238:
  1685     0102  3001               	movlw	1
  1686     0103  02C8               	subwf	_cursorPosition,f
  1687     0104  2A8D               	goto	l149
  1688     0105                     l2240:
  1689     0105  3058               	movlw	88
  1690     0106  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1691     0107  1D03               	btfss	3,2
  1692     0108  290A               	goto	u2061
  1693     0109  290B               	goto	u2060
  1694     010A                     u2061:
  1695     010A  291F               	goto	l2246
  1696     010B                     u2060:
  1697     010B                     l2242:
  1698                           
  1699                           ;env_esclavo.c: 153:             if (cursorPosition < charCount) cursorPosition++;
  1700     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1701     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1702     010D  0846               	movf	_charCount+1,w
  1703     010E  3A80               	xorlw	128
  1704     010F  3C80               	sublw	128
  1705     0110  1D03               	skipz
  1706     0111  2914               	goto	u2075
  1707     0112  0845               	movf	_charCount,w
  1708     0113  0248               	subwf	_cursorPosition,w
  1709     0114                     u2075:
  1710     0114  1803               	skipnc
  1711     0115  2917               	goto	u2071
  1712     0116  2918               	goto	u2070
  1713     0117                     u2071:
  1714     0117  2A8D               	goto	l149
  1715     0118                     u2070:
  1716     0118                     l2244:
  1717     0118  3001               	movlw	1
  1718     0119  00FF               	movwf	btemp+1
  1719     011A  087F               	movf	btemp+1,w
  1720     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1721     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1722     011D  07C8               	addwf	_cursorPosition,f
  1723     011E  2A8D               	goto	l149
  1724     011F                     l2246:
  1725     011F  3043               	movlw	67
  1726     0120  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1727     0121  1D03               	btfss	3,2
  1728     0122  2924               	goto	u2081
  1729     0123  2925               	goto	u2080
  1730     0124                     u2081:
  1731     0124  2985               	goto	l2264
  1732     0125                     u2080:
  1733     0125                     l2248:
  1734                           
  1735                           ;env_esclavo.c: 155:             for (unsigned char i = cursorPosition; i < charCount; i
      +                          ++) {
  1736     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1737     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1738     0127  0848               	movf	_cursorPosition,w
  1739     0128  1683               	bsf	3,5	;RP0=1, select bank1
  1740     0129  1303               	bcf	3,6	;RP1=0, select bank1
  1741     012A  00BA               	movwf	Handle_Keypress@i_299^(0+128)
  1742     012B  293D               	goto	l2254
  1743     012C                     l2250:
  1744                           
  1745                           ;env_esclavo.c: 156:                 displayString[i] = displayString[i + 1];
  1746     012C  1683               	bsf	3,5	;RP0=1, select bank1
  1747     012D  1303               	bcf	3,6	;RP1=0, select bank1
  1748     012E  083A               	movf	Handle_Keypress@i_299^(0+128),w
  1749     012F  3E4C               	addlw	(low ((_displayString| 0+1)))& (0+255)
  1750     0130  0084               	movwf	4
  1751     0131  1383               	bcf	3,7	;select IRP bank0
  1752     0132  0800               	movf	0,w
  1753     0133  00FF               	movwf	btemp+1
  1754     0134  083A               	movf	Handle_Keypress@i_299^(0+128),w
  1755     0135  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1756     0136  0084               	movwf	4
  1757     0137  087F               	movf	btemp+1,w
  1758     0138  0080               	movwf	0
  1759     0139                     l2252:
  1760                           
  1761                           ;env_esclavo.c: 157:             }
  1762     0139  3001               	movlw	1
  1763     013A  00FF               	movwf	btemp+1
  1764     013B  087F               	movf	btemp+1,w
  1765     013C  07BA               	addwf	Handle_Keypress@i_299^(0+128),f
  1766     013D                     l2254:
  1767     013D  1283               	bcf	3,5	;RP0=0, select bank0
  1768     013E  1303               	bcf	3,6	;RP1=0, select bank0
  1769     013F  0846               	movf	_charCount+1,w
  1770     0140  3A80               	xorlw	128
  1771     0141  3C80               	sublw	128
  1772     0142  1D03               	skipz
  1773     0143  2948               	goto	u2095
  1774     0144  0845               	movf	_charCount,w
  1775     0145  1683               	bsf	3,5	;RP0=1, select bank1
  1776     0146  1303               	bcf	3,6	;RP1=0, select bank1
  1777     0147  023A               	subwf	Handle_Keypress@i_299^(0+128),w
  1778     0148                     u2095:
  1779     0148  1C03               	skipc
  1780     0149  294B               	goto	u2091
  1781     014A  294C               	goto	u2090
  1782     014B                     u2091:
  1783     014B  292C               	goto	l2250
  1784     014C                     u2090:
  1785     014C                     l2256:
  1786                           
  1787                           ;env_esclavo.c: 158:             if (charCount > 0) charCount--;
  1788     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1789     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1790     014E  0846               	movf	_charCount+1,w
  1791     014F  3A80               	xorlw	128
  1792     0150  00FF               	movwf	btemp+1
  1793     0151  3080               	movlw	128
  1794     0152  027F               	subwf	btemp+1,w
  1795     0153  1D03               	skipz
  1796     0154  2957               	goto	u2105
  1797     0155  3001               	movlw	1
  1798     0156  0245               	subwf	_charCount,w
  1799     0157                     u2105:
  1800     0157  1C03               	skipc
  1801     0158  295A               	goto	u2101
  1802     0159  295B               	goto	u2100
  1803     015A                     u2101:
  1804     015A  2963               	goto	l139
  1805     015B                     u2100:
  1806     015B                     l2258:
  1807     015B  30FF               	movlw	255
  1808     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1809     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1810     015E  07C5               	addwf	_charCount,f
  1811     015F  1803               	skipnc
  1812     0160  0AC6               	incf	_charCount+1,f
  1813     0161  30FF               	movlw	255
  1814     0162  07C6               	addwf	_charCount+1,f
  1815     0163                     l139:
  1816                           
  1817                           ;env_esclavo.c: 160:             if (cursorPosition >= charCount && charCount > 0) curso
      +                          rPosition = charCount - 1;
  1818     0163  1283               	bcf	3,5	;RP0=0, select bank0
  1819     0164  1303               	bcf	3,6	;RP1=0, select bank0
  1820     0165  0846               	movf	_charCount+1,w
  1821     0166  3A80               	xorlw	128
  1822     0167  3C80               	sublw	128
  1823     0168  1D03               	skipz
  1824     0169  296C               	goto	u2115
  1825     016A  0845               	movf	_charCount,w
  1826     016B  0248               	subwf	_cursorPosition,w
  1827     016C                     u2115:
  1828     016C  1C03               	skipc
  1829     016D  296F               	goto	u2111
  1830     016E  2970               	goto	u2110
  1831     016F                     u2111:
  1832     016F  2A8D               	goto	l149
  1833     0170                     u2110:
  1834     0170                     l2260:
  1835     0170  1283               	bcf	3,5	;RP0=0, select bank0
  1836     0171  1303               	bcf	3,6	;RP1=0, select bank0
  1837     0172  0846               	movf	_charCount+1,w
  1838     0173  3A80               	xorlw	128
  1839     0174  00FF               	movwf	btemp+1
  1840     0175  3080               	movlw	128
  1841     0176  027F               	subwf	btemp+1,w
  1842     0177  1D03               	skipz
  1843     0178  297B               	goto	u2125
  1844     0179  3001               	movlw	1
  1845     017A  0245               	subwf	_charCount,w
  1846     017B                     u2125:
  1847     017B  1C03               	skipc
  1848     017C  297E               	goto	u2121
  1849     017D  297F               	goto	u2120
  1850     017E                     u2121:
  1851     017E  2A8D               	goto	l149
  1852     017F                     u2120:
  1853     017F                     l2262:
  1854     017F  1283               	bcf	3,5	;RP0=0, select bank0
  1855     0180  1303               	bcf	3,6	;RP1=0, select bank0
  1856     0181  0845               	movf	_charCount,w
  1857     0182  3EFF               	addlw	255
  1858     0183  00C8               	movwf	_cursorPosition
  1859     0184  2A8D               	goto	l149
  1860     0185                     l2264:
  1861     0185  302D               	movlw	45
  1862     0186  063B               	xorwf	Handle_Keypress@key^(0+128),w
  1863     0187  1D03               	btfss	3,2
  1864     0188  298A               	goto	u2131
  1865     0189  298B               	goto	u2130
  1866     018A                     u2131:
  1867     018A  2A0E               	goto	l2302
  1868     018B                     u2130:
  1869     018B                     l2266:
  1870                           
  1871                           ;env_esclavo.c: 162:             if (charCount > 0) {
  1872     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1873     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1874     018D  0846               	movf	_charCount+1,w
  1875     018E  3A80               	xorlw	128
  1876     018F  00FF               	movwf	btemp+1
  1877     0190  3080               	movlw	128
  1878     0191  027F               	subwf	btemp+1,w
  1879     0192  1D03               	skipz
  1880     0193  2996               	goto	u2145
  1881     0194  3001               	movlw	1
  1882     0195  0245               	subwf	_charCount,w
  1883     0196                     u2145:
  1884     0196  1C03               	skipc
  1885     0197  2999               	goto	u2141
  1886     0198  299A               	goto	u2140
  1887     0199                     u2141:
  1888     0199  28E5               	goto	l124
  1889     019A                     u2140:
  1890     019A                     l2268:
  1891                           
  1892                           ;env_esclavo.c: 163:                 displayString[cursorPosition] = '\0';
  1893     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1894     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1895     019C  0848               	movf	_cursorPosition,w
  1896     019D  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  1897     019E  0084               	movwf	4
  1898     019F  1383               	bcf	3,7	;select IRP bank0
  1899     01A0  0180               	clrf	0
  1900     01A1                     l2270:
  1901                           
  1902                           ;env_esclavo.c: 164:                 Send_Message_To_Master(displayString);
  1903     01A1  304B               	movlw	(low (_displayString| 0))& (0+255)
  1904     01A2  118A  2698  118A   	fcall	_Send_Message_To_Master
  1905     01A5                     l2272:
  1906                           
  1907                           ;env_esclavo.c: 165:                 LCD_clear();
  1908     01A5  158A  2758  118A   	fcall	_LCD_clear
  1909     01A8                     l2274:
  1910                           
  1911                           ;env_esclavo.c: 166:                 LCD_setCursor(1, 0);
  1912     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1913     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1914     01AA  01C1               	clrf	LCD_setCursor@column
  1915     01AB  3001               	movlw	1
  1916     01AC  158A  27E0  118A   	fcall	_LCD_setCursor
  1917     01AF                     l2276:
  1918                           
  1919                           ;env_esclavo.c: 167:                 LCD_print("Mensaje enviado");
  1920     01AF  3044               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1921     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1922     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1923     01B2  00C1               	movwf	LCD_print@string
  1924     01B3  3080               	movlw	128
  1925     01B4  00C2               	movwf	LCD_print@string+1
  1926     01B5  118A  27A6  118A   	fcall	_LCD_print
  1927     01B8                     l2278:
  1928                           
  1929                           ;env_esclavo.c: 168:                 LCD_setCursor(2,0);
  1930     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1931     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1932     01BA  01C1               	clrf	LCD_setCursor@column
  1933     01BB  3002               	movlw	2
  1934     01BC  158A  27E0  118A   	fcall	_LCD_setCursor
  1935     01BF                     l2280:
  1936                           
  1937                           ;env_esclavo.c: 169:                 LCD_print("al maestro . . .");
  1938     01BF  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1939     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1940     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1941     01C2  00C1               	movwf	LCD_print@string
  1942     01C3  3080               	movlw	128
  1943     01C4  00C2               	movwf	LCD_print@string+1
  1944     01C5  118A  27A6  118A   	fcall	_LCD_print
  1945     01C8                     l2282:
  1946                           
  1947                           ;env_esclavo.c: 171:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1948     01C8  300B               	movlw	11
  1949     01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1950     01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1951     01CB  00B4               	movwf	(??_Handle_Keypress^(0+128)+2)
  1952     01CC  3026               	movlw	38
  1953     01CD  00B3               	movwf	(??_Handle_Keypress^(0+128)+1)
  1954     01CE  305D               	movlw	93
  1955     01CF  00B2               	movwf	??_Handle_Keypress^(0+128)
  1956     01D0                     u2237:
  1957     01D0  0BB2               	decfsz	??_Handle_Keypress^(0+128),f
  1958     01D1  29D0               	goto	u2237
  1959     01D2  0BB3               	decfsz	(??_Handle_Keypress^(0+128)+1),f
  1960     01D3  29D0               	goto	u2237
  1961     01D4  0BB4               	decfsz	(??_Handle_Keypress^(0+128)+2),f
  1962     01D5  29D0               	goto	u2237
  1963     01D6  0000               	nop
  1964     01D7                     l2284:
  1965                           
  1966                           ;env_esclavo.c: 172:                 LCD_clear();
  1967     01D7  158A  2758  118A   	fcall	_LCD_clear
  1968     01DA                     l2286:
  1969                           
  1970                           ;env_esclavo.c: 173:                 LCD_setCursor(1, 0);
  1971     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1972     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1973     01DC  01C1               	clrf	LCD_setCursor@column
  1974     01DD  3001               	movlw	1
  1975     01DE  158A  27E0  118A   	fcall	_LCD_setCursor
  1976     01E1                     l2288:
  1977                           
  1978                           ;env_esclavo.c: 174:                 LCD_print("Esperando res-");
  1979     01E1  3063               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1980     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1981     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1982     01E4  00C1               	movwf	LCD_print@string
  1983     01E5  3080               	movlw	128
  1984     01E6  00C2               	movwf	LCD_print@string+1
  1985     01E7  118A  27A6  118A   	fcall	_LCD_print
  1986     01EA                     l2290:
  1987                           
  1988                           ;env_esclavo.c: 175:                 LCD_setCursor(2,0);
  1989     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1990     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1991     01EC  01C1               	clrf	LCD_setCursor@column
  1992     01ED  3002               	movlw	2
  1993     01EE  158A  27E0  118A   	fcall	_LCD_setCursor
  1994     01F1                     l2292:
  1995                           
  1996                           ;env_esclavo.c: 176:                 LCD_print("del maestro . . .");
  1997     01F1  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1998     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1999     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2000     01F4  00C1               	movwf	LCD_print@string
  2001     01F5  3080               	movlw	128
  2002     01F6  00C2               	movwf	LCD_print@string+1
  2003     01F7  118A  27A6  118A   	fcall	_LCD_print
  2004     01FA                     l2294:
  2005                           
  2006                           ;env_esclavo.c: 177:                 allow_input = 0;
  2007     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2008     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2009     01FC  01C7               	clrf	_allow_input	;volatile
  2010     01FD                     l2296:
  2011                           
  2012                           ;env_esclavo.c: 178:                 memset(displayString, 0, sizeof(displayString));
  2013     01FD  3000               	movlw	0
  2014     01FE  00BE               	movwf	memset@c
  2015     01FF  00BF               	movwf	memset@c+1
  2016     0200  3010               	movlw	16
  2017     0201  00C0               	movwf	memset@n
  2018     0202  3000               	movlw	0
  2019     0203  00C1               	movwf	memset@n+1
  2020     0204  304B               	movlw	(low (_displayString| 0))& (0+255)
  2021     0205  118A  2780  118A   	fcall	_memset
  2022     0208                     l2298:
  2023                           
  2024                           ;env_esclavo.c: 179:                 charCount = 0;
  2025     0208  1283               	bcf	3,5	;RP0=0, select bank0
  2026     0209  1303               	bcf	3,6	;RP1=0, select bank0
  2027     020A  01C5               	clrf	_charCount
  2028     020B  01C6               	clrf	_charCount+1
  2029     020C                     l2300:
  2030                           
  2031                           ;env_esclavo.c: 180:                 cursorPosition = 0;
  2032     020C  01C8               	clrf	_cursorPosition
  2033     020D  2A8D               	goto	l149
  2034     020E                     l2302:
  2035     020E  083B               	movf	Handle_Keypress@key^(0+128),w
  2036     020F  1903               	btfsc	3,2
  2037     0210  2A12               	goto	u2151
  2038     0211  2A13               	goto	u2150
  2039     0212                     u2151:
  2040     0212  28E5               	goto	l124
  2041     0213                     u2150:
  2042     0213                     l2304:
  2043     0213  303D               	movlw	61
  2044     0214  063B               	xorwf	Handle_Keypress@key^(0+128),w
  2045     0215  1903               	btfsc	3,2
  2046     0216  2A18               	goto	u2161
  2047     0217  2A19               	goto	u2160
  2048     0218                     u2161:
  2049     0218  28E5               	goto	l124
  2050     0219                     u2160:
  2051     0219                     l2306:
  2052     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2053     021A  1303               	bcf	3,6	;RP1=0, select bank0
  2054     021B  0846               	movf	_charCount+1,w
  2055     021C  3A80               	xorlw	128
  2056     021D  00FF               	movwf	btemp+1
  2057     021E  3080               	movlw	128
  2058     021F  027F               	subwf	btemp+1,w
  2059     0220  1D03               	skipz
  2060     0221  2A24               	goto	u2175
  2061     0222  300F               	movlw	15
  2062     0223  0245               	subwf	_charCount,w
  2063     0224                     u2175:
  2064     0224  1803               	skipnc
  2065     0225  2A27               	goto	u2171
  2066     0226  2A28               	goto	u2170
  2067     0227                     u2171:
  2068     0227  28E5               	goto	l124
  2069     0228                     u2170:
  2070     0228                     l2308:
  2071                           
  2072                           ;env_esclavo.c: 184:             for (int i = charCount; i > cursorPosition; i--) {
  2073     0228  1283               	bcf	3,5	;RP0=0, select bank0
  2074     0229  1303               	bcf	3,6	;RP1=0, select bank0
  2075     022A  0846               	movf	_charCount+1,w
  2076     022B  1683               	bsf	3,5	;RP0=1, select bank1
  2077     022C  1303               	bcf	3,6	;RP1=0, select bank1
  2078     022D  00B8               	movwf	(Handle_Keypress@i_304+1)^(0+128)
  2079     022E  1283               	bcf	3,5	;RP0=0, select bank0
  2080     022F  1303               	bcf	3,6	;RP1=0, select bank0
  2081     0230  0845               	movf	_charCount,w
  2082     0231  1683               	bsf	3,5	;RP0=1, select bank1
  2083     0232  1303               	bcf	3,6	;RP1=0, select bank1
  2084     0233  00B7               	movwf	Handle_Keypress@i_304^(0+128)
  2085     0234  2A48               	goto	l2314
  2086     0235                     l2310:
  2087                           
  2088                           ;env_esclavo.c: 185:                 displayString[i] = displayString[i - 1];
  2089     0235  1683               	bsf	3,5	;RP0=1, select bank1
  2090     0236  1303               	bcf	3,6	;RP1=0, select bank1
  2091     0237  0837               	movf	Handle_Keypress@i_304^(0+128),w
  2092     0238  3E4A               	addlw	(low ((_displayString| 0+255)))& (0+255)
  2093     0239  0084               	movwf	4
  2094     023A  1383               	bcf	3,7	;select IRP bank0
  2095     023B  0800               	movf	0,w
  2096     023C  00FF               	movwf	btemp+1
  2097     023D  0837               	movf	Handle_Keypress@i_304^(0+128),w
  2098     023E  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  2099     023F  0084               	movwf	4
  2100     0240  087F               	movf	btemp+1,w
  2101     0241  0080               	movwf	0
  2102     0242                     l2312:
  2103                           
  2104                           ;env_esclavo.c: 186:             }
  2105     0242  30FF               	movlw	255
  2106     0243  07B7               	addwf	Handle_Keypress@i_304^(0+128),f
  2107     0244  1803               	skipnc
  2108     0245  0AB8               	incf	(Handle_Keypress@i_304+1)^(0+128),f
  2109     0246  30FF               	movlw	255
  2110     0247  07B8               	addwf	(Handle_Keypress@i_304+1)^(0+128),f
  2111     0248                     l2314:
  2112     0248  0838               	movf	(Handle_Keypress@i_304+1)^(0+128),w
  2113     0249  3A80               	xorlw	128
  2114     024A  3C80               	sublw	128
  2115     024B  1D03               	skipz
  2116     024C  2A51               	goto	u2185
  2117     024D  0837               	movf	Handle_Keypress@i_304^(0+128),w
  2118     024E  1283               	bcf	3,5	;RP0=0, select bank0
  2119     024F  1303               	bcf	3,6	;RP1=0, select bank0
  2120     0250  0248               	subwf	_cursorPosition,w
  2121     0251                     u2185:
  2122     0251  1C03               	skipc
  2123     0252  2A54               	goto	u2181
  2124     0253  2A55               	goto	u2180
  2125     0254                     u2181:
  2126     0254  2A35               	goto	l2310
  2127     0255                     u2180:
  2128     0255                     l2316:
  2129                           
  2130                           ;env_esclavo.c: 187:             displayString[cursorPosition] = key;
  2131     0255  1283               	bcf	3,5	;RP0=0, select bank0
  2132     0256  1303               	bcf	3,6	;RP1=0, select bank0
  2133     0257  0848               	movf	_cursorPosition,w
  2134     0258  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  2135     0259  0084               	movwf	4
  2136     025A  1683               	bsf	3,5	;RP0=1, select bank1
  2137     025B  1303               	bcf	3,6	;RP1=0, select bank1
  2138     025C  083B               	movf	Handle_Keypress@key^(0+128),w
  2139     025D  1383               	bcf	3,7	;select IRP bank0
  2140     025E  0080               	movwf	0
  2141     025F                     l2318:
  2142                           
  2143                           ;env_esclavo.c: 188:             cursorPosition++;
  2144     025F  3001               	movlw	1
  2145     0260  00FF               	movwf	btemp+1
  2146     0261  087F               	movf	btemp+1,w
  2147     0262  1283               	bcf	3,5	;RP0=0, select bank0
  2148     0263  1303               	bcf	3,6	;RP1=0, select bank0
  2149     0264  07C8               	addwf	_cursorPosition,f
  2150     0265                     l2320:
  2151                           
  2152                           ;env_esclavo.c: 189:             charCount++;
  2153     0265  3001               	movlw	1
  2154     0266  07C5               	addwf	_charCount,f
  2155     0267  1803               	skipnc
  2156     0268  0AC6               	incf	_charCount+1,f
  2157     0269  3000               	movlw	0
  2158     026A  07C6               	addwf	_charCount+1,f
  2159     026B                     l2322:
  2160                           
  2161                           ;env_esclavo.c: 190:             displayString[charCount] = '\0';
  2162     026B  0845               	movf	_charCount,w
  2163     026C  3E4B               	addlw	(low (_displayString| 0))& (0+255)
  2164     026D  0084               	movwf	4
  2165     026E  0180               	clrf	0
  2166     026F                     l2324:
  2167                           
  2168                           ;env_esclavo.c: 192:             Prepare_LCD_Pins();
  2169     026F  158A  270D  118A   	fcall	_Prepare_LCD_Pins
  2170     0272                     l2326:
  2171                           
  2172                           ;env_esclavo.c: 193:             LCD_clear();
  2173     0272  158A  2758  118A   	fcall	_LCD_clear
  2174     0275                     l2328:
  2175                           
  2176                           ;env_esclavo.c: 194:             LCD_setCursor(1, 0);
  2177     0275  1283               	bcf	3,5	;RP0=0, select bank0
  2178     0276  1303               	bcf	3,6	;RP1=0, select bank0
  2179     0277  01C1               	clrf	LCD_setCursor@column
  2180     0278  3001               	movlw	1
  2181     0279  158A  27E0  118A   	fcall	_LCD_setCursor
  2182     027C                     l2330:
  2183                           
  2184                           ;env_esclavo.c: 195:             LCD_print(displayString);
  2185     027C  304B               	movlw	(low (_displayString| 0))& (0+255)
  2186     027D  1283               	bcf	3,5	;RP0=0, select bank0
  2187     027E  1303               	bcf	3,6	;RP1=0, select bank0
  2188     027F  00C1               	movwf	LCD_print@string
  2189     0280  3000               	movlw	0
  2190     0281  00C2               	movwf	LCD_print@string+1
  2191     0282  118A  27A6  118A   	fcall	_LCD_print
  2192     0285                     l2332:
  2193                           
  2194                           ;env_esclavo.c: 196:             LCD_setCursor(1, cursorPosition);
  2195     0285  1283               	bcf	3,5	;RP0=0, select bank0
  2196     0286  1303               	bcf	3,6	;RP1=0, select bank0
  2197     0287  0848               	movf	_cursorPosition,w
  2198     0288  00C1               	movwf	LCD_setCursor@column
  2199     0289  3001               	movlw	1
  2200     028A  158A  27E0  118A   	fcall	_LCD_setCursor
  2201     028D                     l149:
  2202     028D  0008               	return
  2203     028E                     __end_of_Handle_Keypress:
  2204                           
  2205                           	psect	text4
  2206     0780                     __ptext4:	
  2207 ;; *************** function _memset *****************
  2208 ;; Defined at:
  2209 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  dest            1    wreg     PTR void 
  2212 ;;		 -> displayString(16), 
  2213 ;;  c               2   30[BANK0 ] int 
  2214 ;;  n               2   32[BANK0 ] unsigned int 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  dest            1    0[BANK1 ] PTR void 
  2217 ;;		 -> displayString(16), 
  2218 ;;  p               1    1[BANK1 ] PTR unsigned char 
  2219 ;;		 -> displayString(16), 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      PTR void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1
  2229 ;;      Params:         0       4       0
  2230 ;;      Locals:         0       0       2
  2231 ;;      Temps:          0       0       0
  2232 ;;      Totals:         0       4       2
  2233 ;;Total ram usage:        6 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 3
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_Handle_Keypress
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243     0780                     _memset:	
  2244                           ;psect for function _memset
  2245                           
  2246                           
  2247                           ;incstack = 0
  2248                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  2249                           ;memset@dest stored from wreg
  2250     0780  1683               	bsf	3,5	;RP0=1, select bank1
  2251     0781  1303               	bcf	3,6	;RP1=0, select bank1
  2252     0782  00A0               	movwf	memset@dest^(0+128)
  2253     0783                     l2122:
  2254     0783  0820               	movf	memset@dest^(0+128),w
  2255     0784  00A1               	movwf	memset@p^(0+128)
  2256     0785  2F95               	goto	l2128
  2257     0786                     l2124:
  2258     0786  1683               	bsf	3,5	;RP0=1, select bank1
  2259     0787  1303               	bcf	3,6	;RP1=0, select bank1
  2260     0788  0821               	movf	memset@p^(0+128),w
  2261     0789  0084               	movwf	4
  2262     078A  1283               	bcf	3,5	;RP0=0, select bank0
  2263     078B  1303               	bcf	3,6	;RP1=0, select bank0
  2264     078C  083E               	movf	memset@c,w
  2265     078D  1383               	bcf	3,7	;select IRP bank0
  2266     078E  0080               	movwf	0
  2267     078F                     l2126:
  2268     078F  3001               	movlw	1
  2269     0790  00FF               	movwf	btemp+1
  2270     0791  087F               	movf	btemp+1,w
  2271     0792  1683               	bsf	3,5	;RP0=1, select bank1
  2272     0793  1303               	bcf	3,6	;RP1=0, select bank1
  2273     0794  07A1               	addwf	memset@p^(0+128),f
  2274     0795                     l2128:
  2275     0795  3001               	movlw	1
  2276     0796  1283               	bcf	3,5	;RP0=0, select bank0
  2277     0797  1303               	bcf	3,6	;RP1=0, select bank0
  2278     0798  02C0               	subwf	memset@n,f
  2279     0799  3000               	movlw	0
  2280     079A  1C03               	skipc
  2281     079B  03C1               	decf	memset@n+1,f
  2282     079C  02C1               	subwf	memset@n+1,f
  2283     079D  0A40               	incf	memset@n,w
  2284     079E  1D03               	skipz
  2285     079F  2FA4               	goto	u1831
  2286     07A0  0A41               	incf	memset@n+1,w
  2287     07A1  1D03               	btfss	3,2
  2288     07A2  2FA4               	goto	u1831
  2289     07A3  2FA5               	goto	u1830
  2290     07A4                     u1831:
  2291     07A4  2F86               	goto	l2124
  2292     07A5                     u1830:
  2293     07A5                     l808:
  2294     07A5  0008               	return
  2295     07A6                     __end_of_memset:
  2296                           
  2297                           	psect	text5
  2298     04A1                     __ptext5:	
  2299 ;; *************** function _atoi *****************
  2300 ;; Defined at:
  2301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atoi.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  s               1    wreg     PTR const unsigned char 
  2304 ;;		 -> asciiValue(4), 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  s               1    9[BANK1 ] PTR const unsigned char 
  2307 ;;		 -> asciiValue(4), 
  2308 ;;  n               2    7[BANK1 ] int 
  2309 ;;  neg             1    6[BANK1 ] _Bool 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2    2[BANK1 ] int 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1
  2319 ;;      Params:         0       0       2
  2320 ;;      Locals:         0       0       4
  2321 ;;      Temps:          0       0       2
  2322 ;;      Totals:         0       0       8
  2323 ;;Total ram usage:        8 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 4
  2326 ;; This function calls:
  2327 ;;		___wmul
  2328 ;; This function is called by:
  2329 ;;		_Handle_Keypress
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333     04A1                     _atoi:	
  2334                           ;psect for function _atoi
  2335                           
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2339                           ;atoi@s stored from wreg
  2340     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2341     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2342     04A3  00A9               	movwf	atoi@s^(0+128)
  2343     04A4                     l2070:
  2344     04A4  01A7               	clrf	atoi@n^(0+128)
  2345     04A5  01A8               	clrf	(atoi@n+1)^(0+128)
  2346     04A6  01A6               	clrf	atoi@neg^(0+128)
  2347     04A7  2CAC               	goto	l2074
  2348     04A8                     l2072:
  2349     04A8  3001               	movlw	1
  2350     04A9  00FF               	movwf	btemp+1
  2351     04AA  087F               	movf	btemp+1,w
  2352     04AB  07A9               	addwf	atoi@s^(0+128),f
  2353     04AC                     l2074:
  2354     04AC  0829               	movf	atoi@s^(0+128),w
  2355     04AD  0084               	movwf	4
  2356     04AE  3020               	movlw	32
  2357     04AF  1383               	bcf	3,7	;select IRP bank0
  2358     04B0  0600               	xorwf	0,w
  2359     04B1  1903               	btfsc	3,2
  2360     04B2  2CB4               	goto	u1761
  2361     04B3  2CB5               	goto	u1760
  2362     04B4                     u1761:
  2363     04B4  2CA8               	goto	l2072
  2364     04B5                     u1760:
  2365     04B5                     l2076:
  2366     04B5  0829               	movf	atoi@s^(0+128),w
  2367     04B6  0084               	movwf	4
  2368     04B7  30F7               	movlw	247
  2369     04B8  0700               	addwf	0,w
  2370     04B9  00A4               	movwf	??_atoi^(0+128)
  2371     04BA  3005               	movlw	5
  2372     04BB  0224               	subwf	??_atoi^(0+128),w
  2373     04BC  1C03               	skipc
  2374     04BD  2CBF               	goto	u1771
  2375     04BE  2CC0               	goto	u1770
  2376     04BF                     u1771:
  2377     04BF  2CA8               	goto	l2072
  2378     04C0                     u1770:
  2379     04C0                     l2078:
  2380     04C0  0829               	movf	atoi@s^(0+128),w
  2381     04C1  0084               	movwf	4
  2382     04C2  302D               	movlw	45
  2383     04C3  0600               	xorwf	0,w
  2384     04C4  1D03               	btfss	3,2
  2385     04C5  2CC7               	goto	u1781
  2386     04C6  2CC8               	goto	u1780
  2387     04C7                     u1781:
  2388     04C7  2CCF               	goto	l2084
  2389     04C8                     u1780:
  2390     04C8                     l2080:
  2391     04C8  01A6               	clrf	atoi@neg^(0+128)
  2392     04C9  0AA6               	incf	atoi@neg^(0+128),f
  2393     04CA                     l2082:
  2394     04CA  3001               	movlw	1
  2395     04CB  00FF               	movwf	btemp+1
  2396     04CC  087F               	movf	btemp+1,w
  2397     04CD  07A9               	addwf	atoi@s^(0+128),f
  2398     04CE  2D04               	goto	l2092
  2399     04CF                     l2084:
  2400     04CF  0829               	movf	atoi@s^(0+128),w
  2401     04D0  0084               	movwf	4
  2402     04D1  302B               	movlw	43
  2403     04D2  0600               	xorwf	0,w
  2404     04D3  1D03               	btfss	3,2
  2405     04D4  2CD6               	goto	u1791
  2406     04D5  2CD7               	goto	u1790
  2407     04D6                     u1791:
  2408     04D6  2D04               	goto	l2092
  2409     04D7                     u1790:
  2410     04D7  2CCA               	goto	l2082
  2411     04D8                     l2088:
  2412     04D8  0829               	movf	atoi@s^(0+128),w
  2413     04D9  0084               	movwf	4
  2414     04DA  0828               	movf	(atoi@n+1)^(0+128),w
  2415     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2416     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2417     04DD  00BF               	movwf	___wmul@multiplier+1
  2418     04DE  1683               	bsf	3,5	;RP0=1, select bank1
  2419     04DF  1303               	bcf	3,6	;RP1=0, select bank1
  2420     04E0  0827               	movf	atoi@n^(0+128),w
  2421     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2422     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2423     04E3  00BE               	movwf	___wmul@multiplier
  2424     04E4  300A               	movlw	10
  2425     04E5  00C0               	movwf	___wmul@multiplicand
  2426     04E6  3000               	movlw	0
  2427     04E7  00C1               	movwf	___wmul@multiplicand+1
  2428     04E8  118A  2716  118A   	fcall	___wmul
  2429     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2430     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2431     04ED  083F               	movf	?___wmul+1,w
  2432     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2433     04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2434     04F0  00A5               	movwf	(??_atoi^(0+128)+1)
  2435     04F1  1383               	bcf	3,7	;select IRP bank0
  2436     04F2  0800               	movf	0,w
  2437     04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2438     04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2439     04F5  023E               	subwf	?___wmul,w
  2440     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2441     04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2442     04F8  00A4               	movwf	??_atoi^(0+128)
  2443     04F9  1C03               	skipc
  2444     04FA  03A5               	decf	(??_atoi^(0+128)+1),f
  2445     04FB  0824               	movf	??_atoi^(0+128),w
  2446     04FC  3E30               	addlw	48
  2447     04FD  00A7               	movwf	atoi@n^(0+128)
  2448     04FE  0825               	movf	(??_atoi+1)^(0+128),w
  2449     04FF  1803               	skipnc
  2450     0500  3E01               	addlw	1
  2451     0501  3E00               	addlw	0
  2452     0502  00A8               	movwf	(atoi@n+1)^(0+128)
  2453     0503  2CCA               	goto	l2082
  2454     0504                     l2092:
  2455     0504  0829               	movf	atoi@s^(0+128),w
  2456     0505  0084               	movwf	4
  2457     0506  30D0               	movlw	208
  2458     0507  0700               	addwf	0,w
  2459     0508  00A4               	movwf	??_atoi^(0+128)
  2460     0509  300A               	movlw	10
  2461     050A  0224               	subwf	??_atoi^(0+128),w
  2462     050B  1C03               	skipc
  2463     050C  2D0E               	goto	u1801
  2464     050D  2D0F               	goto	u1800
  2465     050E                     u1801:
  2466     050E  2CD8               	goto	l2088
  2467     050F                     u1800:
  2468     050F                     l2094:
  2469     050F  0826               	movf	atoi@neg^(0+128),w
  2470     0510  1D03               	btfss	3,2
  2471     0511  2D13               	goto	u1811
  2472     0512  2D14               	goto	u1810
  2473     0513                     u1811:
  2474     0513  2D20               	goto	l2098
  2475     0514                     u1810:
  2476     0514                     l2096:
  2477     0514  0927               	comf	atoi@n^(0+128),w
  2478     0515  00A4               	movwf	??_atoi^(0+128)
  2479     0516  0928               	comf	(atoi@n+1)^(0+128),w
  2480     0517  00A5               	movwf	(??_atoi^(0+128)+1)
  2481     0518  0AA4               	incf	??_atoi^(0+128),f
  2482     0519  1903               	skipnz
  2483     051A  0AA5               	incf	(??_atoi^(0+128)+1),f
  2484     051B  0824               	movf	??_atoi^(0+128),w
  2485     051C  00A2               	movwf	?_atoi^(0+128)
  2486     051D  0825               	movf	(??_atoi+1)^(0+128),w
  2487     051E  00A3               	movwf	(?_atoi+1)^(0+128)
  2488     051F  2D24               	goto	l802
  2489     0520                     l2098:
  2490     0520  0828               	movf	(atoi@n+1)^(0+128),w
  2491     0521  00A3               	movwf	(?_atoi+1)^(0+128)
  2492     0522  0827               	movf	atoi@n^(0+128),w
  2493     0523  00A2               	movwf	?_atoi^(0+128)
  2494     0524                     l802:
  2495     0524  0008               	return
  2496     0525                     __end_of_atoi:
  2497                           
  2498                           	psect	text6
  2499     0716                     __ptext6:	
  2500 ;; *************** function ___wmul *****************
  2501 ;; Defined at:
  2502 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  multiplier      2   30[BANK0 ] unsigned int 
  2505 ;;  multiplicand    2   32[BANK0 ] unsigned int 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  product         2    0[BANK1 ] unsigned int 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  2   30[BANK0 ] unsigned int 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1
  2517 ;;      Params:         0       4       0
  2518 ;;      Locals:         0       0       2
  2519 ;;      Temps:          0       0       0
  2520 ;;      Totals:         0       4       2
  2521 ;;Total ram usage:        6 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 3
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_atoi
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531     0716                     ___wmul:	
  2532                           ;psect for function ___wmul
  2533                           
  2534     0716                     l2016:	
  2535                           ;incstack = 0
  2536                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2537                           
  2538     0716  1683               	bsf	3,5	;RP0=1, select bank1
  2539     0717  1303               	bcf	3,6	;RP1=0, select bank1
  2540     0718  01A0               	clrf	___wmul@product^(0+128)
  2541     0719  01A1               	clrf	(___wmul@product+1)^(0+128)
  2542     071A                     l2018:
  2543     071A  1283               	bcf	3,5	;RP0=0, select bank0
  2544     071B  1C3E               	btfss	___wmul@multiplier,0
  2545     071C  2F1E               	goto	u1701
  2546     071D  2F1F               	goto	u1700
  2547     071E                     u1701:
  2548     071E  2F2B               	goto	l330
  2549     071F                     u1700:
  2550     071F                     l2020:
  2551     071F  0840               	movf	___wmul@multiplicand,w
  2552     0720  1683               	bsf	3,5	;RP0=1, select bank1
  2553     0721  1303               	bcf	3,6	;RP1=0, select bank1
  2554     0722  07A0               	addwf	___wmul@product^(0+128),f
  2555     0723  1803               	skipnc
  2556     0724  0AA1               	incf	(___wmul@product+1)^(0+128),f
  2557     0725  1283               	bcf	3,5	;RP0=0, select bank0
  2558     0726  1303               	bcf	3,6	;RP1=0, select bank0
  2559     0727  0841               	movf	___wmul@multiplicand+1,w
  2560     0728  1683               	bsf	3,5	;RP0=1, select bank1
  2561     0729  1303               	bcf	3,6	;RP1=0, select bank1
  2562     072A  07A1               	addwf	(___wmul@product+1)^(0+128),f
  2563     072B                     l330:
  2564     072B  3001               	movlw	1
  2565     072C  1283               	bcf	3,5	;RP0=0, select bank0
  2566     072D                     u1715:
  2567     072D  1003               	clrc
  2568     072E  0DC0               	rlf	___wmul@multiplicand,f
  2569     072F  0DC1               	rlf	___wmul@multiplicand+1,f
  2570     0730  3EFF               	addlw	-1
  2571     0731  1D03               	skipz
  2572     0732  2F2D               	goto	u1715
  2573     0733                     l2022:
  2574     0733  3001               	movlw	1
  2575     0734                     u1725:
  2576     0734  1003               	clrc
  2577     0735  0CBF               	rrf	___wmul@multiplier+1,f
  2578     0736  0CBE               	rrf	___wmul@multiplier,f
  2579     0737  3EFF               	addlw	-1
  2580     0738  1D03               	skipz
  2581     0739  2F34               	goto	u1725
  2582     073A                     l2024:
  2583     073A  083E               	movf	___wmul@multiplier,w
  2584     073B  043F               	iorwf	___wmul@multiplier+1,w
  2585     073C  1D03               	btfss	3,2
  2586     073D  2F3F               	goto	u1731
  2587     073E  2F40               	goto	u1730
  2588     073F                     u1731:
  2589     073F  2F1A               	goto	l2018
  2590     0740                     u1730:
  2591     0740                     l2026:
  2592     0740  1683               	bsf	3,5	;RP0=1, select bank1
  2593     0741  1303               	bcf	3,6	;RP1=0, select bank1
  2594     0742  0821               	movf	(___wmul@product+1)^(0+128),w
  2595     0743  1283               	bcf	3,5	;RP0=0, select bank0
  2596     0744  1303               	bcf	3,6	;RP1=0, select bank0
  2597     0745  00BF               	movwf	?___wmul+1
  2598     0746  1683               	bsf	3,5	;RP0=1, select bank1
  2599     0747  1303               	bcf	3,6	;RP1=0, select bank1
  2600     0748  0820               	movf	___wmul@product^(0+128),w
  2601     0749  1283               	bcf	3,5	;RP0=0, select bank0
  2602     074A  1303               	bcf	3,6	;RP1=0, select bank0
  2603     074B  00BE               	movwf	?___wmul
  2604     074C                     l332:
  2605     074C  0008               	return
  2606     074D                     __end_of___wmul:
  2607                           
  2608                           	psect	text7
  2609     0698                     __ptext7:	
  2610 ;; *************** function _Send_Message_To_Master *****************
  2611 ;; Defined at:
  2612 ;;		line 376 in file "env_esclavo.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  message         1    wreg     PTR unsigned char 
  2615 ;;		 -> displayString(16), 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  message         1   17[BANK1 ] PTR unsigned char 
  2618 ;;		 -> displayString(16), 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1
  2628 ;;      Params:         0       0       0
  2629 ;;      Locals:         0       0       1
  2630 ;;      Temps:          0       0       0
  2631 ;;      Totals:         0       0       1
  2632 ;;Total ram usage:        1 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 5
  2635 ;; This function calls:
  2636 ;;		_I2C_Master_Init
  2637 ;;		_I2C_Master_Start
  2638 ;;		_I2C_Master_Stop
  2639 ;;		_I2C_Master_Write
  2640 ;;		_I2C_Slave_Init
  2641 ;; This function is called by:
  2642 ;;		_Handle_Keypress
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646     0698                     _Send_Message_To_Master:	
  2647                           ;psect for function _Send_Message_To_Master
  2648                           
  2649                           
  2650                           ;incstack = 0
  2651                           ; Regs used in _Send_Message_To_Master: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2652                           ;Send_Message_To_Master@message stored from wreg
  2653     0698  1683               	bsf	3,5	;RP0=1, select bank1
  2654     0699  1303               	bcf	3,6	;RP1=0, select bank1
  2655     069A  00B1               	movwf	Send_Message_To_Master@message^(0+128)
  2656     069B                     l2102:
  2657                           
  2658                           ;env_esclavo.c: 378:     i2c_role = 0;
  2659     069B  1283               	bcf	3,5	;RP0=0, select bank0
  2660     069C  1303               	bcf	3,6	;RP1=0, select bank0
  2661     069D  01DF               	clrf	_i2c_role	;volatile
  2662     069E                     l2104:
  2663                           
  2664                           ;env_esclavo.c: 379:     I2C_Master_Init(100000);
  2665     069E  3000               	movlw	0
  2666     069F  00C2               	movwf	I2C_Master_Init@c+3
  2667     06A0  3001               	movlw	1
  2668     06A1  00C1               	movwf	I2C_Master_Init@c+2
  2669     06A2  3086               	movlw	134
  2670     06A3  00C0               	movwf	I2C_Master_Init@c+1
  2671     06A4  30A0               	movlw	160
  2672     06A5  00BF               	movwf	I2C_Master_Init@c
  2673     06A6  118A  26D7  118A   	fcall	_I2C_Master_Init
  2674     06A9                     l2106:
  2675                           
  2676                           ;env_esclavo.c: 381:     I2C_Master_Start();
  2677     06A9  158A  2711  118A   	fcall	_I2C_Master_Start
  2678     06AC                     l2108:
  2679                           
  2680                           ;env_esclavo.c: 382:     I2C_Master_Write(0x20);
  2681     06AC  3020               	movlw	32
  2682     06AD  158A  2730  118A   	fcall	_I2C_Master_Write
  2683                           
  2684                           ;env_esclavo.c: 383:     while (*message) {
  2685     06B0  2EBD               	goto	l2114
  2686     06B1                     l2110:
  2687                           
  2688                           ;env_esclavo.c: 384:         I2C_Master_Write(*message++);
  2689     06B1  0831               	movf	Send_Message_To_Master@message^(0+128),w
  2690     06B2  0084               	movwf	4
  2691     06B3  0800               	movf	0,w
  2692     06B4  158A  2730  118A   	fcall	_I2C_Master_Write
  2693     06B7                     l2112:
  2694     06B7  3001               	movlw	1
  2695     06B8  00FF               	movwf	btemp+1
  2696     06B9  087F               	movf	btemp+1,w
  2697     06BA  1683               	bsf	3,5	;RP0=1, select bank1
  2698     06BB  1303               	bcf	3,6	;RP1=0, select bank1
  2699     06BC  07B1               	addwf	Send_Message_To_Master@message^(0+128),f
  2700     06BD                     l2114:
  2701                           
  2702                           ;env_esclavo.c: 383:     while (*message) {
  2703     06BD  1683               	bsf	3,5	;RP0=1, select bank1
  2704     06BE  1303               	bcf	3,6	;RP1=0, select bank1
  2705     06BF  0831               	movf	Send_Message_To_Master@message^(0+128),w
  2706     06C0  0084               	movwf	4
  2707     06C1  1383               	bcf	3,7	;select IRP bank0
  2708     06C2  0800               	movf	0,w
  2709     06C3  1D03               	btfss	3,2
  2710     06C4  2EC6               	goto	u1821
  2711     06C5  2EC7               	goto	u1820
  2712     06C6                     u1821:
  2713     06C6  2EB1               	goto	l2110
  2714     06C7                     u1820:
  2715     06C7                     l2116:
  2716                           
  2717                           ;env_esclavo.c: 386:     I2C_Master_Write('\0');
  2718     06C7  3000               	movlw	0
  2719     06C8  158A  2730  118A   	fcall	_I2C_Master_Write
  2720                           
  2721                           ;env_esclavo.c: 387:     I2C_Master_Stop();
  2722     06CB  158A  2718  118A   	fcall	_I2C_Master_Stop
  2723     06CE                     l2118:
  2724                           
  2725                           ;env_esclavo.c: 390:     i2c_role = 1;
  2726     06CE  3001               	movlw	1
  2727     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2728     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2729     06D1  00DF               	movwf	_i2c_role	;volatile
  2730     06D2                     l2120:
  2731                           
  2732                           ;env_esclavo.c: 391:     I2C_Slave_Init(0x10);
  2733     06D2  3010               	movlw	16
  2734     06D3  118A  27EA  118A   	fcall	_I2C_Slave_Init
  2735     06D6                     l226:
  2736     06D6  0008               	return
  2737     06D7                     __end_of_Send_Message_To_Master:
  2738                           
  2739                           	psect	text8
  2740     07EA                     __ptext8:	
  2741 ;; *************** function _I2C_Slave_Init *****************
  2742 ;; Defined at:
  2743 ;;		line 203 in file "env_esclavo.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  address         1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  address         1   30[BANK0 ] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1
  2757 ;;      Params:         0       0       0
  2758 ;;      Locals:         0       1       0
  2759 ;;      Temps:          0       0       0
  2760 ;;      Totals:         0       1       0
  2761 ;;Total ram usage:        1 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 3
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_main
  2768 ;;		_Send_Message_To_Master
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772     07EA                     _I2C_Slave_Init:	
  2773                           ;psect for function _I2C_Slave_Init
  2774                           
  2775                           
  2776                           ;incstack = 0
  2777                           ; Regs used in _I2C_Slave_Init: [wreg+status,2]
  2778                           ;I2C_Slave_Init@address stored from wreg
  2779     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  2780     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  2781     07EC  00BE               	movwf	I2C_Slave_Init@address
  2782     07ED                     l1964:
  2783                           
  2784                           ;env_esclavo.c: 204:     SSPADD = address;
  2785     07ED  083E               	movf	I2C_Slave_Init@address,w
  2786     07EE  1683               	bsf	3,5	;RP0=1, select bank1
  2787     07EF  1303               	bcf	3,6	;RP1=0, select bank1
  2788     07F0  0093               	movwf	19	;volatile
  2789                           
  2790                           ;env_esclavo.c: 205:     SSPCON = 0x36;
  2791     07F1  3036               	movlw	54
  2792     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  2793     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  2794     07F4  0094               	movwf	20	;volatile
  2795     07F5                     l1966:
  2796                           
  2797                           ;env_esclavo.c: 206:     SSPSTAT = 0x00;
  2798     07F5  1683               	bsf	3,5	;RP0=1, select bank1
  2799     07F6  1303               	bcf	3,6	;RP1=0, select bank1
  2800     07F7  0194               	clrf	20	;volatile
  2801     07F8                     l1968:
  2802                           
  2803                           ;env_esclavo.c: 207:     TRISC3 = 1;
  2804     07F8  1587               	bsf	7,3	;volatile
  2805     07F9                     l1970:
  2806                           
  2807                           ;env_esclavo.c: 208:     TRISC4 = 1;
  2808     07F9  1607               	bsf	7,4	;volatile
  2809     07FA                     l1972:
  2810                           
  2811                           ;env_esclavo.c: 209:     PEIE = 1;
  2812     07FA  170B               	bsf	11,6	;volatile
  2813     07FB                     l1974:
  2814                           
  2815                           ;env_esclavo.c: 210:     SSPIE = 1;
  2816     07FB  158C               	bsf	12,3	;volatile
  2817     07FC                     l1976:
  2818                           
  2819                           ;env_esclavo.c: 211:     GIE = 1;
  2820     07FC  178B               	bsf	11,7	;volatile
  2821     07FD                     l152:
  2822     07FD  0008               	return
  2823     07FE                     __end_of_I2C_Slave_Init:
  2824                           
  2825                           	psect	text9
  2826     0F30                     __ptext9:	
  2827 ;; *************** function _I2C_Master_Write *****************
  2828 ;; Defined at:
  2829 ;;		line 415 in file "env_esclavo.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  data            1    wreg     unsigned char 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  data            1   30[BANK0 ] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1
  2843 ;;      Params:         0       0       0
  2844 ;;      Locals:         0       1       0
  2845 ;;      Temps:          0       0       0
  2846 ;;      Totals:         0       1       0
  2847 ;;Total ram usage:        1 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 4
  2850 ;; This function calls:
  2851 ;;		_I2C_Master_Wait
  2852 ;; This function is called by:
  2853 ;;		_Send_Message_To_Master
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857     0F30                     _I2C_Master_Write:	
  2858                           ;psect for function _I2C_Master_Write
  2859                           
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2863                           ;I2C_Master_Write@data stored from wreg
  2864     0F30  1283               	bcf	3,5	;RP0=0, select bank0
  2865     0F31  1303               	bcf	3,6	;RP1=0, select bank0
  2866     0F32  00BE               	movwf	I2C_Master_Write@data
  2867     0F33                     l2008:
  2868                           
  2869                           ;env_esclavo.c: 416:     I2C_Master_Wait();
  2870     0F33  158A  273B  158A   	fcall	_I2C_Master_Wait
  2871     0F36                     l2010:
  2872                           
  2873                           ;env_esclavo.c: 417:     SSPBUF = data;
  2874     0F36  1283               	bcf	3,5	;RP0=0, select bank0
  2875     0F37  1303               	bcf	3,6	;RP1=0, select bank0
  2876     0F38  083E               	movf	I2C_Master_Write@data,w
  2877     0F39  0093               	movwf	19	;volatile
  2878     0F3A                     l238:
  2879     0F3A  0008               	return
  2880     0F3B                     __end_of_I2C_Master_Write:
  2881                           
  2882                           	psect	text10
  2883     0F18                     __ptext10:	
  2884 ;; *************** function _I2C_Master_Stop *****************
  2885 ;; Defined at:
  2886 ;;		line 410 in file "env_esclavo.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1
  2900 ;;      Params:         0       0       0
  2901 ;;      Locals:         0       0       0
  2902 ;;      Temps:          0       0       0
  2903 ;;      Totals:         0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 4
  2907 ;; This function calls:
  2908 ;;		_I2C_Master_Wait
  2909 ;; This function is called by:
  2910 ;;		_Send_Message_To_Master
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914     0F18                     _I2C_Master_Stop:	
  2915                           ;psect for function _I2C_Master_Stop
  2916                           
  2917     0F18                     l2012:	
  2918                           ;incstack = 0
  2919                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2920                           
  2921                           
  2922                           ;env_esclavo.c: 411:     I2C_Master_Wait();
  2923     0F18  158A  273B  158A   	fcall	_I2C_Master_Wait
  2924     0F1B                     l2014:
  2925                           
  2926                           ;env_esclavo.c: 412:     PEN = 1;
  2927     0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  2928     0F1C  1303               	bcf	3,6	;RP1=0, select bank1
  2929     0F1D  1511               	bsf	17,2	;volatile
  2930     0F1E                     l235:
  2931     0F1E  0008               	return
  2932     0F1F                     __end_of_I2C_Master_Stop:
  2933                           
  2934                           	psect	text11
  2935     0F11                     __ptext11:	
  2936 ;; *************** function _I2C_Master_Start *****************
  2937 ;; Defined at:
  2938 ;;		line 405 in file "env_esclavo.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1
  2952 ;;      Params:         0       0       0
  2953 ;;      Locals:         0       0       0
  2954 ;;      Temps:          0       0       0
  2955 ;;      Totals:         0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 4
  2959 ;; This function calls:
  2960 ;;		_I2C_Master_Wait
  2961 ;; This function is called by:
  2962 ;;		_Send_Message_To_Master
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966     0F11                     _I2C_Master_Start:	
  2967                           ;psect for function _I2C_Master_Start
  2968                           
  2969     0F11                     l2004:	
  2970                           ;incstack = 0
  2971                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2972                           
  2973                           
  2974                           ;env_esclavo.c: 406:     I2C_Master_Wait();
  2975     0F11  158A  273B  158A   	fcall	_I2C_Master_Wait
  2976     0F14                     l2006:
  2977                           
  2978                           ;env_esclavo.c: 407:     SEN = 1;
  2979     0F14  1683               	bsf	3,5	;RP0=1, select bank1
  2980     0F15  1303               	bcf	3,6	;RP1=0, select bank1
  2981     0F16  1411               	bsf	17,0	;volatile
  2982     0F17                     l232:
  2983     0F17  0008               	return
  2984     0F18                     __end_of_I2C_Master_Start:
  2985                           
  2986                           	psect	text12
  2987     0F3B                     __ptext12:	
  2988 ;; *************** function _I2C_Master_Wait *****************
  2989 ;; Defined at:
  2990 ;;		line 420 in file "env_esclavo.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1
  3004 ;;      Params:         0       0       0
  3005 ;;      Locals:         0       0       0
  3006 ;;      Temps:          0       0       0
  3007 ;;      Totals:         0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 3
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_I2C_Master_Start
  3015 ;;		_I2C_Master_Stop
  3016 ;;		_I2C_Master_Write
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020     0F3B                     _I2C_Master_Wait:	
  3021                           ;psect for function _I2C_Master_Wait
  3022                           
  3023     0F3B                     l1932:	
  3024                           ;incstack = 0
  3025                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3026                           
  3027     0F3B                     l1934:	
  3028                           ;env_esclavo.c: 421:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  3029                           
  3030     0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  3031     0F3C  1303               	bcf	3,6	;RP1=0, select bank1
  3032     0F3D  0811               	movf	17,w	;volatile
  3033     0F3E  391F               	andlw	31
  3034     0F3F  1D03               	btfss	3,2
  3035     0F40  2F42               	goto	u1601
  3036     0F41  2F43               	goto	u1600
  3037     0F42                     u1601:
  3038     0F42  2F3B               	goto	l1934
  3039     0F43                     u1600:
  3040     0F43                     l1936:
  3041     0F43  1914               	btfsc	20,2	;volatile
  3042     0F44  2F46               	goto	u1611
  3043     0F45  2F47               	goto	u1610
  3044     0F46                     u1611:
  3045     0F46  2F3B               	goto	l1934
  3046     0F47                     u1610:
  3047     0F47                     l244:
  3048     0F47  0008               	return
  3049     0F48                     __end_of_I2C_Master_Wait:
  3050                           
  3051                           	psect	text13
  3052     06D7                     __ptext13:	
  3053 ;; *************** function _I2C_Master_Init *****************
  3054 ;; Defined at:
  3055 ;;		line 395 in file "env_esclavo.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  c               4   31[BANK0 ] const unsigned long 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1
  3069 ;;      Params:         0       4       0
  3070 ;;      Locals:         0       0       0
  3071 ;;      Temps:          0       0       4
  3072 ;;      Totals:         0       4       4
  3073 ;;Total ram usage:        8 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 4
  3076 ;; This function calls:
  3077 ;;		___lldiv
  3078 ;; This function is called by:
  3079 ;;		_Send_Message_To_Master
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083     06D7                     _I2C_Master_Init:	
  3084                           ;psect for function _I2C_Master_Init
  3085                           
  3086     06D7                     l1978:	
  3087                           ;incstack = 0
  3088                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3089                           
  3090                           
  3091                           ;env_esclavo.c: 396:     SSPCON = 0b00101000;
  3092     06D7  3028               	movlw	40
  3093     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3094     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3095     06DA  0094               	movwf	20	;volatile
  3096     06DB                     l1980:
  3097                           
  3098                           ;env_esclavo.c: 397:    SSPADD = (unsigned char)((4000000 / (4 * c)) - 1);
  3099     06DB  083F               	movf	I2C_Master_Init@c,w
  3100     06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3101     06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3102     06DE  00AD               	movwf	??_I2C_Master_Init^(0+128)
  3103     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3104     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3105     06E1  0840               	movf	I2C_Master_Init@c+1,w
  3106     06E2  1683               	bsf	3,5	;RP0=1, select bank1
  3107     06E3  1303               	bcf	3,6	;RP1=0, select bank1
  3108     06E4  00AE               	movwf	(??_I2C_Master_Init^(0+128)+1)
  3109     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3110     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  3111     06E7  0841               	movf	I2C_Master_Init@c+2,w
  3112     06E8  1683               	bsf	3,5	;RP0=1, select bank1
  3113     06E9  1303               	bcf	3,6	;RP1=0, select bank1
  3114     06EA  00AF               	movwf	(??_I2C_Master_Init^(0+128)+2)
  3115     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3116     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3117     06ED  0842               	movf	I2C_Master_Init@c+3,w
  3118     06EE  1683               	bsf	3,5	;RP0=1, select bank1
  3119     06EF  1303               	bcf	3,6	;RP1=0, select bank1
  3120     06F0  00B0               	movwf	(??_I2C_Master_Init^(0+128)+3)
  3121     06F1  3002               	movlw	2
  3122     06F2                     u1695:
  3123     06F2  1003               	clrc
  3124     06F3  0DAD               	rlf	??_I2C_Master_Init^(0+128),f
  3125     06F4  0DAE               	rlf	(??_I2C_Master_Init^(0+128)+1),f
  3126     06F5  0DAF               	rlf	(??_I2C_Master_Init^(0+128)+2),f
  3127     06F6  0DB0               	rlf	(??_I2C_Master_Init^(0+128)+3),f
  3128     06F7                     u1690:
  3129     06F7  3EFF               	addlw	-1
  3130     06F8  1D03               	skipz
  3131     06F9  2EF2               	goto	u1695
  3132     06FA  0830               	movf	(??_I2C_Master_Init+3)^(0+128),w
  3133     06FB  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  3134     06FC  082F               	movf	(??_I2C_Master_Init+2)^(0+128),w
  3135     06FD  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  3136     06FE  082E               	movf	(??_I2C_Master_Init+1)^(0+128),w
  3137     06FF  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  3138     0700  082D               	movf	??_I2C_Master_Init^(0+128),w
  3139     0701  00A0               	movwf	___lldiv@divisor^(0+128)
  3140     0702  3000               	movlw	0
  3141     0703  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  3142     0704  303D               	movlw	61
  3143     0705  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  3144     0706  3009               	movlw	9
  3145     0707  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  3146     0708  3000               	movlw	0
  3147     0709  00A4               	movwf	___lldiv@dividend^(0+128)
  3148     070A  118A  2525  118A   	fcall	___lldiv
  3149     070D  1683               	bsf	3,5	;RP0=1, select bank1
  3150     070E  1303               	bcf	3,6	;RP1=0, select bank1
  3151     070F  0820               	movf	?___lldiv^(0+128),w
  3152     0710  3EFF               	addlw	255
  3153     0711  0093               	movwf	19	;volatile
  3154     0712                     l1982:
  3155                           
  3156                           ;env_esclavo.c: 399:     SSPSTAT = 0x00;
  3157     0712  0194               	clrf	20	;volatile
  3158     0713                     l1984:
  3159                           
  3160                           ;env_esclavo.c: 400:     TRISC3 = 1;
  3161     0713  1587               	bsf	7,3	;volatile
  3162     0714                     l1986:
  3163                           
  3164                           ;env_esclavo.c: 401:     TRISC4 = 1;
  3165     0714  1607               	bsf	7,4	;volatile
  3166     0715                     l229:
  3167     0715  0008               	return
  3168     0716                     __end_of_I2C_Master_Init:
  3169                           
  3170                           	psect	text14
  3171     0525                     __ptext14:	
  3172 ;; *************** function ___lldiv *****************
  3173 ;; Defined at:
  3174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  divisor         4    0[BANK1 ] unsigned long 
  3177 ;;  dividend        4    4[BANK1 ] unsigned long 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  quotient        4    8[BANK1 ] unsigned long 
  3180 ;;  counter         1   12[BANK1 ] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  4    0[BANK1 ] unsigned long 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, btemp+1
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1
  3190 ;;      Params:         0       0       8
  3191 ;;      Locals:         0       0       5
  3192 ;;      Temps:          0       1       0
  3193 ;;      Totals:         0       1      13
  3194 ;;Total ram usage:       14 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 3
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_I2C_Master_Init
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204     0525                     ___lldiv:	
  3205                           ;psect for function ___lldiv
  3206                           
  3207     0525                     l1938:	
  3208                           ;incstack = 0
  3209                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3210                           
  3211     0525  3000               	movlw	0
  3212     0526  1683               	bsf	3,5	;RP0=1, select bank1
  3213     0527  1303               	bcf	3,6	;RP1=0, select bank1
  3214     0528  00AB               	movwf	(___lldiv@quotient+3)^(0+128)
  3215     0529  3000               	movlw	0
  3216     052A  00AA               	movwf	(___lldiv@quotient+2)^(0+128)
  3217     052B  3000               	movlw	0
  3218     052C  00A9               	movwf	(___lldiv@quotient+1)^(0+128)
  3219     052D  3000               	movlw	0
  3220     052E  00A8               	movwf	___lldiv@quotient^(0+128)
  3221     052F  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3222     0530  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  3223     0531  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  3224     0532  0420               	iorwf	___lldiv@divisor^(0+128),w
  3225     0533  1903               	skipnz
  3226     0534  2D36               	goto	u1621
  3227     0535  2D37               	goto	u1620
  3228     0536                     u1621:
  3229     0536  2D94               	goto	l1960
  3230     0537                     u1620:
  3231     0537                     l1940:
  3232     0537  01AC               	clrf	___lldiv@counter^(0+128)
  3233     0538  0AAC               	incf	___lldiv@counter^(0+128),f
  3234     0539  2D4F               	goto	l1946
  3235     053A                     l1942:
  3236     053A  3001               	movlw	1
  3237     053B  1283               	bcf	3,5	;RP0=0, select bank0
  3238     053C  1303               	bcf	3,6	;RP1=0, select bank0
  3239     053D  00BE               	movwf	??___lldiv
  3240     053E                     u1635:
  3241     053E  1003               	clrc
  3242     053F  1683               	bsf	3,5	;RP0=1, select bank1
  3243     0540  1303               	bcf	3,6	;RP1=0, select bank1
  3244     0541  0DA0               	rlf	___lldiv@divisor^(0+128),f
  3245     0542  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  3246     0543  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  3247     0544  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  3248     0545  1283               	bcf	3,5	;RP0=0, select bank0
  3249     0546  1303               	bcf	3,6	;RP1=0, select bank0
  3250     0547  0BBE               	decfsz	??___lldiv,f
  3251     0548  2D3E               	goto	u1635
  3252     0549                     l1944:
  3253     0549  3001               	movlw	1
  3254     054A  00FF               	movwf	btemp+1
  3255     054B  087F               	movf	btemp+1,w
  3256     054C  1683               	bsf	3,5	;RP0=1, select bank1
  3257     054D  1303               	bcf	3,6	;RP1=0, select bank1
  3258     054E  07AC               	addwf	___lldiv@counter^(0+128),f
  3259     054F                     l1946:
  3260     054F  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  3261     0550  2D52               	goto	u1641
  3262     0551  2D53               	goto	u1640
  3263     0552                     u1641:
  3264     0552  2D3A               	goto	l1942
  3265     0553                     u1640:
  3266     0553                     l1948:
  3267     0553  3001               	movlw	1
  3268     0554  1283               	bcf	3,5	;RP0=0, select bank0
  3269     0555  1303               	bcf	3,6	;RP1=0, select bank0
  3270     0556  00BE               	movwf	??___lldiv
  3271     0557                     u1655:
  3272     0557  1003               	clrc
  3273     0558  1683               	bsf	3,5	;RP0=1, select bank1
  3274     0559  1303               	bcf	3,6	;RP1=0, select bank1
  3275     055A  0DA8               	rlf	___lldiv@quotient^(0+128),f
  3276     055B  0DA9               	rlf	(___lldiv@quotient+1)^(0+128),f
  3277     055C  0DAA               	rlf	(___lldiv@quotient+2)^(0+128),f
  3278     055D  0DAB               	rlf	(___lldiv@quotient+3)^(0+128),f
  3279     055E  1283               	bcf	3,5	;RP0=0, select bank0
  3280     055F  1303               	bcf	3,6	;RP1=0, select bank0
  3281     0560  0BBE               	decfsz	??___lldiv,f
  3282     0561  2D57               	goto	u1655
  3283     0562                     l1950:
  3284     0562  1683               	bsf	3,5	;RP0=1, select bank1
  3285     0563  1303               	bcf	3,6	;RP1=0, select bank1
  3286     0564  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3287     0565  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  3288     0566  1D03               	skipz
  3289     0567  2D72               	goto	u1665
  3290     0568  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3291     0569  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  3292     056A  1D03               	skipz
  3293     056B  2D72               	goto	u1665
  3294     056C  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3295     056D  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  3296     056E  1D03               	skipz
  3297     056F  2D72               	goto	u1665
  3298     0570  0820               	movf	___lldiv@divisor^(0+128),w
  3299     0571  0224               	subwf	___lldiv@dividend^(0+128),w
  3300     0572                     u1665:
  3301     0572  1C03               	skipc
  3302     0573  2D75               	goto	u1661
  3303     0574  2D76               	goto	u1660
  3304     0575                     u1661:
  3305     0575  2D85               	goto	l1956
  3306     0576                     u1660:
  3307     0576                     l1952:
  3308     0576  0820               	movf	___lldiv@divisor^(0+128),w
  3309     0577  02A4               	subwf	___lldiv@dividend^(0+128),f
  3310     0578  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3311     0579  1C03               	skipc
  3312     057A  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  3313     057B  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  3314     057C  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3315     057D  1C03               	skipc
  3316     057E  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  3317     057F  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  3318     0580  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3319     0581  1C03               	skipc
  3320     0582  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  3321     0583  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  3322     0584                     l1954:
  3323     0584  1428               	bsf	___lldiv@quotient^(0+128),0
  3324     0585                     l1956:
  3325     0585  3001               	movlw	1
  3326     0586                     u1675:
  3327     0586  1003               	clrc
  3328     0587  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  3329     0588  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  3330     0589  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  3331     058A  0CA0               	rrf	___lldiv@divisor^(0+128),f
  3332     058B  3EFF               	addlw	-1
  3333     058C  1D03               	skipz
  3334     058D  2D86               	goto	u1675
  3335     058E                     l1958:
  3336     058E  3001               	movlw	1
  3337     058F  02AC               	subwf	___lldiv@counter^(0+128),f
  3338     0590  1D03               	btfss	3,2
  3339     0591  2D93               	goto	u1681
  3340     0592  2D94               	goto	u1680
  3341     0593                     u1681:
  3342     0593  2D53               	goto	l1948
  3343     0594                     u1680:
  3344     0594                     l1960:
  3345     0594  082B               	movf	(___lldiv@quotient+3)^(0+128),w
  3346     0595  00A3               	movwf	(?___lldiv+3)^(0+128)
  3347     0596  082A               	movf	(___lldiv@quotient+2)^(0+128),w
  3348     0597  00A2               	movwf	(?___lldiv+2)^(0+128)
  3349     0598  0829               	movf	(___lldiv@quotient+1)^(0+128),w
  3350     0599  00A1               	movwf	(?___lldiv+1)^(0+128)
  3351     059A  0828               	movf	___lldiv@quotient^(0+128),w
  3352     059B  00A0               	movwf	?___lldiv^(0+128)
  3353     059C                     l366:
  3354     059C  0008               	return
  3355     059D                     __end_of___lldiv:
  3356                           
  3357                           	psect	text15
  3358     0F0D                     __ptext15:	
  3359 ;; *************** function _Prepare_LCD_Pins *****************
  3360 ;; Defined at:
  3361 ;;		line 324 in file "env_esclavo.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		status,2
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1
  3375 ;;      Params:         0       0       0
  3376 ;;      Locals:         0       0       0
  3377 ;;      Temps:          0       0       0
  3378 ;;      Totals:         0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 3
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_Handle_Keypress
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389     0F0D                     _Prepare_LCD_Pins:	
  3390                           ;psect for function _Prepare_LCD_Pins
  3391                           
  3392     0F0D                     l2130:	
  3393                           ;incstack = 0
  3394                           ; Regs used in _Prepare_LCD_Pins: [status,2]
  3395                           
  3396                           
  3397                           ;env_esclavo.c: 326:     TRISB = 0x00;
  3398     0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  3399     0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  3400     0F0F  0186               	clrf	6	;volatile
  3401     0F10                     l203:
  3402     0F10  0008               	return
  3403     0F11                     __end_of_Prepare_LCD_Pins:
  3404                           
  3405                           	psect	text16
  3406     0FE0                     __ptext16:	
  3407 ;; *************** function _LCD_setCursor *****************
  3408 ;; Defined at:
  3409 ;;		line 311 in file "env_esclavo.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  row             1    wreg     unsigned char 
  3412 ;;  column          1   33[BANK0 ] unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  row             1    0[BANK1 ] unsigned char 
  3415 ;;  position        1    3[BANK1 ] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1
  3425 ;;      Params:         0       1       0
  3426 ;;      Locals:         0       0       4
  3427 ;;      Temps:          0       0       0
  3428 ;;      Totals:         0       1       4
  3429 ;;Total ram usage:        5 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; Hardware stack levels required when called: 4
  3432 ;; This function calls:
  3433 ;;		_LCD_command
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;;		_Handle_Keypress
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440     0FE0                     _LCD_setCursor:	
  3441                           ;psect for function _LCD_setCursor
  3442                           
  3443                           
  3444                           ;incstack = 0
  3445                           ; Regs used in _LCD_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3446                           ;LCD_setCursor@row stored from wreg
  3447     0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  3448     0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  3449     0FE2  00A0               	movwf	LCD_setCursor@row^(0+128)
  3450     0FE3                     l2052:
  3451                           
  3452                           ;env_esclavo.c: 312:     unsigned char position = (row == 1) ? 0x80 : 0xC0;
  3453     0FE3  0320               	decf	LCD_setCursor@row^(0+128),w
  3454     0FE4  1903               	btfsc	3,2
  3455     0FE5  2FE7               	goto	u1741
  3456     0FE6  2FE8               	goto	u1740
  3457     0FE7                     u1741:
  3458     0FE7  2FED               	goto	l2056
  3459     0FE8                     u1740:
  3460     0FE8                     l2054:
  3461     0FE8  30C0               	movlw	192
  3462     0FE9  00A1               	movwf	_LCD_setCursor$343^(0+128)
  3463     0FEA  3000               	movlw	0
  3464     0FEB  00A2               	movwf	(_LCD_setCursor$343^(0+128)+1)
  3465     0FEC  2FF1               	goto	l193
  3466     0FED                     l2056:
  3467     0FED  3080               	movlw	128
  3468     0FEE  00A1               	movwf	_LCD_setCursor$343^(0+128)
  3469     0FEF  3000               	movlw	0
  3470     0FF0  00A2               	movwf	(_LCD_setCursor$343^(0+128)+1)
  3471     0FF1                     l193:
  3472     0FF1  0821               	movf	_LCD_setCursor$343^(0+128),w
  3473     0FF2  00A3               	movwf	LCD_setCursor@position^(0+128)
  3474     0FF3                     l2058:
  3475                           
  3476                           ;env_esclavo.c: 313:     position += column;
  3477     0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  3478     0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  3479     0FF5  0841               	movf	LCD_setCursor@column,w
  3480     0FF6  00FF               	movwf	btemp+1
  3481     0FF7  087F               	movf	btemp+1,w
  3482     0FF8  1683               	bsf	3,5	;RP0=1, select bank1
  3483     0FF9  1303               	bcf	3,6	;RP1=0, select bank1
  3484     0FFA  07A3               	addwf	LCD_setCursor@position^(0+128),f
  3485     0FFB                     l2060:
  3486                           
  3487                           ;env_esclavo.c: 314:     LCD_command(position);
  3488     0FFB  0823               	movf	LCD_setCursor@position^(0+128),w
  3489     0FFC  158A  2796  158A   	fcall	_LCD_command
  3490     0FFF                     l194:
  3491     0FFF  0008               	return
  3492     1000                     __end_of_LCD_setCursor:
  3493                           
  3494                           	psect	text17
  3495     07A6                     __ptext17:	
  3496 ;; *************** function _LCD_print *****************
  3497 ;; Defined at:
  3498 ;;		line 317 in file "env_esclavo.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  string          2   33[BANK0 ] PTR const unsigned char 
  3501 ;;		 -> STR_8(16), STR_7(13), ISR@receiveBuffer(16), STR_6(18), 
  3502 ;;		 -> STR_5(15), STR_4(17), STR_3(16), displayString(16), 
  3503 ;;		 -> STR_2(15), STR_1(15), 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1
  3515 ;;      Params:         0       2       0
  3516 ;;      Locals:         0       0       0
  3517 ;;      Temps:          0       0       0
  3518 ;;      Totals:         0       2       0
  3519 ;;Total ram usage:        2 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 4
  3522 ;; This function calls:
  3523 ;;		_LCD_data
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;;		_Handle_Keypress
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530     07A6                     _LCD_print:	
  3531                           ;psect for function _LCD_print
  3532                           
  3533     07A6                     l2062:	
  3534                           ;incstack = 0
  3535                           ; Regs used in _LCD_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3536                           
  3537                           
  3538                           ;env_esclavo.c: 318:     while(*string) {
  3539     07A6  2FB9               	goto	l2068
  3540     07A7                     l2064:
  3541                           
  3542                           ;env_esclavo.c: 319:         LCD_data(*string++);
  3543     07A7  0842               	movf	LCD_print@string+1,w
  3544     07A8  00FF               	movwf	btemp+1
  3545     07A9  0841               	movf	LCD_print@string,w
  3546     07AA  0084               	movwf	4
  3547     07AB  118A  2404  118A   	fcall	stringtab
  3548     07AE  158A  27AD  118A   	fcall	_LCD_data
  3549     07B1                     l2066:
  3550     07B1  3001               	movlw	1
  3551     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  3552     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  3553     07B4  07C1               	addwf	LCD_print@string,f
  3554     07B5  1803               	skipnc
  3555     07B6  0AC2               	incf	LCD_print@string+1,f
  3556     07B7  3000               	movlw	0
  3557     07B8  07C2               	addwf	LCD_print@string+1,f
  3558     07B9                     l2068:
  3559                           
  3560                           ;env_esclavo.c: 318:     while(*string) {
  3561     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3562     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3563     07BB  0842               	movf	LCD_print@string+1,w
  3564     07BC  00FF               	movwf	btemp+1
  3565     07BD  0841               	movf	LCD_print@string,w
  3566     07BE  0084               	movwf	4
  3567     07BF  118A  2404  118A   	fcall	stringtab
  3568     07C2  3A00               	xorlw	0
  3569     07C3  1D03               	skipz
  3570     07C4  2FC6               	goto	u1751
  3571     07C5  2FC7               	goto	u1750
  3572     07C6                     u1751:
  3573     07C6  2FA7               	goto	l2064
  3574     07C7                     u1750:
  3575     07C7                     l200:
  3576     07C7  0008               	return
  3577     07C8                     __end_of_LCD_print:
  3578                           
  3579                           	psect	text18
  3580     0FAD                     __ptext18:	
  3581 ;; *************** function _LCD_data *****************
  3582 ;; Defined at:
  3583 ;;		line 273 in file "env_esclavo.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  data            1    wreg     unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  data            1   32[BANK0 ] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1
  3597 ;;      Params:         0       0       0
  3598 ;;      Locals:         0       1       0
  3599 ;;      Temps:          0       2       0
  3600 ;;      Totals:         0       3       0
  3601 ;;Total ram usage:        3 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 3
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_LCD_print
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611     0FAD                     _LCD_data:	
  3612                           ;psect for function _LCD_data
  3613                           
  3614                           
  3615                           ;incstack = 0
  3616                           ; Regs used in _LCD_data: [wreg]
  3617                           ;LCD_data@data stored from wreg
  3618     0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3619     0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3620     0FAF  00C0               	movwf	LCD_data@data
  3621     0FB0                     l1996:
  3622                           
  3623                           ;env_esclavo.c: 274:     RA0 = 1;
  3624     0FB0  1405               	bsf	5,0	;volatile
  3625                           
  3626                           ;env_esclavo.c: 275:     RA1 = 0;
  3627     0FB1  1085               	bcf	5,1	;volatile
  3628     0FB2                     l1998:
  3629                           
  3630                           ;env_esclavo.c: 276:     PORTB = data;
  3631     0FB2  0840               	movf	LCD_data@data,w
  3632     0FB3  0086               	movwf	6	;volatile
  3633     0FB4                     l2000:
  3634                           
  3635                           ;env_esclavo.c: 277:     RA2 = 1;
  3636     0FB4  1505               	bsf	5,2	;volatile
  3637                           
  3638                           ;env_esclavo.c: 278:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3639     0FB5  3003               	movlw	3
  3640     0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3641     0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  3642     0FB8  00BF               	movwf	??_LCD_data+1
  3643     0FB9  3097               	movlw	151
  3644     0FBA  00BE               	movwf	??_LCD_data
  3645     0FBB                     u2247:
  3646     0FBB  0BBE               	decfsz	??_LCD_data,f
  3647     0FBC  2FBB               	goto	u2247
  3648     0FBD  0BBF               	decfsz	??_LCD_data+1,f
  3649     0FBE  2FBB               	goto	u2247
  3650     0FBF  0000               	nop
  3651     0FC0                     l2002:
  3652                           
  3653                           ;env_esclavo.c: 279:     RA2 = 0;
  3654     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  3655     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  3656     0FC2  1105               	bcf	5,2	;volatile
  3657     0FC3                     l181:
  3658     0FC3  0008               	return
  3659     0FC4                     __end_of_LCD_data:
  3660                           
  3661                           	psect	text19
  3662     0605                     __ptext19:	
  3663 ;; *************** function _LCD_init *****************
  3664 ;; Defined at:
  3665 ;;		line 282 in file "env_esclavo.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1
  3679 ;;      Params:         0       0       0
  3680 ;;      Locals:         0       0       0
  3681 ;;      Temps:          0       2       0
  3682 ;;      Totals:         0       2       0
  3683 ;;Total ram usage:        2 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 4
  3686 ;; This function calls:
  3687 ;;		_LCD_command
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;;		_Handle_Keypress
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694     0605                     _LCD_init:	
  3695                           ;psect for function _LCD_init
  3696                           
  3697     0605                     l2030:	
  3698                           ;incstack = 0
  3699                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3700                           
  3701                           
  3702                           ;env_esclavo.c: 284:     ADCON1 = 0x07;
  3703     0605  3007               	movlw	7
  3704     0606  1683               	bsf	3,5	;RP0=1, select bank1
  3705     0607  1303               	bcf	3,6	;RP1=0, select bank1
  3706     0608  009F               	movwf	31	;volatile
  3707     0609                     l2032:
  3708                           
  3709                           ;env_esclavo.c: 285:     TRISA = 0x00;
  3710     0609  0185               	clrf	5	;volatile
  3711     060A                     l2034:
  3712                           
  3713                           ;env_esclavo.c: 286:     TRISB = 0x00;
  3714     060A  0186               	clrf	6	;volatile
  3715                           
  3716                           ;env_esclavo.c: 289:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3717     060B  301A               	movlw	26
  3718     060C  1283               	bcf	3,5	;RP0=0, select bank0
  3719     060D  1303               	bcf	3,6	;RP1=0, select bank0
  3720     060E  00C2               	movwf	??_LCD_init+1
  3721     060F  30F8               	movlw	248
  3722     0610  00C1               	movwf	??_LCD_init
  3723     0611                     u2257:
  3724     0611  0BC1               	decfsz	??_LCD_init,f
  3725     0612  2E11               	goto	u2257
  3726     0613  0BC2               	decfsz	??_LCD_init+1,f
  3727     0614  2E11               	goto	u2257
  3728     0615                     l2036:
  3729                           
  3730                           ;env_esclavo.c: 292:     LCD_command(0x38);
  3731     0615  3038               	movlw	56
  3732     0616  158A  2796  118A   	fcall	_LCD_command
  3733     0619                     l2038:
  3734                           
  3735                           ;env_esclavo.c: 293:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3736     0619  3007               	movlw	7
  3737     061A  1283               	bcf	3,5	;RP0=0, select bank0
  3738     061B  1303               	bcf	3,6	;RP1=0, select bank0
  3739     061C  00C2               	movwf	??_LCD_init+1
  3740     061D  307C               	movlw	124
  3741     061E  00C1               	movwf	??_LCD_init
  3742     061F                     u2267:
  3743     061F  0BC1               	decfsz	??_LCD_init,f
  3744     0620  2E1F               	goto	u2267
  3745     0621  0BC2               	decfsz	??_LCD_init+1,f
  3746     0622  2E1F               	goto	u2267
  3747     0623  2E24               	nop2
  3748                           
  3749                           ;env_esclavo.c: 295:     LCD_command(0x0F);
  3750     0624  300F               	movlw	15
  3751     0625  158A  2796  118A   	fcall	_LCD_command
  3752     0628                     l2040:
  3753                           
  3754                           ;env_esclavo.c: 296:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3755     0628  3007               	movlw	7
  3756     0629  1283               	bcf	3,5	;RP0=0, select bank0
  3757     062A  1303               	bcf	3,6	;RP1=0, select bank0
  3758     062B  00C2               	movwf	??_LCD_init+1
  3759     062C  307C               	movlw	124
  3760     062D  00C1               	movwf	??_LCD_init
  3761     062E                     u2277:
  3762     062E  0BC1               	decfsz	??_LCD_init,f
  3763     062F  2E2E               	goto	u2277
  3764     0630  0BC2               	decfsz	??_LCD_init+1,f
  3765     0631  2E2E               	goto	u2277
  3766     0632  2E33               	nop2
  3767     0633                     l2042:
  3768                           
  3769                           ;env_esclavo.c: 298:     LCD_command(0x01);
  3770     0633  3001               	movlw	1
  3771     0634  158A  2796  118A   	fcall	_LCD_command
  3772                           
  3773                           ;env_esclavo.c: 299:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3774     0637  3003               	movlw	3
  3775     0638  1283               	bcf	3,5	;RP0=0, select bank0
  3776     0639  1303               	bcf	3,6	;RP1=0, select bank0
  3777     063A  00C2               	movwf	??_LCD_init+1
  3778     063B  3097               	movlw	151
  3779     063C  00C1               	movwf	??_LCD_init
  3780     063D                     u2287:
  3781     063D  0BC1               	decfsz	??_LCD_init,f
  3782     063E  2E3D               	goto	u2287
  3783     063F  0BC2               	decfsz	??_LCD_init+1,f
  3784     0640  2E3D               	goto	u2287
  3785     0641  0000               	nop
  3786     0642                     l2044:
  3787                           
  3788                           ;env_esclavo.c: 301:     LCD_command(0x02);
  3789     0642  3002               	movlw	2
  3790     0643  158A  2796  118A   	fcall	_LCD_command
  3791     0646                     l2046:
  3792                           
  3793                           ;env_esclavo.c: 302:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3794     0646  3003               	movlw	3
  3795     0647  1283               	bcf	3,5	;RP0=0, select bank0
  3796     0648  1303               	bcf	3,6	;RP1=0, select bank0
  3797     0649  00C2               	movwf	??_LCD_init+1
  3798     064A  3097               	movlw	151
  3799     064B  00C1               	movwf	??_LCD_init
  3800     064C                     u2297:
  3801     064C  0BC1               	decfsz	??_LCD_init,f
  3802     064D  2E4C               	goto	u2297
  3803     064E  0BC2               	decfsz	??_LCD_init+1,f
  3804     064F  2E4C               	goto	u2297
  3805     0650  0000               	nop
  3806     0651                     l184:
  3807     0651  0008               	return
  3808     0652                     __end_of_LCD_init:
  3809                           
  3810                           	psect	text20
  3811     0F58                     __ptext20:	
  3812 ;; *************** function _LCD_clear *****************
  3813 ;; Defined at:
  3814 ;;		line 306 in file "env_esclavo.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1
  3828 ;;      Params:         0       0       0
  3829 ;;      Locals:         0       0       0
  3830 ;;      Temps:          0       2       0
  3831 ;;      Totals:         0       2       0
  3832 ;;Total ram usage:        2 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 4
  3835 ;; This function calls:
  3836 ;;		_LCD_command
  3837 ;; This function is called by:
  3838 ;;		_main
  3839 ;;		_Handle_Keypress
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843     0F58                     _LCD_clear:	
  3844                           ;psect for function _LCD_clear
  3845                           
  3846     0F58                     l2048:	
  3847                           ;incstack = 0
  3848                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  3849                           
  3850                           
  3851                           ;env_esclavo.c: 307:     LCD_command(0x01);
  3852     0F58  3001               	movlw	1
  3853     0F59  158A  2796  158A   	fcall	_LCD_command
  3854     0F5C                     l2050:
  3855                           
  3856                           ;env_esclavo.c: 308:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3857     0F5C  3003               	movlw	3
  3858     0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  3859     0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  3860     0F5F  00C2               	movwf	??_LCD_clear+1
  3861     0F60  3097               	movlw	151
  3862     0F61  00C1               	movwf	??_LCD_clear
  3863     0F62                     u2307:
  3864     0F62  0BC1               	decfsz	??_LCD_clear,f
  3865     0F63  2F62               	goto	u2307
  3866     0F64  0BC2               	decfsz	??_LCD_clear+1,f
  3867     0F65  2F62               	goto	u2307
  3868     0F66  0000               	nop
  3869     0F67                     l187:
  3870     0F67  0008               	return
  3871     0F68                     __end_of_LCD_clear:
  3872                           
  3873                           	psect	text21
  3874     0F96                     __ptext21:	
  3875 ;; *************** function _LCD_command *****************
  3876 ;; Defined at:
  3877 ;;		line 264 in file "env_esclavo.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  command         1    wreg     unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  command         1   32[BANK0 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1
  3891 ;;      Params:         0       0       0
  3892 ;;      Locals:         0       1       0
  3893 ;;      Temps:          0       2       0
  3894 ;;      Totals:         0       3       0
  3895 ;;Total ram usage:        3 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 3
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_LCD_init
  3902 ;;		_LCD_clear
  3903 ;;		_LCD_setCursor
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907     0F96                     _LCD_command:	
  3908                           ;psect for function _LCD_command
  3909                           
  3910                           
  3911                           ;incstack = 0
  3912                           ; Regs used in _LCD_command: [wreg]
  3913                           ;LCD_command@command stored from wreg
  3914     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  3915     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  3916     0F98  00C0               	movwf	LCD_command@command
  3917     0F99                     l1988:
  3918                           
  3919                           ;env_esclavo.c: 265:     RA0 = 0;
  3920     0F99  1005               	bcf	5,0	;volatile
  3921                           
  3922                           ;env_esclavo.c: 266:     RA1 = 0;
  3923     0F9A  1085               	bcf	5,1	;volatile
  3924     0F9B                     l1990:
  3925                           
  3926                           ;env_esclavo.c: 267:     PORTB = command;
  3927     0F9B  0840               	movf	LCD_command@command,w
  3928     0F9C  0086               	movwf	6	;volatile
  3929     0F9D                     l1992:
  3930                           
  3931                           ;env_esclavo.c: 268:     RA2 = 1;
  3932     0F9D  1505               	bsf	5,2	;volatile
  3933                           
  3934                           ;env_esclavo.c: 269:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3935     0F9E  3003               	movlw	3
  3936     0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  3937     0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  3938     0FA1  00BF               	movwf	??_LCD_command+1
  3939     0FA2  3097               	movlw	151
  3940     0FA3  00BE               	movwf	??_LCD_command
  3941     0FA4                     u2317:
  3942     0FA4  0BBE               	decfsz	??_LCD_command,f
  3943     0FA5  2FA4               	goto	u2317
  3944     0FA6  0BBF               	decfsz	??_LCD_command+1,f
  3945     0FA7  2FA4               	goto	u2317
  3946     0FA8  0000               	nop
  3947     0FA9                     l1994:
  3948                           
  3949                           ;env_esclavo.c: 270:     RA2 = 0;
  3950     0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  3951     0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  3952     0FAB  1105               	bcf	5,2	;volatile
  3953     0FAC                     l178:
  3954     0FAC  0008               	return
  3955     0FAD                     __end_of_LCD_command:
  3956                           
  3957                           	psect	text22
  3958     028E                     __ptext22:	
  3959 ;; *************** function _ISR *****************
  3960 ;; Defined at:
  3961 ;;		line 220 in file "env_esclavo.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  temp            1   29[BANK0 ] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1
  3975 ;;      Params:         0       0       0
  3976 ;;      Locals:         0       1       0
  3977 ;;      Temps:          0       7       0
  3978 ;;      Totals:         0       8       0
  3979 ;;Total ram usage:        8 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 2
  3982 ;; This function calls:
  3983 ;;		i1_I2C_Master_Init
  3984 ;;		i1_LCD_clear
  3985 ;;		i1_LCD_print
  3986 ;;		i1_LCD_setCursor
  3987 ;; This function is called by:
  3988 ;;		Interrupt level 1
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992     028E                     _ISR:	
  3993                           ;psect for function _ISR
  3994                           
  3995     028E                     i1l1872:
  3996                           
  3997                           ;env_esclavo.c: 221:     static char receiveBuffer[15 + 1];;env_esclavo.c: 222:     stat
      +                          ic int index = 0;;env_esclavo.c: 224:     if (SSPIF) {
  3998     028E  1D8C               	btfss	12,3	;volatile
  3999     028F  2A91               	goto	u152_21
  4000     0290  2A92               	goto	u152_20
  4001     0291                     u152_21:
  4002     0291  2B4F               	goto	i1l175
  4003     0292                     u152_20:
  4004     0292                     i1l1874:
  4005                           
  4006                           ;env_esclavo.c: 225:         char temp = SSPBUF;
  4007     0292  0813               	movf	19,w	;volatile
  4008     0293  00BD               	movwf	ISR@temp
  4009     0294                     i1l1876:
  4010                           
  4011                           ;env_esclavo.c: 226:         SSPCONbits.CKP = 1;
  4012     0294  1614               	bsf	20,4	;volatile
  4013     0295                     i1l1878:
  4014                           
  4015                           ;env_esclavo.c: 228:         if (!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  4016     0295  1683               	bsf	3,5	;RP0=1, select bank1
  4017     0296  1303               	bcf	3,6	;RP1=0, select bank1
  4018     0297  1A94               	btfsc	20,5	;volatile
  4019     0298  2A9A               	goto	u153_21
  4020     0299  2A9B               	goto	u153_20
  4021     029A                     u153_21:
  4022     029A  2AA4               	goto	i1l168
  4023     029B                     u153_20:
  4024     029B                     i1l1880:
  4025     029B  1914               	btfsc	20,2	;volatile
  4026     029C  2A9E               	goto	u154_21
  4027     029D  2A9F               	goto	u154_20
  4028     029E                     u154_21:
  4029     029E  2AA4               	goto	i1l168
  4030     029F                     u154_20:
  4031     029F                     i1l1882:
  4032                           
  4033                           ;env_esclavo.c: 229:             index = 0;
  4034     029F  1283               	bcf	3,5	;RP0=0, select bank0
  4035     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4036     02A1  01C3               	clrf	ISR@index
  4037     02A2  01C4               	clrf	ISR@index+1
  4038                           
  4039                           ;env_esclavo.c: 230:         } else if (SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  4040     02A3  2B4C               	goto	i1l1930
  4041     02A4                     i1l168:
  4042     02A4  1E94               	btfss	20,5	;volatile
  4043     02A5  2AA7               	goto	u155_21
  4044     02A6  2AA8               	goto	u155_20
  4045     02A7                     u155_21:
  4046     02A7  2B4C               	goto	i1l1930
  4047     02A8                     u155_20:
  4048     02A8                     i1l1884:
  4049     02A8  1914               	btfsc	20,2	;volatile
  4050     02A9  2AAB               	goto	u156_21
  4051     02AA  2AAC               	goto	u156_20
  4052     02AB                     u156_21:
  4053     02AB  2B4C               	goto	i1l1930
  4054     02AC                     u156_20:
  4055     02AC                     i1l1886:
  4056                           
  4057                           ;env_esclavo.c: 231:             if (index < 15) {
  4058     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  4059     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  4060     02AE  0844               	movf	ISR@index+1,w
  4061     02AF  3A80               	xorlw	128
  4062     02B0  00FF               	movwf	btemp+1
  4063     02B1  3080               	movlw	128
  4064     02B2  027F               	subwf	btemp+1,w
  4065     02B3  1D03               	skipz
  4066     02B4  2AB7               	goto	u157_25
  4067     02B5  300F               	movlw	15
  4068     02B6  0243               	subwf	ISR@index,w
  4069     02B7                     u157_25:
  4070     02B7  1803               	skipnc
  4071     02B8  2ABA               	goto	u157_21
  4072     02B9  2ABB               	goto	u157_20
  4073     02BA                     u157_21:
  4074     02BA  2B4C               	goto	i1l1930
  4075     02BB                     u157_20:
  4076     02BB                     i1l1888:
  4077                           
  4078                           ;env_esclavo.c: 232:                 receiveBuffer[index++] = temp;
  4079     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  4080     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  4081     02BD  0843               	movf	ISR@index,w
  4082     02BE  3EBD               	addlw	(low (ISR@receiveBuffer| 0))& (0+255)
  4083     02BF  0084               	movwf	4
  4084     02C0  083D               	movf	ISR@temp,w
  4085     02C1  1383               	bcf	3,7	;select IRP bank1
  4086     02C2  0080               	movwf	0
  4087     02C3                     i1l1890:
  4088     02C3  3001               	movlw	1
  4089     02C4  07C3               	addwf	ISR@index,f
  4090     02C5  1803               	skipnc
  4091     02C6  0AC4               	incf	ISR@index+1,f
  4092     02C7  3000               	movlw	0
  4093     02C8  07C4               	addwf	ISR@index+1,f
  4094     02C9                     i1l1892:
  4095                           
  4096                           ;env_esclavo.c: 233:                 if (temp == '\0' || index == 15) {
  4097     02C9  083D               	movf	ISR@temp,w
  4098     02CA  1903               	btfsc	3,2
  4099     02CB  2ACD               	goto	u158_21
  4100     02CC  2ACE               	goto	u158_20
  4101     02CD                     u158_21:
  4102     02CD  2AD5               	goto	i1l1896
  4103     02CE                     u158_20:
  4104     02CE                     i1l1894:
  4105     02CE  300F               	movlw	15
  4106     02CF  0643               	xorwf	ISR@index,w
  4107     02D0  0444               	iorwf	ISR@index+1,w
  4108     02D1  1D03               	btfss	3,2
  4109     02D2  2AD4               	goto	u159_21
  4110     02D3  2AD5               	goto	u159_20
  4111     02D4                     u159_21:
  4112     02D4  2B4C               	goto	i1l170
  4113     02D5                     u159_20:
  4114     02D5                     i1l1896:
  4115                           
  4116                           ;env_esclavo.c: 234:                     receiveBuffer[index] = '\0';
  4117     02D5  0843               	movf	ISR@index,w
  4118     02D6  3EBD               	addlw	(low (ISR@receiveBuffer| 0))& (0+255)
  4119     02D7  0084               	movwf	4
  4120     02D8  0180               	clrf	0
  4121     02D9                     i1l1898:
  4122                           
  4123                           ;env_esclavo.c: 235:                     LCD_clear();
  4124     02D9  158A  2748  118A   	fcall	i1_LCD_clear
  4125     02DC                     i1l1900:
  4126                           
  4127                           ;env_esclavo.c: 236:                     LCD_setCursor(1, 0);
  4128     02DC  1283               	bcf	3,5	;RP0=0, select bank0
  4129     02DD  1303               	bcf	3,6	;RP1=0, select bank0
  4130     02DE  01A3               	clrf	i1LCD_setCursor@column
  4131     02DF  3001               	movlw	1
  4132     02E0  158A  27C4  118A   	fcall	i1_LCD_setCursor
  4133     02E3                     i1l1902:
  4134                           
  4135                           ;env_esclavo.c: 237:                     LCD_print(receiveBuffer);
  4136     02E3  30BD               	movlw	(low (ISR@receiveBuffer| 0))& (0+255)
  4137     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  4138     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  4139     02E6  00A3               	movwf	i1LCD_print@string
  4140     02E7  3000               	movlw	0
  4141     02E8  00A4               	movwf	i1LCD_print@string+1
  4142     02E9  118A  27C8  118A   	fcall	i1_LCD_print
  4143     02EC                     i1l1904:
  4144                           
  4145                           ;env_esclavo.c: 238:                     index = 0;
  4146     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  4147     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  4148     02EE  01C3               	clrf	ISR@index
  4149     02EF  01C4               	clrf	ISR@index+1
  4150     02F0                     i1l1906:
  4151                           
  4152                           ;env_esclavo.c: 239:                     allow_input = 1;
  4153     02F0  3001               	movlw	1
  4154     02F1  00C7               	movwf	_allow_input	;volatile
  4155     02F2                     i1l1908:
  4156                           
  4157                           ;env_esclavo.c: 240:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  4158     02F2  300B               	movlw	11
  4159     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  4160     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  4161     02F5  00B8               	movwf	??_ISR+2
  4162     02F6  3026               	movlw	38
  4163     02F7  00B7               	movwf	??_ISR+1
  4164     02F8  305D               	movlw	93
  4165     02F9  00B6               	movwf	??_ISR
  4166     02FA                     u232_27:
  4167     02FA  0BB6               	decfsz	??_ISR,f
  4168     02FB  2AFA               	goto	u232_27
  4169     02FC  0BB7               	decfsz	??_ISR+1,f
  4170     02FD  2AFA               	goto	u232_27
  4171     02FE  0BB8               	decfsz	??_ISR+2,f
  4172     02FF  2AFA               	goto	u232_27
  4173     0300  0000               	nop
  4174     0301                     i1l1910:
  4175                           
  4176                           ;env_esclavo.c: 241:                 LCD_clear();
  4177     0301  158A  2748  118A   	fcall	i1_LCD_clear
  4178     0304                     i1l1912:
  4179                           
  4180                           ;env_esclavo.c: 242:                 LCD_setCursor(1,0);
  4181     0304  1283               	bcf	3,5	;RP0=0, select bank0
  4182     0305  1303               	bcf	3,6	;RP1=0, select bank0
  4183     0306  01A3               	clrf	i1LCD_setCursor@column
  4184     0307  3001               	movlw	1
  4185     0308  158A  27C4  118A   	fcall	i1_LCD_setCursor
  4186     030B                     i1l1914:
  4187                           
  4188                           ;env_esclavo.c: 243:                 LCD_print("Escriba res-");
  4189     030B  3081               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4190     030C  1283               	bcf	3,5	;RP0=0, select bank0
  4191     030D  1303               	bcf	3,6	;RP1=0, select bank0
  4192     030E  00A3               	movwf	i1LCD_print@string
  4193     030F  3080               	movlw	128
  4194     0310  00A4               	movwf	i1LCD_print@string+1
  4195     0311  118A  27C8  118A   	fcall	i1_LCD_print
  4196     0314                     i1l1916:
  4197                           
  4198                           ;env_esclavo.c: 244:                 LCD_setCursor(2,0);
  4199     0314  1283               	bcf	3,5	;RP0=0, select bank0
  4200     0315  1303               	bcf	3,6	;RP1=0, select bank0
  4201     0316  01A3               	clrf	i1LCD_setCursor@column
  4202     0317  3002               	movlw	2
  4203     0318  158A  27C4  118A   	fcall	i1_LCD_setCursor
  4204     031B                     i1l1918:
  4205                           
  4206                           ;env_esclavo.c: 245:                 LCD_print("para maestro...");
  4207     031B  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  4208     031C  1283               	bcf	3,5	;RP0=0, select bank0
  4209     031D  1303               	bcf	3,6	;RP1=0, select bank0
  4210     031E  00A3               	movwf	i1LCD_print@string
  4211     031F  3080               	movlw	128
  4212     0320  00A4               	movwf	i1LCD_print@string+1
  4213     0321  118A  27C8  118A   	fcall	i1_LCD_print
  4214     0324                     i1l1920:
  4215                           
  4216                           ;env_esclavo.c: 246:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  4217     0324  300B               	movlw	11
  4218     0325  1283               	bcf	3,5	;RP0=0, select bank0
  4219     0326  1303               	bcf	3,6	;RP1=0, select bank0
  4220     0327  00B8               	movwf	??_ISR+2
  4221     0328  3026               	movlw	38
  4222     0329  00B7               	movwf	??_ISR+1
  4223     032A  305D               	movlw	93
  4224     032B  00B6               	movwf	??_ISR
  4225     032C                     u233_27:
  4226     032C  0BB6               	decfsz	??_ISR,f
  4227     032D  2B2C               	goto	u233_27
  4228     032E  0BB7               	decfsz	??_ISR+1,f
  4229     032F  2B2C               	goto	u233_27
  4230     0330  0BB8               	decfsz	??_ISR+2,f
  4231     0331  2B2C               	goto	u233_27
  4232     0332  0000               	nop
  4233     0333                     i1l1922:
  4234                           
  4235                           ;env_esclavo.c: 247:                 LCD_clear();
  4236     0333  158A  2748  118A   	fcall	i1_LCD_clear
  4237     0336                     i1l1924:
  4238                           
  4239                           ;env_esclavo.c: 248:                 LCD_setCursor(1,0);
  4240     0336  1283               	bcf	3,5	;RP0=0, select bank0
  4241     0337  1303               	bcf	3,6	;RP1=0, select bank0
  4242     0338  01A3               	clrf	i1LCD_setCursor@column
  4243     0339  3001               	movlw	1
  4244     033A  158A  27C4  118A   	fcall	i1_LCD_setCursor
  4245     033D                     i1l1926:
  4246                           
  4247                           ;env_esclavo.c: 251:                     i2c_role = 0;
  4248     033D  1283               	bcf	3,5	;RP0=0, select bank0
  4249     033E  1303               	bcf	3,6	;RP1=0, select bank0
  4250     033F  01DF               	clrf	_i2c_role	;volatile
  4251     0340                     i1l1928:
  4252                           
  4253                           ;env_esclavo.c: 252:                     I2C_Master_Init(100000);
  4254     0340  3000               	movlw	0
  4255     0341  00B1               	movwf	i1I2C_Master_Init@c+3
  4256     0342  3001               	movlw	1
  4257     0343  00B0               	movwf	i1I2C_Master_Init@c+2
  4258     0344  3086               	movlw	134
  4259     0345  00AF               	movwf	i1I2C_Master_Init@c+1
  4260     0346  30A0               	movlw	160
  4261     0347  00AE               	movwf	i1I2C_Master_Init@c
  4262     0348  118A  274D  118A   	fcall	i1_I2C_Master_Init
  4263     034B  2B4C               	goto	i1l1930
  4264     034C                     i1l170:	
  4265                           ;env_esclavo.c: 256:         }
  4266                           
  4267     034C                     i1l1930:
  4268                           
  4269                           ;env_esclavo.c: 257:         SSPIF = 0;
  4270     034C  1283               	bcf	3,5	;RP0=0, select bank0
  4271     034D  1303               	bcf	3,6	;RP1=0, select bank0
  4272     034E  118C               	bcf	12,3	;volatile
  4273     034F                     i1l175:
  4274     034F  083C               	movf	??_ISR+6,w
  4275     0350  083B               	movf	??_ISR+5,w
  4276     0351  008A               	movwf	10
  4277     0352  083A               	movf	??_ISR+4,w
  4278     0353  0084               	movwf	4
  4279     0354  0E39               	swapf	??_ISR+3,w
  4280     0355  0083               	movwf	3
  4281     0356  0EFE               	swapf	btemp,f
  4282     0357  0E7E               	swapf	btemp,w
  4283     0358  0009               	retfie
  4284     0359                     __end_of_ISR:
  4285                           
  4286                           	psect	intentry
  4287     0004                     __pintentry:	
  4288                           ;incstack = 0
  4289                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4290                           
  4291     0004                     interrupt_function:
  4292     007E                     saved_w	set	btemp
  4293     0004  00FE               	movwf	btemp
  4294     0005  0E03               	swapf	3,w
  4295     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4296     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4297     0008  00B9               	movwf	??_ISR+3
  4298     0009  0804               	movf	4,w
  4299     000A  00BA               	movwf	??_ISR+4
  4300     000B  080A               	movf	10,w
  4301     000C  00BB               	movwf	??_ISR+5
  4302     000D  087F               	movf	btemp+1,w
  4303     000E  00BC               	movwf	??_ISR+6
  4304     000F  118A  2A8E         	ljmp	_ISR
  4305                           
  4306                           	psect	text23
  4307     0FC4                     __ptext23:	
  4308 ;; *************** function i1_LCD_setCursor *****************
  4309 ;; Defined at:
  4310 ;;		line 311 in file "env_esclavo.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  row             1    wreg     unsigned char 
  4313 ;;  column          1    3[BANK0 ] unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  row             1    4[BANK0 ] unsigned char 
  4316 ;;  position        1    7[BANK0 ] unsigned char 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1
  4326 ;;      Params:         0       1       0
  4327 ;;      Locals:         0       4       0
  4328 ;;      Temps:          0       0       0
  4329 ;;      Totals:         0       5       0
  4330 ;;Total ram usage:        5 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 1
  4333 ;; This function calls:
  4334 ;;		i1_LCD_command
  4335 ;; This function is called by:
  4336 ;;		_ISR
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340     0FC4                     i1_LCD_setCursor:	
  4341                           ;psect for function i1_LCD_setCursor
  4342                           
  4343                           
  4344                           ;incstack = 0
  4345                           ; Regs used in i1_LCD_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4346                           ;i1LCD_setCursor@row stored from wreg
  4347     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  4348     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  4349     0FC6  00A4               	movwf	i1LCD_setCursor@row
  4350     0FC7                     i1l1824:
  4351                           
  4352                           ;env_esclavo.c: 312:     unsigned char position = (row == 1) ? 0x80 : 0xC0;
  4353     0FC7  0324               	decf	i1LCD_setCursor@row,w
  4354     0FC8  1903               	btfsc	3,2
  4355     0FC9  2FCB               	goto	u147_21
  4356     0FCA  2FCC               	goto	u147_20
  4357     0FCB                     u147_21:
  4358     0FCB  2FD1               	goto	i1l1828
  4359     0FCC                     u147_20:
  4360     0FCC                     i1l1826:
  4361     0FCC  30C0               	movlw	192
  4362     0FCD  00A5               	movwf	i1_LCD_setCursor$343
  4363     0FCE  3000               	movlw	0
  4364     0FCF  00A6               	movwf	i1_LCD_setCursor$343+1
  4365     0FD0  2FD5               	goto	i1l193
  4366     0FD1                     i1l1828:
  4367     0FD1  3080               	movlw	128
  4368     0FD2  00A5               	movwf	i1_LCD_setCursor$343
  4369     0FD3  3000               	movlw	0
  4370     0FD4  00A6               	movwf	i1_LCD_setCursor$343+1
  4371     0FD5                     i1l193:
  4372     0FD5  0825               	movf	i1_LCD_setCursor$343,w
  4373     0FD6  00A7               	movwf	i1LCD_setCursor@position
  4374     0FD7                     i1l1830:
  4375                           
  4376                           ;env_esclavo.c: 313:     position += column;
  4377     0FD7  0823               	movf	i1LCD_setCursor@column,w
  4378     0FD8  00FF               	movwf	btemp+1
  4379     0FD9  087F               	movf	btemp+1,w
  4380     0FDA  07A7               	addwf	i1LCD_setCursor@position,f
  4381     0FDB                     i1l1832:
  4382                           
  4383                           ;env_esclavo.c: 314:     LCD_command(position);
  4384     0FDB  0827               	movf	i1LCD_setCursor@position,w
  4385     0FDC  158A  2768  158A   	fcall	i1_LCD_command
  4386     0FDF                     i1l194:
  4387     0FDF  0008               	return
  4388     0FE0                     __end_ofi1_LCD_setCursor:
  4389                           
  4390                           	psect	text24
  4391     07C8                     __ptext24:	
  4392 ;; *************** function i1_LCD_print *****************
  4393 ;; Defined at:
  4394 ;;		line 317 in file "env_esclavo.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  string          2    3[BANK0 ] PTR const unsigned char 
  4397 ;;		 -> STR_8(16), STR_7(13), ISR@receiveBuffer(16), STR_6(18), 
  4398 ;;		 -> STR_5(15), STR_4(17), STR_3(16), displayString(16), 
  4399 ;;		 -> STR_2(15), STR_1(15), 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1
  4411 ;;      Params:         0       2       0
  4412 ;;      Locals:         0       0       0
  4413 ;;      Temps:          0       0       0
  4414 ;;      Totals:         0       2       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used: 1
  4417 ;; Hardware stack levels required when called: 1
  4418 ;; This function calls:
  4419 ;;		i1_LCD_data
  4420 ;; This function is called by:
  4421 ;;		_ISR
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425     07C8                     i1_LCD_print:	
  4426                           ;psect for function i1_LCD_print
  4427                           
  4428     07C8                     i1l1834:	
  4429                           ;incstack = 0
  4430                           ; Regs used in i1_LCD_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4431                           
  4432                           
  4433                           ;env_esclavo.c: 318:     while(*string) {
  4434     07C8  2FDB               	goto	i1l1840
  4435     07C9                     i1l1836:
  4436                           
  4437                           ;env_esclavo.c: 319:         LCD_data(*string++);
  4438     07C9  0824               	movf	i1LCD_print@string+1,w
  4439     07CA  00FF               	movwf	btemp+1
  4440     07CB  0823               	movf	i1LCD_print@string,w
  4441     07CC  0084               	movwf	4
  4442     07CD  118A  2404  118A   	fcall	stringtab
  4443     07D0  158A  277F  118A   	fcall	i1_LCD_data
  4444     07D3                     i1l1838:
  4445     07D3  3001               	movlw	1
  4446     07D4  1283               	bcf	3,5	;RP0=0, select bank0
  4447     07D5  1303               	bcf	3,6	;RP1=0, select bank0
  4448     07D6  07A3               	addwf	i1LCD_print@string,f
  4449     07D7  1803               	skipnc
  4450     07D8  0AA4               	incf	i1LCD_print@string+1,f
  4451     07D9  3000               	movlw	0
  4452     07DA  07A4               	addwf	i1LCD_print@string+1,f
  4453     07DB                     i1l1840:
  4454                           
  4455                           ;env_esclavo.c: 318:     while(*string) {
  4456     07DB  1283               	bcf	3,5	;RP0=0, select bank0
  4457     07DC  1303               	bcf	3,6	;RP1=0, select bank0
  4458     07DD  0824               	movf	i1LCD_print@string+1,w
  4459     07DE  00FF               	movwf	btemp+1
  4460     07DF  0823               	movf	i1LCD_print@string,w
  4461     07E0  0084               	movwf	4
  4462     07E1  118A  2404  118A   	fcall	stringtab
  4463     07E4  3A00               	xorlw	0
  4464     07E5  1D03               	skipz
  4465     07E6  2FE8               	goto	u148_21
  4466     07E7  2FE9               	goto	u148_20
  4467     07E8                     u148_21:
  4468     07E8  2FC9               	goto	i1l1836
  4469     07E9                     u148_20:
  4470     07E9                     i1l200:
  4471     07E9  0008               	return
  4472     07EA                     __end_ofi1_LCD_print:
  4473                           
  4474                           	psect	text25
  4475     0F7F                     __ptext25:	
  4476 ;; *************** function i1_LCD_data *****************
  4477 ;; Defined at:
  4478 ;;		line 273 in file "env_esclavo.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  data            1    wreg     unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  data            1    2[BANK0 ] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1
  4492 ;;      Params:         0       0       0
  4493 ;;      Locals:         0       1       0
  4494 ;;      Temps:          0       2       0
  4495 ;;      Totals:         0       3       0
  4496 ;;Total ram usage:        3 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		i1_LCD_print
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505     0F7F                     i1_LCD_data:	
  4506                           ;psect for function i1_LCD_data
  4507                           
  4508                           
  4509                           ;incstack = 0
  4510                           ; Regs used in i1_LCD_data: [wreg]
  4511                           ;i1LCD_data@data stored from wreg
  4512     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4513     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  4514     0F81  00A2               	movwf	i1LCD_data@data
  4515     0F82                     i1l1584:
  4516                           
  4517                           ;env_esclavo.c: 274:     RA0 = 1;
  4518     0F82  1405               	bsf	5,0	;volatile
  4519                           
  4520                           ;env_esclavo.c: 275:     RA1 = 0;
  4521     0F83  1085               	bcf	5,1	;volatile
  4522     0F84                     i1l1586:
  4523                           
  4524                           ;env_esclavo.c: 276:     PORTB = data;
  4525     0F84  0822               	movf	i1LCD_data@data,w
  4526     0F85  0086               	movwf	6	;volatile
  4527     0F86                     i1l1588:
  4528                           
  4529                           ;env_esclavo.c: 277:     RA2 = 1;
  4530     0F86  1505               	bsf	5,2	;volatile
  4531                           
  4532                           ;env_esclavo.c: 278:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4533     0F87  3003               	movlw	3
  4534     0F88  1283               	bcf	3,5	;RP0=0, select bank0
  4535     0F89  1303               	bcf	3,6	;RP1=0, select bank0
  4536     0F8A  00A1               	movwf	??i1_LCD_data+1
  4537     0F8B  3097               	movlw	151
  4538     0F8C  00A0               	movwf	??i1_LCD_data
  4539     0F8D                     u234_27:
  4540     0F8D  0BA0               	decfsz	??i1_LCD_data,f
  4541     0F8E  2F8D               	goto	u234_27
  4542     0F8F  0BA1               	decfsz	??i1_LCD_data+1,f
  4543     0F90  2F8D               	goto	u234_27
  4544     0F91  0000               	nop
  4545     0F92                     i1l1590:
  4546                           
  4547                           ;env_esclavo.c: 279:     RA2 = 0;
  4548     0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4549     0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4550     0F94  1105               	bcf	5,2	;volatile
  4551     0F95                     i1l181:
  4552     0F95  0008               	return
  4553     0F96                     __end_ofi1_LCD_data:
  4554                           
  4555                           	psect	text26
  4556     0F48                     __ptext26:	
  4557 ;; *************** function i1_LCD_clear *****************
  4558 ;; Defined at:
  4559 ;;		line 306 in file "env_esclavo.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0, pclath, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1
  4573 ;;      Params:         0       0       0
  4574 ;;      Locals:         0       0       0
  4575 ;;      Temps:          0       2       0
  4576 ;;      Totals:         0       2       0
  4577 ;;Total ram usage:        2 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 1
  4580 ;; This function calls:
  4581 ;;		i1_LCD_command
  4582 ;; This function is called by:
  4583 ;;		_ISR
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587     0F48                     i1_LCD_clear:	
  4588                           ;psect for function i1_LCD_clear
  4589                           
  4590     0F48                     i1l1820:	
  4591                           ;incstack = 0
  4592                           ; Regs used in i1_LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  4593                           
  4594                           
  4595                           ;env_esclavo.c: 307:     LCD_command(0x01);
  4596     0F48  3001               	movlw	1
  4597     0F49  158A  2768  158A   	fcall	i1_LCD_command
  4598     0F4C                     i1l1822:
  4599                           
  4600                           ;env_esclavo.c: 308:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4601     0F4C  3003               	movlw	3
  4602     0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  4603     0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  4604     0F4F  00A4               	movwf	??i1_LCD_clear+1
  4605     0F50  3097               	movlw	151
  4606     0F51  00A3               	movwf	??i1_LCD_clear
  4607     0F52                     u235_27:
  4608     0F52  0BA3               	decfsz	??i1_LCD_clear,f
  4609     0F53  2F52               	goto	u235_27
  4610     0F54  0BA4               	decfsz	??i1_LCD_clear+1,f
  4611     0F55  2F52               	goto	u235_27
  4612     0F56  0000               	nop
  4613     0F57                     i1l187:
  4614     0F57  0008               	return
  4615     0F58                     __end_ofi1_LCD_clear:
  4616                           
  4617                           	psect	text27
  4618     0F68                     __ptext27:	
  4619 ;; *************** function i1_LCD_command *****************
  4620 ;; Defined at:
  4621 ;;		line 264 in file "env_esclavo.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  command         1    wreg     unsigned char 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  command         1    2[BANK0 ] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1
  4635 ;;      Params:         0       0       0
  4636 ;;      Locals:         0       1       0
  4637 ;;      Temps:          0       2       0
  4638 ;;      Totals:         0       3       0
  4639 ;;Total ram usage:        3 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		i1_LCD_clear
  4645 ;;		i1_LCD_setCursor
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649     0F68                     i1_LCD_command:	
  4650                           ;psect for function i1_LCD_command
  4651                           
  4652                           
  4653                           ;incstack = 0
  4654                           ; Regs used in i1_LCD_command: [wreg]
  4655                           ;i1LCD_command@command stored from wreg
  4656     0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4657     0F69  1303               	bcf	3,6	;RP1=0, select bank0
  4658     0F6A  00A2               	movwf	i1LCD_command@command
  4659     0F6B                     i1l1576:
  4660                           
  4661                           ;env_esclavo.c: 265:     RA0 = 0;
  4662     0F6B  1005               	bcf	5,0	;volatile
  4663                           
  4664                           ;env_esclavo.c: 266:     RA1 = 0;
  4665     0F6C  1085               	bcf	5,1	;volatile
  4666     0F6D                     i1l1578:
  4667                           
  4668                           ;env_esclavo.c: 267:     PORTB = command;
  4669     0F6D  0822               	movf	i1LCD_command@command,w
  4670     0F6E  0086               	movwf	6	;volatile
  4671     0F6F                     i1l1580:
  4672                           
  4673                           ;env_esclavo.c: 268:     RA2 = 1;
  4674     0F6F  1505               	bsf	5,2	;volatile
  4675                           
  4676                           ;env_esclavo.c: 269:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4677     0F70  3003               	movlw	3
  4678     0F71  1283               	bcf	3,5	;RP0=0, select bank0
  4679     0F72  1303               	bcf	3,6	;RP1=0, select bank0
  4680     0F73  00A1               	movwf	??i1_LCD_command+1
  4681     0F74  3097               	movlw	151
  4682     0F75  00A0               	movwf	??i1_LCD_command
  4683     0F76                     u236_27:
  4684     0F76  0BA0               	decfsz	??i1_LCD_command,f
  4685     0F77  2F76               	goto	u236_27
  4686     0F78  0BA1               	decfsz	??i1_LCD_command+1,f
  4687     0F79  2F76               	goto	u236_27
  4688     0F7A  0000               	nop
  4689     0F7B                     i1l1582:
  4690                           
  4691                           ;env_esclavo.c: 270:     RA2 = 0;
  4692     0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  4693     0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  4694     0F7D  1105               	bcf	5,2	;volatile
  4695     0F7E                     i1l178:
  4696     0F7E  0008               	return
  4697     0F7F                     __end_ofi1_LCD_command:
  4698                           
  4699                           	psect	text28
  4700     074D                     __ptext28:	
  4701 ;; *************** function i1_I2C_Master_Init *****************
  4702 ;; Defined at:
  4703 ;;		line 395 in file "env_esclavo.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  c               4   14[BANK0 ] const unsigned long 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1
  4717 ;;      Params:         0       4       0
  4718 ;;      Locals:         0       0       0
  4719 ;;      Temps:          0       4       0
  4720 ;;      Totals:         0       8       0
  4721 ;;Total ram usage:        8 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 1
  4724 ;; This function calls:
  4725 ;;		i1___lldiv
  4726 ;; This function is called by:
  4727 ;;		_ISR
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731     074D                     i1_I2C_Master_Init:	
  4732                           ;psect for function i1_I2C_Master_Init
  4733                           
  4734     074D                     i1l1842:	
  4735                           ;incstack = 0
  4736                           ; Regs used in i1_I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4737                           
  4738                           
  4739                           ;env_esclavo.c: 396:     SSPCON = 0b00101000;
  4740     074D  3028               	movlw	40
  4741     074E  1283               	bcf	3,5	;RP0=0, select bank0
  4742     074F  1303               	bcf	3,6	;RP1=0, select bank0
  4743     0750  0094               	movwf	20	;volatile
  4744     0751                     i1l1844:
  4745                           
  4746                           ;env_esclavo.c: 397:    SSPADD = (unsigned char)((4000000 / (4 * c)) - 1);
  4747     0751  082E               	movf	i1I2C_Master_Init@c,w
  4748     0752  00B2               	movwf	??i1_I2C_Master_Init
  4749     0753  082F               	movf	i1I2C_Master_Init@c+1,w
  4750     0754  00B3               	movwf	??i1_I2C_Master_Init+1
  4751     0755  0830               	movf	i1I2C_Master_Init@c+2,w
  4752     0756  00B4               	movwf	??i1_I2C_Master_Init+2
  4753     0757  0831               	movf	i1I2C_Master_Init@c+3,w
  4754     0758  00B5               	movwf	??i1_I2C_Master_Init+3
  4755     0759  3002               	movlw	2
  4756     075A                     u149_25:
  4757     075A  1003               	clrc
  4758     075B  0DB2               	rlf	??i1_I2C_Master_Init,f
  4759     075C  0DB3               	rlf	??i1_I2C_Master_Init+1,f
  4760     075D  0DB4               	rlf	??i1_I2C_Master_Init+2,f
  4761     075E  0DB5               	rlf	??i1_I2C_Master_Init+3,f
  4762     075F                     u149_20:
  4763     075F  3EFF               	addlw	-1
  4764     0760  1D03               	skipz
  4765     0761  2F5A               	goto	u149_25
  4766     0762  0835               	movf	??i1_I2C_Master_Init+3,w
  4767     0763  00A3               	movwf	i1___lldiv@divisor+3
  4768     0764  0834               	movf	??i1_I2C_Master_Init+2,w
  4769     0765  00A2               	movwf	i1___lldiv@divisor+2
  4770     0766  0833               	movf	??i1_I2C_Master_Init+1,w
  4771     0767  00A1               	movwf	i1___lldiv@divisor+1
  4772     0768  0832               	movf	??i1_I2C_Master_Init,w
  4773     0769  00A0               	movwf	i1___lldiv@divisor
  4774     076A  3000               	movlw	0
  4775     076B  00A7               	movwf	i1___lldiv@dividend+3
  4776     076C  303D               	movlw	61
  4777     076D  00A6               	movwf	i1___lldiv@dividend+2
  4778     076E  3009               	movlw	9
  4779     076F  00A5               	movwf	i1___lldiv@dividend+1
  4780     0770  3000               	movlw	0
  4781     0771  00A4               	movwf	i1___lldiv@dividend
  4782     0772  118A  259D  118A   	fcall	i1___lldiv
  4783     0775  1283               	bcf	3,5	;RP0=0, select bank0
  4784     0776  1303               	bcf	3,6	;RP1=0, select bank0
  4785     0777  0820               	movf	?i1___lldiv,w
  4786     0778  3EFF               	addlw	255
  4787     0779  1683               	bsf	3,5	;RP0=1, select bank1
  4788     077A  1303               	bcf	3,6	;RP1=0, select bank1
  4789     077B  0093               	movwf	19	;volatile
  4790     077C                     i1l1846:
  4791                           
  4792                           ;env_esclavo.c: 399:     SSPSTAT = 0x00;
  4793     077C  0194               	clrf	20	;volatile
  4794     077D                     i1l1848:
  4795                           
  4796                           ;env_esclavo.c: 400:     TRISC3 = 1;
  4797     077D  1587               	bsf	7,3	;volatile
  4798     077E                     i1l1850:
  4799                           
  4800                           ;env_esclavo.c: 401:     TRISC4 = 1;
  4801     077E  1607               	bsf	7,4	;volatile
  4802     077F                     i1l229:
  4803     077F  0008               	return
  4804     0780                     __end_ofi1_I2C_Master_Init:
  4805                           
  4806                           	psect	text29
  4807     059D                     __ptext29:	
  4808 ;; *************** function i1___lldiv *****************
  4809 ;; Defined at:
  4810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  divisor         4    0[BANK0 ] unsigned long 
  4813 ;;  dividend        4    4[BANK0 ] unsigned long 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  quotient        4    9[BANK0 ] unsigned long 
  4816 ;;  counter         1   13[BANK0 ] unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  4    0[BANK0 ] unsigned long 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0, btemp+1
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1
  4826 ;;      Params:         0       8       0
  4827 ;;      Locals:         0       5       0
  4828 ;;      Temps:          0       1       0
  4829 ;;      Totals:         0      14       0
  4830 ;;Total ram usage:       14 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		i1_I2C_Master_Init
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839     059D                     i1___lldiv:	
  4840                           ;psect for function i1___lldiv
  4841                           
  4842     059D                     i1l1592:	
  4843                           ;incstack = 0
  4844                           ; Regs used in i1___lldiv: [wreg+status,2+status,0+btemp+1]
  4845                           
  4846     059D  3000               	movlw	0
  4847     059E  1283               	bcf	3,5	;RP0=0, select bank0
  4848     059F  1303               	bcf	3,6	;RP1=0, select bank0
  4849     05A0  00AC               	movwf	i1___lldiv@quotient+3
  4850     05A1  3000               	movlw	0
  4851     05A2  00AB               	movwf	i1___lldiv@quotient+2
  4852     05A3  3000               	movlw	0
  4853     05A4  00AA               	movwf	i1___lldiv@quotient+1
  4854     05A5  3000               	movlw	0
  4855     05A6  00A9               	movwf	i1___lldiv@quotient
  4856     05A7  0823               	movf	i1___lldiv@divisor+3,w
  4857     05A8  0422               	iorwf	i1___lldiv@divisor+2,w
  4858     05A9  0421               	iorwf	i1___lldiv@divisor+1,w
  4859     05AA  0420               	iorwf	i1___lldiv@divisor,w
  4860     05AB  1903               	skipnz
  4861     05AC  2DAE               	goto	u105_21
  4862     05AD  2DAF               	goto	u105_20
  4863     05AE                     u105_21:
  4864     05AE  2DFC               	goto	i1l1614
  4865     05AF                     u105_20:
  4866     05AF                     i1l1594:
  4867     05AF  01AD               	clrf	i1___lldiv@counter
  4868     05B0  0AAD               	incf	i1___lldiv@counter,f
  4869     05B1  2DBF               	goto	i1l1600
  4870     05B2                     i1l1596:
  4871     05B2  3001               	movlw	1
  4872     05B3  00A8               	movwf	??i1___lldiv
  4873     05B4                     u106_25:
  4874     05B4  1003               	clrc
  4875     05B5  0DA0               	rlf	i1___lldiv@divisor,f
  4876     05B6  0DA1               	rlf	i1___lldiv@divisor+1,f
  4877     05B7  0DA2               	rlf	i1___lldiv@divisor+2,f
  4878     05B8  0DA3               	rlf	i1___lldiv@divisor+3,f
  4879     05B9  0BA8               	decfsz	??i1___lldiv,f
  4880     05BA  2DB4               	goto	u106_25
  4881     05BB                     i1l1598:
  4882     05BB  3001               	movlw	1
  4883     05BC  00FF               	movwf	btemp+1
  4884     05BD  087F               	movf	btemp+1,w
  4885     05BE  07AD               	addwf	i1___lldiv@counter,f
  4886     05BF                     i1l1600:
  4887     05BF  1FA3               	btfss	i1___lldiv@divisor+3,7
  4888     05C0  2DC2               	goto	u107_21
  4889     05C1  2DC3               	goto	u107_20
  4890     05C2                     u107_21:
  4891     05C2  2DB2               	goto	i1l1596
  4892     05C3                     u107_20:
  4893     05C3                     i1l1602:
  4894     05C3  3001               	movlw	1
  4895     05C4  00A8               	movwf	??i1___lldiv
  4896     05C5                     u108_25:
  4897     05C5  1003               	clrc
  4898     05C6  0DA9               	rlf	i1___lldiv@quotient,f
  4899     05C7  0DAA               	rlf	i1___lldiv@quotient+1,f
  4900     05C8  0DAB               	rlf	i1___lldiv@quotient+2,f
  4901     05C9  0DAC               	rlf	i1___lldiv@quotient+3,f
  4902     05CA  0BA8               	decfsz	??i1___lldiv,f
  4903     05CB  2DC5               	goto	u108_25
  4904     05CC                     i1l1604:
  4905     05CC  0823               	movf	i1___lldiv@divisor+3,w
  4906     05CD  0227               	subwf	i1___lldiv@dividend+3,w
  4907     05CE  1D03               	skipz
  4908     05CF  2DDA               	goto	u109_25
  4909     05D0  0822               	movf	i1___lldiv@divisor+2,w
  4910     05D1  0226               	subwf	i1___lldiv@dividend+2,w
  4911     05D2  1D03               	skipz
  4912     05D3  2DDA               	goto	u109_25
  4913     05D4  0821               	movf	i1___lldiv@divisor+1,w
  4914     05D5  0225               	subwf	i1___lldiv@dividend+1,w
  4915     05D6  1D03               	skipz
  4916     05D7  2DDA               	goto	u109_25
  4917     05D8  0820               	movf	i1___lldiv@divisor,w
  4918     05D9  0224               	subwf	i1___lldiv@dividend,w
  4919     05DA                     u109_25:
  4920     05DA  1C03               	skipc
  4921     05DB  2DDD               	goto	u109_21
  4922     05DC  2DDE               	goto	u109_20
  4923     05DD                     u109_21:
  4924     05DD  2DED               	goto	i1l1610
  4925     05DE                     u109_20:
  4926     05DE                     i1l1606:
  4927     05DE  0820               	movf	i1___lldiv@divisor,w
  4928     05DF  02A4               	subwf	i1___lldiv@dividend,f
  4929     05E0  0821               	movf	i1___lldiv@divisor+1,w
  4930     05E1  1C03               	skipc
  4931     05E2  0F21               	incfsz	i1___lldiv@divisor+1,w
  4932     05E3  02A5               	subwf	i1___lldiv@dividend+1,f
  4933     05E4  0822               	movf	i1___lldiv@divisor+2,w
  4934     05E5  1C03               	skipc
  4935     05E6  0F22               	incfsz	i1___lldiv@divisor+2,w
  4936     05E7  02A6               	subwf	i1___lldiv@dividend+2,f
  4937     05E8  0823               	movf	i1___lldiv@divisor+3,w
  4938     05E9  1C03               	skipc
  4939     05EA  0F23               	incfsz	i1___lldiv@divisor+3,w
  4940     05EB  02A7               	subwf	i1___lldiv@dividend+3,f
  4941     05EC                     i1l1608:
  4942     05EC  1429               	bsf	i1___lldiv@quotient,0
  4943     05ED                     i1l1610:
  4944     05ED  3001               	movlw	1
  4945     05EE                     u110_25:
  4946     05EE  1003               	clrc
  4947     05EF  0CA3               	rrf	i1___lldiv@divisor+3,f
  4948     05F0  0CA2               	rrf	i1___lldiv@divisor+2,f
  4949     05F1  0CA1               	rrf	i1___lldiv@divisor+1,f
  4950     05F2  0CA0               	rrf	i1___lldiv@divisor,f
  4951     05F3  3EFF               	addlw	-1
  4952     05F4  1D03               	skipz
  4953     05F5  2DEE               	goto	u110_25
  4954     05F6                     i1l1612:
  4955     05F6  3001               	movlw	1
  4956     05F7  02AD               	subwf	i1___lldiv@counter,f
  4957     05F8  1D03               	btfss	3,2
  4958     05F9  2DFB               	goto	u111_21
  4959     05FA  2DFC               	goto	u111_20
  4960     05FB                     u111_21:
  4961     05FB  2DC3               	goto	i1l1602
  4962     05FC                     u111_20:
  4963     05FC                     i1l1614:
  4964     05FC  082C               	movf	i1___lldiv@quotient+3,w
  4965     05FD  00A3               	movwf	?i1___lldiv+3
  4966     05FE  082B               	movf	i1___lldiv@quotient+2,w
  4967     05FF  00A2               	movwf	?i1___lldiv+2
  4968     0600  082A               	movf	i1___lldiv@quotient+1,w
  4969     0601  00A1               	movwf	?i1___lldiv+1
  4970     0602  0829               	movf	i1___lldiv@quotient,w
  4971     0603  00A0               	movwf	?i1___lldiv
  4972     0604                     i1l366:
  4973     0604  0008               	return
  4974     0605                     __end_ofi1___lldiv:
  4975     007E                     btemp	set	126	;btemp
  4976     007E                     wtemp0	set	126
  4977                           
  4978                           	psect	config
  4979                           
  4980                           ;Config register CONFIG @ 0x2007
  4981                           ;	Oscillator Selection bits
  4982                           ;	FOSC = XT, XT oscillator
  4983                           ;	Watchdog Timer Enable bit
  4984                           ;	WDTE = OFF, WDT disabled
  4985                           ;	Power-up Timer Enable bit
  4986                           ;	PWRTE = OFF, PWRT disabled
  4987                           ;	Brown-out Reset Enable bit
  4988                           ;	BOREN = ON, BOR enabled
  4989                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4990                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4991                           ;	Data EEPROM Memory Code Protection bit
  4992                           ;	CPD = OFF, Data EEPROM code protection off
  4993                           ;	Flash Program Memory Write Enable bits
  4994                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4995                           ;	In-Circuit Debugger Mode bit
  4996                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  4997                           ;	Flash Program Memory Code Protection bit
  4998                           ;	CP = OFF, Code protection off
  4999     2007                     	org	8199
  5000     2007  3F79               	dw	16249

Data Sizes:
    Strings     125
    Constant    16
    Data        1
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     35      64
    BANK1            94     29      45

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 4
		 -> asciiValue(BANK0[4]), 

    LCD_print@string	PTR const unsigned char  size(2) Largest target is 18
		 -> displayString(BANK0[16]), ISR@receiveBuffer(BANK1[16]), STR_1(CODE[15]), STR_2(CODE[15]), 
		 -> STR_3(CODE[16]), STR_4(CODE[17]), STR_5(CODE[15]), STR_6(CODE[18]), 
		 -> STR_7(CODE[13]), STR_8(CODE[16]), 

    memset@dest	PTR void  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 

    Send_Message_To_Master@message	PTR unsigned char  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> displayString(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_clear
    _main->_LCD_init
    _main->_LCD_print
    _Handle_Keypress->_LCD_clear
    _Handle_Keypress->_LCD_init
    _Handle_Keypress->_LCD_print
    _atoi->___wmul
    _Send_Message_To_Master->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _LCD_setCursor->_LCD_command
    _LCD_print->_LCD_data
    _LCD_init->_LCD_command
    _LCD_clear->_LCD_command

Critical Paths under _ISR in BANK0

    _ISR->i1_I2C_Master_Init
    i1_LCD_setCursor->i1_LCD_command
    i1_LCD_print->i1_LCD_data
    i1_LCD_clear->i1_LCD_command
    i1_I2C_Master_Init->i1___lldiv

Critical Paths under _main in BANK1

    _main->_Handle_Keypress
    _Handle_Keypress->_Send_Message_To_Master
    _atoi->___wmul
    _Send_Message_To_Master->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7071
                                             28 BANK1      1     1      0
                    _Handle_Keypress
                     _I2C_Slave_Init
                          _LCD_clear
                           _LCD_init
                          _LCD_print
                      _LCD_setCursor
                _Prepare_Keypad_Pins
                        _Read_Keypad
 ---------------------------------------------------------------------------------
 (1) _Read_Keypad                                          6     6      0     291
                                             30 BANK0      2     2      0
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Prepare_Keypad_Pins                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Keypress                                     10    10      0    4624
                                             18 BANK1     10    10      0
                          _LCD_clear
                           _LCD_init
                          _LCD_print
                      _LCD_setCursor
                   _Prepare_LCD_Pins
             _Send_Message_To_Master
                               _atoi
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     353
                                             30 BANK0      4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     686
                                              2 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                             30 BANK0      4     0      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Send_Message_To_Master                               1     1      0     760
                                             17 BANK1      1     1      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      31
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                             30 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      8     4      4     597
                                             31 BANK0      4     0      4
                                             13 BANK1      4     4      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     421
                                             30 BANK0      1     1      0
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (2) _Prepare_LCD_Pins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setCursor                                        5     4      1    1107
                                             33 BANK0      1     0      1
                                              0 BANK1      4     4      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_print                                            2     0      2     891
                                             33 BANK0      2     0      2
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0      31
                                             30 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      31
                                             33 BANK0      2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            2     2      0      31
                                             33 BANK0      2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      31
                                             30 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  8     8      0     692
                                             22 BANK0      8     8      0
                  i1_I2C_Master_Init
                        i1_LCD_clear
                        i1_LCD_print
                    i1_LCD_setCursor
 ---------------------------------------------------------------------------------
 (6) i1_LCD_setCursor                                      5     4      1     218
                                              3 BANK0      5     4      1
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (6) i1_LCD_print                                          2     0      2     145
                                              3 BANK0      2     0      2
                         i1_LCD_data
 ---------------------------------------------------------------------------------
 (7) i1_LCD_data                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) i1_LCD_clear                                          2     2      0      22
                                              3 BANK0      2     2      0
                      i1_LCD_command
 ---------------------------------------------------------------------------------
 (7) i1_LCD_command                                        3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Init                                    8     4      4     262
                                             14 BANK0      8     4      4
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (7) i1___lldiv                                           14     6      8     214
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Handle_Keypress
     _LCD_clear
       _LCD_command
     _LCD_init
       _LCD_command
     _LCD_print
       _LCD_data
     _LCD_setCursor
       _LCD_command
     _Prepare_LCD_Pins
     _Send_Message_To_Master
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_Slave_Init
     _atoi
       ___wmul
     _memset
   _I2C_Slave_Init
   _LCD_clear
   _LCD_init
   _LCD_print
   _LCD_setCursor
   _Prepare_Keypad_Pins
   _Read_Keypad

 _ISR (ROOT)
   i1_I2C_Master_Init
     i1___lldiv
   i1_LCD_clear
     i1_LCD_command
   i1_LCD_print
     i1_LCD_data
   i1_LCD_setCursor
     i1_LCD_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E     1D      2D       6       47.9%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     23      40       4       68.1%
BITBANK0            5E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6D       8        0.0%
ABS                  0      0      6D       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 26 20:00:41 2024

          ?_Prepare_Keypad_Pins 0020                               pc 0002                     _SSPSTATbits 0094  
                            fsr 0004             ___wmul@multiplicand 0040                             l200 07C7  
                           l203 0F10                             l124 00E5                             l220 0F2F  
                           l232 0F17                             l152 07FD                             l216 03B7  
                           l217 0403                             l226 06D6                             l330 072B  
                           l235 0F1E                             l139 0163                             l244 0F47  
                           l332 074C                             l181 0FC3                             l229 0715  
                           l149 028D                             l238 0F3A                             l184 0651  
                           l193 0FF1                             l178 0FAC                             l194 0FFF  
                           l187 0F67                             l366 059C                             l802 0524  
                           l808 07A5                             _GIE 005F                             _RA0 0028  
                           _RA1 0029                             _RA2 002A                             _PEN 048A  
                           _ISR 028E                             _SEN 0488                             fsr0 0004  
                           indf 0000                            ?_ISR 0020                            l2000 0FB4  
                          l2002 0FC0                            l2010 0F36                            l2004 0F11  
                          l2012 0F18                            l2020 071F                            l2030 0605  
                          l2006 0F14                            l2014 0F1B                            l2110 06B1  
                          l2102 069B                            l2022 0733                            l2040 0628  
                          l2032 0609                            l2008 0F33                            l2120 06D2  
                          l2112 06B7                            l2104 069E                            l2024 073A  
                          l2016 0716                            l2200 008F                            l2050 0F5C  
                          l2042 0633                            l2034 060A                            l2130 0F0D  
                          l2114 06BD                            l2106 06A9                            l2026 0740  
                          l2018 071A                            l2122 0783                            l2202 0097  
                          l2210 00B8                            l2044 0642                            l2036 0615  
                          l2060 0FFB                            l2052 0FE3                            l2116 06C7  
                          l2108 06AC                            l2124 0786                            l2300 020C  
                          l2220 00CA                            l2212 00BB                            l2204 009F  
                          l2132 0F27                            l2140 036B                            l2046 0646  
                          l2038 0619                            l2062 07A6                            l2054 0FE8  
                          l2118 06CE                            l2070 04A4                            l2126 078F  
                          l2310 0235                            l2302 020E                            l2230 00EE  
                          l2222 00D2                            l2214 00BC                            l2206 00A3  
                          l2142 037D                            l2134 0359                            l2048 0F58  
                          l2064 07A7                            l2056 0FED                            l2080 04C8  
                          l2072 04A8                            l2128 0795                            l2320 0265  
                          l2312 0242                            l2304 0213                            l2240 0105  
                          l2232 00F2                            l2224 00DA                            l2208 00B0  
                          l2216 00BE                            l2160 03C3                            l2152 038F  
                          l2144 0381                            l2136 035D                            l2066 07B1  
                          l2058 0FF3                            l2082 04CA                            l2074 04AC  
                          l2330 027C                            l2322 026B                            l2314 0248  
                          l2306 0219                            l2250 012C                            l2242 010B  
                          l2234 00F5                            l2226 00E0                            l2218 00C4  
                          l2170 03F7                            l2162 03CA                            l2146 038B  
                          l2068 07B9                            l2092 0504                            l2084 04CF  
                          l2076 04B5                            l2332 0285                            l2324 026F  
                          l2316 0255                            l2308 0228                            l2260 0170  
                          l2252 0139                            l2244 0118                            l2236 00FB  
                          l2228 00E6                            l2180 002D                            l2156 03A4  
                          l2340 066C                            l2094 050F                            l2078 04C0  
                          l2326 0272                            l2318 025F                            l2270 01A1  
                          l2262 017F                            l2254 013D                            l2246 011F  
                          l2238 0102                            l2190 0062                            l2182 0034  
                          l2158 03B8                            l2166 03E2                            l2174 0402  
                          l2350 068C                            l2342 0673                            l2334 0652  
                          l2096 0514                            l2088 04D8                            l2328 0275  
                          l2280 01BF                            l2272 01A5                            l2256 014C  
                          l2248 0125                            l2264 0185                            l2192 0071  
                          l2184 003C                            l2168 03EA                            l2352 0691  
                          l2344 067C                            l2336 065C                            l2098 0520  
                          l2290 01EA                            l2282 01C8                            l2274 01A8  
                          l2266 018B                            l2258 015B                            l2194 0078  
                          l2186 0046                            l2178 002A                            l2346 0683  
                          l2338 0663                            l2292 01F1                            l2284 01D7  
                          l2276 01AF                            l2268 019A                            l2196 0085  
                          l2188 0053                            l2348 0686                            l2294 01FA  
                          l2286 01DA                            l2278 01B8                            l2198 0087  
                          l2296 01FD                            l2288 01E1                            l2298 0208  
                          l1940 0537                            l1932 0F3B                            l1950 0562  
                          l1942 053A                            l1934 0F3B                            l1952 0576  
                          l1944 0549                            l1960 0594                            l1936 0F43  
                          l1954 0584                            l1946 054F                            l1938 0525  
                          l1970 07F9                            l1956 0585                            l1948 0553  
                          l1980 06DB                            l1972 07FA                            l1964 07ED  
                          l1990 0F9B                            l1958 058E                            l1982 0712  
                          l1974 07FB                            l1966 07F5                            l1992 0F9D  
                          l1984 0713                            l1976 07FC                            l1968 07F8  
                          l1994 0FA9                            l1986 0714                            l1978 06D7  
                          l1988 0F99                            l1996 0FB0                            l1998 0FB2  
                          STR_1 0467                            STR_2 0485                            STR_3 0457  
                          STR_4 0436                            STR_5 0476                            STR_6 0424  
                          STR_7 0494                            STR_8 0447                    ?_LCD_command 0020  
                          u2000 00C4                            u2001 00C3                            u2010 00CA  
                          u2011 00C9                            u2100 015B                            u2020 00D2  
                          u2101 015A                            u2021 00D1                            u2110 0170  
                          u2030 00EE                            u2111 016F                            u2031 00ED  
                          u2120 017F                            u2040 00FB                            u2200 0691  
                          u2121 017E                            u2105 0157                            u2041 00FA  
                          u2201 0690                            u2130 018B                            u2050 0102  
                          u2131 018A                            u2115 016C                            u2051 0101  
                          u2140 019A                            u2060 010B                            u2141 0199  
                          u2125 017B                            u2061 010A                            u2150 0213  
                          u2070 0118                            u2151 0212                            u2071 0117  
                          u1600 0F43                            u2160 0219                            u2080 0125  
                          u1601 0F42                            u2161 0218                            u2145 0196  
                          u2081 0124                            u2217 0387                            u1610 0F47  
                          u2170 0228                            u2090 014C                            u2307 0F62  
                          u1611 0F46                            u2171 0227                            u2091 014B  
                          u2075 0114                            u2227 03BE                            u1620 0537  
                          u1700 071F                            u2180 0255                            u2317 0FA4  
                          u1621 0536                            u1701 071E                            u2181 0254  
                          u2237 01D0                            u2190 0683                            u2247 0FBB  
                          u2175 0224                            u2095 0148                            u2191 0682  
                          u1640 0553                            u1800 050F                            u2257 0611  
                          u1641 0552                            u1801 050E                            u2185 0251  
                          u1730 0740                            u1810 0514                            u2267 061F  
                          u1635 053E                            u1731 073F                            u1715 072D  
                          u1811 0513                            u1740 0FE8                            u1660 0576  
                          u1820 06C7                            u2277 062E                            u1741 0FE7  
                          u1661 0575                            u1821 06C6                            u1725 0734  
                          u1750 07C7                            u1830 07A5                            u1910 03F7  
                          u2287 063D                            u1751 07C6                            u1655 0557  
                          u1831 07A4                            u1911 03F6                            u1680 0594  
                          u1760 04B5                            u1920 0034                            u1840 036A  
                          u2297 064C                            u1681 0593                            u1665 0572  
                          u1761 04B4                            u1921 0033                            u1905 03CF  
                          u1841 0369                            u1690 06F7                            u1770 04C0  
                          u1930 003C                            u1675 0586                            u1771 04BF  
                          u1931 003B                            u1915 03F3                            u1780 04C8  
                          u1940 0053                            u1781 04C7                            u1941 0052  
                          u1845 0366                            u1790 04D7                            u1950 0062  
                          u1870 03A4                            u1854 0377                            u1695 06F2  
                          u1791 04D6                            u1951 0061                            u1871 03A3  
                          u1855 0375                            u1960 0071                            u1864 039B  
                          u1961 0070                            u1945 004F                            u1865 0399  
                          u1970 008F                            u1890 03B7                            u1971 008E  
                          u1955 005E                            u1891 03B6                            _PEIE 005E  
                          u1980 009F                            u1884 03AE                            u1981 009E  
                          u1965 006D                            u1885 03AC                            u1990 00B0  
                          u1991 00AF                            u1995 00AC                     ?i1_LCD_data 0020  
                          _atoi 04A1               i1___lldiv@divisor 0020                            _main 0652  
                          btemp 007E               i1___lldiv@counter 002D               i1LCD_print@string 0023  
             ??i1_LCD_setCursor 0000                            start 0011  __end_of_Send_Message_To_Master 06D7  
         ??_Prepare_Keypad_Pins 0000                           ??_ISR 0036                   ??_Read_Keypad 003E  
              ?_I2C_Master_Init 003F                ?_I2C_Master_Wait 0020                ?_I2C_Master_Stop 0020  
              __end_of_LCD_data 0FC4                __end_of_LCD_init 0652                           ?_atoi 00A2  
                         ?_main 0020                 __end_of___lldiv 059D              Handle_Keypress@key 00BB  
                         i1l200 07E9                           i1l170 034C                           i1l229 077F  
                         i1l181 0F95                           i1l175 034F                           i1l168 02A4  
                         i1l193 0FD5                           i1l178 0F7E                           i1l194 0FDF  
                         i1l187 0F57                           i1l366 0604                           _PORTB 0006  
                  ?i1_LCD_clear 0020                           _TRISA 0085                           _TRISB 0086  
                         _SSPIE 0463                           _SSPIF 0063                    ?i1_LCD_print 0023  
            i1___lldiv@dividend 0024                           atoi@n 00A7                           atoi@s 00A9  
                         pclath 000A                           status 0003                           wtemp0 007E  
               __initialization 0013                    __end_of_atoi 0525                    __end_of_main 0698  
            i1___lldiv@quotient 0029                          ??_atoi 00A4                          ??_main 0000  
                 _LCD_setCursor 0FE0               ??_Handle_Keypress 00B2             __end_of_Read_Keypad 0404  
             ?_I2C_Master_Start 0020               ?_I2C_Master_Write 0020               __end_of_LCD_clear 0F68  
             __end_of_LCD_print 07C8              ??_I2C_Master_Start 0000                          _ADCON1 009F  
            ??_I2C_Master_Write 0000                _Prepare_LCD_Pins 0F0D                          u110_25 05EE  
                        u111_20 05FC                          u111_21 05FB                          i1l1600 05BF  
                        i1l1610 05ED                          i1l1602 05C3                          i1l1612 05F6  
                        i1l1604 05CC                          i1l1606 05DE                          i1l1614 05FC  
                        i1l1608 05EC                          u105_20 05AF                          u105_21 05AE  
                        i1l1580 0F6F                          i1l1820 0F48                          i1l1900 02DC  
                        i1l1582 0F7B                          i1l1822 0F4C                          i1l1590 0F92  
                        i1l1830 0FD7                          i1l1910 0301                          i1l1902 02E3  
                        i1l1592 059D                          i1l1576 0F6B                          i1l1584 0F82  
                        i1l1840 07DB                          i1l1832 0FDB                          i1l1824 0FC7  
                        i1l1920 0324                          i1l1912 0304                          i1l1904 02EC  
                        i1l1594 05AF                          i1l1850 077E                          i1l1842 074D  
                        i1l1578 0F6D                          i1l1586 0F84                          i1l1834 07C8  
                        i1l1826 0FCC                          i1l1922 0333                          i1l1914 030B  
                        i1l1906 02F0                          i1l1930 034C                          i1l1596 05B2  
                        i1l1844 0751                          i1l1588 0F86                          i1l1836 07C9  
                        i1l1828 0FD1                          i1l1924 0336                          i1l1916 0314  
                        i1l1908 02F2                          u106_25 05B4                          i1l1598 05BB  
                        i1l1846 077C                          i1l1838 07D3                          i1l1926 033D  
                        i1l1918 031B                          u107_20 05C3                          i1l1848 077D  
                        i1l1928 0340                          i1l1880 029B                          i1l1872 028E  
                        u107_21 05C2                          i1l1890 02C3                          i1l1882 029F  
                        i1l1874 0292                          i1l1892 02C9                          i1l1884 02A8  
                        i1l1876 0294                          i1l1894 02CE                          i1l1886 02AC  
                        i1l1878 0295                          i1l1896 02D5                          i1l1888 02BB  
                        i1l1898 02D9                          u108_25 05C5                          u109_20 05DE  
                        u109_21 05DD                          u109_25 05DA                          u152_20 0292  
                        u152_21 0291                          u232_27 02FA                          u153_20 029B  
                        u153_21 029A                          u233_27 032C                          u154_20 029F  
                        u154_21 029E                          u234_27 0F8D                          u147_20 0FCC  
                        u155_20 02A8                          u147_21 0FCB                          u155_21 02A7  
                        u235_27 0F52                          u148_20 07E9                          u156_20 02AC  
                        u148_21 07E8                          u156_21 02AB                          u236_27 0F76  
                        u149_20 075F                          u157_20 02BB                          u157_21 02BA  
                        u149_25 075A                          u157_25 02B7                          u158_20 02CE  
                        u158_21 02CD                          u159_20 02D5                          u159_21 02D4  
                        _SSPADD 0093                          _TRISC3 043B                          _TRISC4 043C  
                        _SSPCON 0014                          _SSPBUF 0013                          ___wmul 0716  
                     ??___lldiv 003E                          _memset 0780                    LCD_data@data 0040  
                        _teclas 0414                  ?_LCD_setCursor 0041               __end_ofi1___lldiv 0605  
                        saved_w 007E         __end_of__initialization 0024                       ?_LCD_data 0020  
                     ?_LCD_init 0020                  __pcstackCOMMON 0000                    __pidataBANK0 07FE  
                   _Read_Keypad 0359                  i1LCD_data@data 0022                 i1_LCD_setCursor 0FC4  
         I2C_Slave_Init@address 003E                      __pbssBANK0 0043                      __pbssBANK1 00BD  
                  ??i1_LCD_data 0020                   i1_LCD_command 0F68                      ??_LCD_data 003E  
                    ??_LCD_init 0041                         ISR@temp 003D                      __pmaintext 0652  
                       ?___wmul 003E                      _asciiValue 005B                      __pintentry 0004  
               ??_LCD_setCursor 0000                         ?_memset 003E            Handle_Keypress@i_304 00B7  
          Handle_Keypress@i_299 00BA              __end_ofi1_LCD_data 0F96                         _SSPCON2 0091  
                       _SSPSTAT 0094                      __stringtab 0404                  ?i1_LCD_command 0020  
   __end_of_Prepare_Keypad_Pins 0F30           i1LCD_setCursor@column 0023                 _Handle_Keypress 0027  
                       ___lldiv 0525        __end_of_Prepare_LCD_Pins 0F11         __end_ofi1_LCD_setCursor 0FE0  
                       __ptext1 0359                         __ptext2 0F27                         __ptext3 0027  
                       __ptext4 0780                         __ptext5 04A1                         __ptext6 0716  
                       __ptext7 0698                         __ptext8 07EA                         __ptext9 0F30  
             i1_I2C_Master_Init 074D              ?i1_I2C_Master_Init 002E                         atoi@neg 00A6  
                       main@key 00BC                         clrloop0 0F20             ??i1_I2C_Master_Init 0032  
                     _LCD_clear 0F58            end_of_initialization 0024               _LCD_setCursor$343 00A1  
                     _LCD_print 07A6                         memset@c 003E                         memset@n 0040  
                       memset@p 00A1                 ___lldiv@divisor 00A0                 ___lldiv@counter 00AC  
               LCD_print@string 0041                  _I2C_Slave_Init 07EA                I2C_Master_Init@c 003F  
     __end_ofi1_I2C_Master_Init 0780                ISR@receiveBuffer 00BD                       _PORTAbits 0005  
                     _TRISAbits 0085                       i1___lldiv 059D                 ??i1_LCD_command 0020  
                    ?_LCD_clear 0020        ??_Send_Message_To_Master 0000                      ?_LCD_print 0041  
       __end_of_Handle_Keypress 028E          __end_of_I2C_Slave_Init 07FE   Send_Message_To_Master@message 00B1  
                  ?_Read_Keypad 0020                  __end_of___wmul 074D                ?i1_LCD_setCursor 0023  
                __end_of_memset 07A6                  __end_of_teclas 0424             start_initialization 0013  
                   __end_of_ISR 0359                      ?i1___lldiv 0020                   ??_LCD_command 003E  
             ??_I2C_Master_Init 00AD               ??_I2C_Master_Wait 0000               ??_I2C_Master_Stop 0000  
               ?_I2C_Slave_Init 0020                        ??___wmul 0000                     __pdataBANK0 005F  
                      ??_memset 0000                      memset@dest 00A0                LCD_setCursor@row 00A0  
       i1LCD_setCursor@position 0027                   ??i1_LCD_clear 0023                   ??i1_LCD_print 0000  
                     ___latbits 0001                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
          i1LCD_command@command 0022                     ??_LCD_clear 0041                     ??_LCD_print 0000  
                     _charCount 0045              i1I2C_Master_Init@c 002E                ?_Handle_Keypress 0020  
              _I2C_Master_Start 0F11                _I2C_Master_Write 0F30             __end_of_LCD_command 0FAD  
                      ISR@index 0043                       _asciiMode 004A                        ?___lldiv 00A0  
                   _asciiDigits 0049            I2C_Master_Write@data 003E           __end_of_LCD_setCursor 1000  
             ?_Prepare_LCD_Pins 0020                       __pstrings 0404              ??_Prepare_LCD_Pins 0000  
                _cursorPosition 0048                     _allow_input 0047                     ??i1___lldiv 0028  
           __end_ofi1_LCD_clear 0F58             __end_ofi1_LCD_print 07EA               interrupt_function 0004  
      Handle_Keypress@asciiCode 00B5                  ___wmul@product 00A0                        _LCD_data 0FAD  
                      _LCD_init 0605                       clear_ram0 0F1F          _Send_Message_To_Master 0698  
                   __stringbase 0413               ___wmul@multiplier 003E           LCD_setCursor@position 00A3  
              Handle_Keypress@i 00B9                     _LCD_command 0F96                        _i2c_role 005F  
            i1LCD_setCursor@row 0024             i1_LCD_setCursor$343 0025              __end_of__stringtab 0414  
                   i1_LCD_clear 0F48                 _I2C_Master_Init 06D7                 _I2C_Master_Wait 0F3B  
               _I2C_Master_Stop 0F18                     i1_LCD_print 07C8                        __ptext10 0F18  
                      __ptext11 0F11                        __ptext20 0F58                        __ptext12 0F3B  
                      __ptext21 0F96                        __ptext13 06D7                        __ptext22 028E  
                      __ptext14 0525                        __ptext23 0FC4                        __ptext15 0F0D  
                      __ptext24 07C8                        __ptext16 0FE0                        __ptext25 0F7F  
                      __ptext17 07A6                        __ptext26 0F48                        __ptext18 0FAD  
                      __ptext27 0F68                        __ptext19 0605                        __ptext28 074D  
                      __ptext29 059D           __end_ofi1_LCD_command 0F7F                ??_I2C_Slave_Init 0000  
      __end_of_I2C_Master_Start 0F18        __end_of_I2C_Master_Write 0F3B              LCD_command@command 0040  
                      intlevel1 0000                      i1_LCD_data 0F7F                ___lldiv@dividend 00A4  
                     stringcode 040E             LCD_setCursor@column 0041         __end_of_I2C_Master_Init 0716  
       __end_of_I2C_Master_Wait 0F48         __end_of_I2C_Master_Stop 0F1F                ___lldiv@quotient 00A8  
                      stringdir 040E                        stringtab 0404             _Prepare_Keypad_Pins 0F27  
                 _displayString 004B                  Read_Keypad@col 00A2                  Read_Keypad@row 00A0  
                    _SSPCONbits 0014         ?_Send_Message_To_Master 0020  
